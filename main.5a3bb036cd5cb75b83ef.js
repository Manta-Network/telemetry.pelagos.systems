/*! For license information please see main.5a3bb036cd5cb75b83ef.js.LICENSE.txt */
(()=>{var e={9087:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.App {\n  text-align: left;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  min-width: 1318px;\n}\n\n.App-no-telemetry {\n  width: 100vw;\n  height: 100vh;\n  line-height: 80vh;\n  font-size: 56px;\n  font-weight: 100;\n  text-align: center;\n  color: #888;\n}\n","",{version:3,sources:["webpack://./src/App.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,gBAAgB;EAChB,iDAAiD;EACjD,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,WAAW;AACb",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.App {\n  text-align: left;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  min-width: 1318px;\n}\n\n.App-no-telemetry {\n  width: 100vw;\n  height: 100vh;\n  line-height: 80vh;\n  font-size: 56px;\n  font-weight: 100;\n  text-align: center;\n  color: #888;\n}\n"],sourceRoot:""}]);const s=i},8644:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.AllChains-overlay {\n  position: fixed;\n  z-index: 19;\n  background: rgba(0, 0, 0, 0.35);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.AllChains-content {\n  max-height: calc(100vh - 2em);\n  max-width: calc(100vw - 2em);\n  border-radius: 4px;\n  width: 600px;\n  overflow: auto;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.AllChains-controls {\n  padding-bottom: 0.5em;\n  display: flex;\n  align-items: center;\n  padding: 0.5em;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.AllChains-controls input {\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  padding: 0.5em;\n  flex-grow: 1;\n  min-width: 100px;\n}\n\n.AllChains-controls-sortby {\n  padding: 0.4em 0.5em;\n  margin-left: 0.5em;\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  font-weight: bold;\n  font-size: 0.9em;\n  border: 1px solid black;\n}\n\n.AllChains-controls-sortby-active {\n  background-color: #2070a6;\n  border-color: #2070a6;\n  color: white;\n}\n\n.AllChains-chains {\n  flex-grow: 1;\n  overflow: auto;\n  padding: 0.5em;\n}\n\n.AllChains-chain {\n  padding: 10px 10px;\n  background: rgb(220, 220, 220);\n  color: black;\n  display: inline-flex;\n  margin-right: 0.5em;\n  margin-bottom: 0.5em;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.8em;\n  font-weight: bold;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n}\n\n.AllChains-chain-highlighted-text {\n  background-color: yellow;\n  color: black;\n}\n\n.AllChains-node-count {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1em;\n  background: #8c8787;\n  color: #fff;\n  font-weight: normal;\n  font-size: 0.9em;\n  margin-left: 0.5em;\n  padding: 0.3em 0.5em;\n}\n\n.AllChains-chain-selected {\n  background: #2070a6;\n  color: white;\n}\n\n.AllChains-chain-selected .AllChains-node-count {\n  background: white;\n  color: #2070a6;\n}\n","",{version:3,sources:["webpack://./src/components/AllChains.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,eAAe;EACf,WAAW;EACX,+BAA+B;EAC/B,OAAO;EACP,QAAQ;EACR,MAAM;EACN,SAAS;EACT,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,4BAA4B;EAC5B,kBAAkB;EAClB,YAAY;EACZ,cAAc;EACd,uBAAuB;EACvB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,mBAAmB;EACnB,cAAc;EACd,2CAA2C;AAC7C;;AAEA;EACE,oCAAoC;EACpC,kBAAkB;EAClB,cAAc;EACd,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,iBAAiB;EACjB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,cAAc;EACd,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,8BAA8B;EAC9B,YAAY;EACZ,oBAAoB;EACpB,mBAAmB;EACnB,oBAAoB;EACpB,kBAAkB;EAClB,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,wBAAwB;EACxB,YAAY;AACd;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;EAClB,mBAAmB;EACnB,WAAW;EACX,mBAAmB;EACnB,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.AllChains-overlay {\n  position: fixed;\n  z-index: 19;\n  background: rgba(0, 0, 0, 0.35);\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.AllChains-content {\n  max-height: calc(100vh - 2em);\n  max-width: calc(100vw - 2em);\n  border-radius: 4px;\n  width: 600px;\n  overflow: auto;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n}\n\n.AllChains-controls {\n  padding-bottom: 0.5em;\n  display: flex;\n  align-items: center;\n  padding: 0.5em;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.AllChains-controls input {\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  padding: 0.5em;\n  flex-grow: 1;\n  min-width: 100px;\n}\n\n.AllChains-controls-sortby {\n  padding: 0.4em 0.5em;\n  margin-left: 0.5em;\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  font-weight: bold;\n  font-size: 0.9em;\n  border: 1px solid black;\n}\n\n.AllChains-controls-sortby-active {\n  background-color: #2070a6;\n  border-color: #2070a6;\n  color: white;\n}\n\n.AllChains-chains {\n  flex-grow: 1;\n  overflow: auto;\n  padding: 0.5em;\n}\n\n.AllChains-chain {\n  padding: 10px 10px;\n  background: rgb(220, 220, 220);\n  color: black;\n  display: inline-flex;\n  margin-right: 0.5em;\n  margin-bottom: 0.5em;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.8em;\n  font-weight: bold;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n}\n\n.AllChains-chain-highlighted-text {\n  background-color: yellow;\n  color: black;\n}\n\n.AllChains-node-count {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 1em;\n  background: #8c8787;\n  color: #fff;\n  font-weight: normal;\n  font-size: 0.9em;\n  margin-left: 0.5em;\n  padding: 0.3em 0.5em;\n}\n\n.AllChains-chain-selected {\n  background: #2070a6;\n  color: white;\n}\n\n.AllChains-chain-selected .AllChains-node-count {\n  background: white;\n  color: #2070a6;\n}\n"],sourceRoot:""}]);const s=i},4609:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Chain-content-container {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 148px;\n}\n\n.Chain-content {\n  width: 100%;\n  min-width: 1350px;\n  min-height: 100%;\n  background: #2c2b2b;\n  color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 30px;\n}\n","",{version:3,sources:["webpack://./src/components/Chain/Chain.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,gBAAgB;EAChB,mBAAmB;EACnB,WAAW;EACX,yCAAyC;AAC3C",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Chain-content-container {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 148px;\n}\n\n.Chain-content {\n  width: 100%;\n  min-width: 1350px;\n  min-height: 100%;\n  background: #2c2b2b;\n  color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 30px;\n}\n"],sourceRoot:""}]);const s=i},9816:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Header {\n  width: 100%;\n  height: 108px;\n  overflow: hidden;\n  background: #fff;\n  color: #000;\n  min-width: 1350px;\n  position: relative;\n}\n\n.Header-tabs {\n  position: absolute;\n  right: 5px;\n  bottom: 10px;\n  width: 200px;\n  text-align: right;\n}\n","",{version:3,sources:["webpack://./src/components/Chain/Header.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,WAAW;EACX,aAAa;EACb,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,YAAY;EACZ,iBAAiB;AACnB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Header {\n  width: 100%;\n  height: 108px;\n  overflow: hidden;\n  background: #fff;\n  color: #000;\n  min-width: 1350px;\n  position: relative;\n}\n\n.Header-tabs {\n  position: absolute;\n  right: 5px;\n  bottom: 10px;\n  width: 200px;\n  text-align: right;\n}\n"],sourceRoot:""}]);const s=i},6599:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Chain-Tab {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 5px;\n  font-size: 18px;\n  line-height: 20px;\n  height: 32px;\n  width: 32px;\n  color: #555;\n  cursor: pointer;\n  border-radius: 40px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2);\n}\n\n.Chain-Tab:hover {\n  background: #ccc;\n}\n\n.Chain-Tab-on,\n.Chain-Tab-on:hover {\n  background: #2070a6;\n  color: #fff;\n}\n","",{version:3,sources:["webpack://./src/components/Chain/Tab.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,oBAAoB;EACpB,mBAAmB;EACnB,uBAAuB;EACvB,iBAAiB;EACjB,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,WAAW;EACX,WAAW;EACX,eAAe;EACf,mBAAmB;EACnB,8CAA8C;AAChD;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,mBAAmB;EACnB,WAAW;AACb",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Chain-Tab {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 5px;\n  font-size: 18px;\n  line-height: 20px;\n  height: 32px;\n  width: 32px;\n  color: #555;\n  cursor: pointer;\n  border-radius: 40px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2);\n}\n\n.Chain-Tab:hover {\n  background: #ccc;\n}\n\n.Chain-Tab-on,\n.Chain-Tab-on:hover {\n  background: #2070a6;\n  color: #fff;\n}\n"],sourceRoot:""}]);const s=i},691:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,'/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Chains {\n  background: #2070a6;\n  color: #000;\n  padding: 0 76px 0 16px;\n  height: 40px;\n  min-width: 1350px;\n  position: relative;\n}\n\n.Chains-extra-subscribed-chain {\n  position: absolute;\n  right: 80px;\n  top: 0px;\n  background: #2070a6;\n  background: linear-gradient(\n    90deg,\n    rgba(0, 0, 0, 0) 0px,\n    #2070a6 30px,\n    #2070a6 100%\n  );\n  z-index: 1;\n  padding-left: 34px;\n}\n\n.Chains-chain {\n  top: 4px;\n  padding: 0 12px;\n  color: #fff;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  height: 36px;\n  cursor: pointer;\n  font-size: 0.8em;\n  position: relative;\n  z-index: 0;\n  border-radius: 4px 4px 0 0;\n}\n\n.Chains-all-chains {\n  display: block;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  right: 48px;\n  top: 6px;\n}\n\n.Chains-fork-me {\n  display: block;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  right: 12px;\n  top: 6px;\n}\n\n.Chains-all-chains .Icon,\n.Chains-fork-me .Icon {\n  font-size: 28px;\n  margin: 0;\n  height: 28px;\n  width: 28px;\n  color: #fff;\n}\n\n.Chains-node-count {\n  padding: 0px;\n  display: inline-block;\n  border-radius: 20px;\n  background: #fff;\n  color: #2070a6;\n  font-size: 0.9em;\n  margin-left: 0.5em;\n  padding: 0.3em 0.5em;\n}\n\n/* Create a "tab background" that will rise up on hover/selection */\n.Chains-chain::before {\n  content: \'\';\n  background-color: white;\n  border-radius: 4px 4px 0 0;\n  position: absolute;\n  z-index: -1;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 0px;\n  /*\n  To animate the tab height changes, we can uncomment this line:\n\n  transition: height ease-in-out 0.2s;\n  */\n}\n\n/* Animate the tab background to rise up slightly on hover */\n.Chains-chain:hover::before {\n  height: 4px;\n}\n\n.Chains-chain.Chains-chain-selected {\n  color: #393838;\n  /*\n  Instead of making the font bold, which changes the container width and\n  causes some wobbling, apply a tiny text shadow to "bold" it without the\n  width change:\n  */\n  text-shadow: -0.06ex 0 #393838, 0.06ex 0 #393838;\n}\n\n/* Animate the tab background to rise up all the way on selection */\n.Chains-chain.Chains-chain-selected::before {\n  height: 36px;\n}\n\n.Chains-chain.Chains-chain-selected .Chains-node-count {\n  background: #393838;\n  color: #fff;\n}\n',"",{version:3,sources:["webpack://./src/components/Chains.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,mBAAmB;EACnB,WAAW;EACX,sBAAsB;EACtB,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,QAAQ;EACR,mBAAmB;EACnB;;;;;GAKC;EACD,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,QAAQ;EACR,eAAe;EACf,WAAW;EACX,oBAAoB;EACpB,mBAAmB;EACnB,uBAAuB;EACvB,iBAAiB;EACjB,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,UAAU;EACV,0BAA0B;AAC5B;;AAEA;EACE,cAAc;EACd,UAAU;EACV,SAAS;EACT,kBAAkB;EAClB,WAAW;EACX,QAAQ;AACV;;AAEA;EACE,cAAc;EACd,UAAU;EACV,SAAS;EACT,kBAAkB;EAClB,WAAW;EACX,QAAQ;AACV;;AAEA;;EAEE,eAAe;EACf,SAAS;EACT,YAAY;EACZ,WAAW;EACX,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,qBAAqB;EACrB,mBAAmB;EACnB,gBAAgB;EAChB,cAAc;EACd,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA,mEAAmE;AACnE;EACE,WAAW;EACX,uBAAuB;EACvB,0BAA0B;EAC1B,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,OAAO;EACP,QAAQ;EACR,WAAW;EACX;;;;GAIC;AACH;;AAEA,4DAA4D;AAC5D;EACE,WAAW;AACb;;AAEA;EACE,cAAc;EACd;;;;GAIC;EACD,gDAAgD;AAClD;;AAEA,mEAAmE;AACnE;EACE,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,WAAW;AACb",sourcesContent:['/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Chains {\n  background: #2070a6;\n  color: #000;\n  padding: 0 76px 0 16px;\n  height: 40px;\n  min-width: 1350px;\n  position: relative;\n}\n\n.Chains-extra-subscribed-chain {\n  position: absolute;\n  right: 80px;\n  top: 0px;\n  background: #2070a6;\n  background: linear-gradient(\n    90deg,\n    rgba(0, 0, 0, 0) 0px,\n    #2070a6 30px,\n    #2070a6 100%\n  );\n  z-index: 1;\n  padding-left: 34px;\n}\n\n.Chains-chain {\n  top: 4px;\n  padding: 0 12px;\n  color: #fff;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  height: 36px;\n  cursor: pointer;\n  font-size: 0.8em;\n  position: relative;\n  z-index: 0;\n  border-radius: 4px 4px 0 0;\n}\n\n.Chains-all-chains {\n  display: block;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  right: 48px;\n  top: 6px;\n}\n\n.Chains-fork-me {\n  display: block;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  right: 12px;\n  top: 6px;\n}\n\n.Chains-all-chains .Icon,\n.Chains-fork-me .Icon {\n  font-size: 28px;\n  margin: 0;\n  height: 28px;\n  width: 28px;\n  color: #fff;\n}\n\n.Chains-node-count {\n  padding: 0px;\n  display: inline-block;\n  border-radius: 20px;\n  background: #fff;\n  color: #2070a6;\n  font-size: 0.9em;\n  margin-left: 0.5em;\n  padding: 0.3em 0.5em;\n}\n\n/* Create a "tab background" that will rise up on hover/selection */\n.Chains-chain::before {\n  content: \'\';\n  background-color: white;\n  border-radius: 4px 4px 0 0;\n  position: absolute;\n  z-index: -1;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 0px;\n  /*\n  To animate the tab height changes, we can uncomment this line:\n\n  transition: height ease-in-out 0.2s;\n  */\n}\n\n/* Animate the tab background to rise up slightly on hover */\n.Chains-chain:hover::before {\n  height: 4px;\n}\n\n.Chains-chain.Chains-chain-selected {\n  color: #393838;\n  /*\n  Instead of making the font bold, which changes the container width and\n  causes some wobbling, apply a tiny text shadow to "bold" it without the\n  width change:\n  */\n  text-shadow: -0.06ex 0 #393838, 0.06ex 0 #393838;\n}\n\n/* Animate the tab background to rise up all the way on selection */\n.Chains-chain.Chains-chain-selected::before {\n  height: 36px;\n}\n\n.Chains-chain.Chains-chain-selected .Chains-node-count {\n  background: #393838;\n  color: #fff;\n}\n'],sourceRoot:""}]);const s=i},1439:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Filter {\n  position: fixed;\n  z-index: 100;\n  bottom: 20px;\n  left: 50%;\n  width: 400px;\n  font-size: 30px;\n  margin-left: -210px;\n  padding: 10px 10px 10px 60px;\n  border-radius: 4px;\n  background: #111;\n  color: #fff;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);\n}\n\n.Filter-hidden {\n  bottom: -300px;\n}\n\n.Filter input {\n  padding: 0;\n  margin: 0;\n  border: none;\n  outline: none;\n  width: 350px;\n  font-size: 30px;\n  background: #111;\n  color: #fff;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-weight: 300;\n}\n\n.Filter .Icon {\n  position: absolute;\n  left: 13px;\n  top: 17px;\n  font-size: 30px;\n}\n","",{version:3,sources:["webpack://./src/components/Filter.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,eAAe;EACf,YAAY;EACZ,YAAY;EACZ,SAAS;EACT,YAAY;EACZ,eAAe;EACf,mBAAmB;EACnB,4BAA4B;EAC5B,kBAAkB;EAClB,gBAAgB;EAChB,WAAW;EACX,yCAAyC;AAC3C;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,UAAU;EACV,SAAS;EACT,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,WAAW;EACX,iDAAiD;EACjD,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,eAAe;AACjB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Filter {\n  position: fixed;\n  z-index: 100;\n  bottom: 20px;\n  left: 50%;\n  width: 400px;\n  font-size: 30px;\n  margin-left: -210px;\n  padding: 10px 10px 10px 60px;\n  border-radius: 4px;\n  background: #111;\n  color: #fff;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);\n}\n\n.Filter-hidden {\n  bottom: -300px;\n}\n\n.Filter input {\n  padding: 0;\n  margin: 0;\n  border: none;\n  outline: none;\n  width: 350px;\n  font-size: 30px;\n  background: #111;\n  color: #fff;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-weight: 300;\n}\n\n.Filter .Icon {\n  position: absolute;\n  left: 13px;\n  top: 17px;\n  font-size: 30px;\n}\n"],sourceRoot:""}]);const s=i},6339:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Icon {\n  fill: currentColor;\n  height: 1em;\n  width: 1em;\n  text-align: center;\n  line-height: 1em;\n  vertical-align: middle;\n  display: inline-block;\n}\n\n.Icon svg,\n.Icon-symbol-root symbol {\n  width: 1em;\n  height: 1em;\n}\n","",{version:3,sources:["webpack://./src/components/Icon.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,kBAAkB;EAClB,WAAW;EACX,UAAU;EACV,kBAAkB;EAClB,gBAAgB;EAChB,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;;EAEE,UAAU;EACV,WAAW;AACb",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Icon {\n  fill: currentColor;\n  height: 1em;\n  width: 1em;\n  text-align: center;\n  line-height: 1em;\n  vertical-align: middle;\n  display: inline-block;\n}\n\n.Icon svg,\n.Icon-symbol-root symbol {\n  width: 1em;\n  height: 1em;\n}\n"],sourceRoot:""}]);const s=i},4156:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Column {\n  text-align: left;\n  padding: 6px 13px;\n  height: 19px;\n  position: relative;\n  white-space: nowrap;\n}\n\n.Column-truncate {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  padding: 6px 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.Column-Tooltip {\n  position: initial !important;\n  padding: inherit !important;\n}\n\n.Column-validator {\n  display: block;\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n}\n\n.Column-validator:hover {\n  transform: scale(2);\n}\n\n.Column--a {\n  color: inherit;\n  text-decoration: none;\n}\n\n.Column--a:hover {\n  text-decoration: underline;\n}\n","",{version:3,sources:["webpack://./src/components/List/Column/Column.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,MAAM;EACN,iBAAiB;EACjB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Column {\n  text-align: left;\n  padding: 6px 13px;\n  height: 19px;\n  position: relative;\n  white-space: nowrap;\n}\n\n.Column-truncate {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  padding: 6px 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.Column-Tooltip {\n  position: initial !important;\n  padding: inherit !important;\n}\n\n.Column-validator {\n  display: block;\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n}\n\n.Column-validator:hover {\n  transform: scale(2);\n}\n\n.Column--a {\n  color: inherit;\n  text-decoration: none;\n}\n\n.Column--a:hover {\n  text-decoration: underline;\n}\n"],sourceRoot:""}]);const s=i},3045:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.List {\n  /* Prevents the list from auto-scrolling while cascading node\n   * updates on new block, which helps with performance. */\n  overflow-anchor: none;\n}\n\n.List-no-nodes {\n  font-size: 30px;\n  padding-top: 20vh;\n  text-align: center;\n  font-weight: 300;\n}\n\n.List-padding {\n  padding: 0;\n  margin: 0;\n}\n\n.List--table {\n  width: 100%;\n  border-spacing: 0;\n  font-family: monospace, sans-serif;\n}\n","",{version:3,sources:["webpack://./src/components/List/List.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE;0DACwD;EACxD,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,UAAU;EACV,SAAS;AACX;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,kCAAkC;AACpC",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.List {\n  /* Prevents the list from auto-scrolling while cascading node\n   * updates on new block, which helps with performance. */\n  overflow-anchor: none;\n}\n\n.List-no-nodes {\n  font-size: 30px;\n  padding-top: 20vh;\n  text-align: center;\n  font-weight: 300;\n}\n\n.List-padding {\n  padding: 0;\n  margin: 0;\n}\n\n.List--table {\n  width: 100%;\n  border-spacing: 0;\n  font-family: monospace, sans-serif;\n}\n"],sourceRoot:""}]);const s=i},5793:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Row {\n  color: #b5aeae;\n  cursor: pointer;\n}\n\n.Row-synced {\n  color: #fff;\n}\n\n.Row-pinned td:first-child {\n  border-left: 3px solid #2070a6;\n  padding-left: 10px;\n}\n\n.Row-pinned td:last-child {\n  border-right: 3px solid #2070a6;\n  padding-right: 10px;\n}\n\n.Row-pinned.Row-synced {\n  color: #2070a6;\n}\n\n.Row-stale {\n  color: #555;\n}\n\n.Row:hover {\n  background-color: #1e1e1e;\n}\n","",{version:3,sources:["webpack://./src/components/List/Row.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,+BAA+B;EAC/B,mBAAmB;AACrB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Row {\n  color: #b5aeae;\n  cursor: pointer;\n}\n\n.Row-synced {\n  color: #fff;\n}\n\n.Row-pinned td:first-child {\n  border-left: 3px solid #2070a6;\n  padding-left: 10px;\n}\n\n.Row-pinned td:last-child {\n  border-right: 3px solid #2070a6;\n  padding-right: 10px;\n}\n\n.Row-pinned.Row-synced {\n  color: #2070a6;\n}\n\n.Row-stale {\n  color: #555;\n}\n\n.Row:hover {\n  background-color: #1e1e1e;\n}\n"],sourceRoot:""}]);const s=i},3415:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.THead {\n  background: #393838;\n}\n\n.THeadCell {\n  text-align: left;\n  padding: 8px 13px;\n  height: 23px;\n}\n\n.THeadCell-sortable {\n  cursor: pointer;\n}\n\n.THeadCell-sorted {\n  cursor: pointer;\n  background: #2070a6;\n  color: #fff;\n}\n\n.THeadCell-container {\n  position: relative;\n  display: inline-block;\n}\n","",{version:3,sources:["webpack://./src/components/List/THead.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;AACvB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.THead {\n  background: #393838;\n}\n\n.THeadCell {\n  text-align: left;\n  padding: 8px 13px;\n  height: 23px;\n}\n\n.THeadCell-sortable {\n  cursor: pointer;\n}\n\n.THeadCell-sorted {\n  cursor: pointer;\n  background: #2070a6;\n  color: #fff;\n}\n\n.THeadCell-container {\n  position: relative;\n  display: inline-block;\n}\n"],sourceRoot:""}]);const s=i},2382:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Location {\n  width: 6px;\n  height: 6px;\n  background: transparent;\n  border: 2px solid #666;\n  border-radius: 6px;\n  margin-left: -4px;\n  margin-top: -4px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  cursor: pointer;\n  z-index: 2;\n  transition: border-color 0.25s linear;\n}\n\n.Location-dimmed {\n  width: 2px;\n  height: 2px;\n  margin-left: -1px;\n  margin-top: -1px;\n  z-index: 1;\n  background: #bbb;\n  border: none;\n}\n\n.Location-ping {\n  pointer-events: none;\n  position: absolute;\n  display: none;\n}\n\n.Location-odd {\n  border-color: #bbb;\n}\n\n.Location-synced {\n  z-index: 3;\n  border-color: #2070a6;\n}\n\n.Location-synced .Location-ping {\n  border: 1px solid #fff;\n  border-radius: 30px;\n  display: block;\n  animation: ping 1s forwards;\n}\n\n.Location:hover {\n  z-index: 4;\n  border-color: #fff;\n}\n\n.Location-details {\n  min-width: 335px;\n  position: absolute;\n  font-family: monospace, sans-serif;\n  background: #222;\n  color: #fff;\n  box-shadow: 0 3px 20px rgba(0, 0, 0, 0.5);\n  border-collapse: collapse;\n}\n\n.Location-quarter0 .Location-details {\n  left: 16px;\n  top: -4px;\n}\n\n.Location-quarter1 .Location-details {\n  right: 16px;\n  top: -4px;\n}\n\n.Location-quarter2 .Location-details {\n  left: 16px;\n  bottom: -4px;\n}\n\n.Location-quarter3 .Location-details {\n  right: 16px;\n  bottom: -4px;\n}\n\n.Location-details td {\n  text-align: left;\n  padding: 0.5em 1em;\n}\n\n.Location-details td:nth-child(odd) {\n  width: 16px;\n  text-align: center;\n  padding-right: 0.2em;\n}\n\n.Location-details td:nth-child(even) {\n  padding-left: 0.2em;\n}\n\n@keyframes ping {\n  from {\n    left: -1px;\n    top: -1px;\n    width: 6px;\n    height: 6px;\n    border-width: 1px;\n    border-color: rgba(255, 255, 255, 1);\n  }\n\n  to {\n    left: -18px;\n    top: -18px;\n    width: 40px;\n    height: 40px;\n    border-width: 1px;\n    border-color: rgba(255, 255, 255, 0);\n  }\n}\n\n.Location-validator {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  transform: scale(1.5);\n  transform-origin: right 50%;\n  margin-left: 16px;\n}\n","",{version:3,sources:["webpack://./src/components/Map/Location.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,UAAU;EACV,WAAW;EACX,uBAAuB;EACvB,sBAAsB;EACtB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,eAAe;EACf,UAAU;EACV,qCAAqC;AACvC;;AAEA;EACE,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,gBAAgB;EAChB,UAAU;EACV,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,qBAAqB;AACvB;;AAEA;EACE,sBAAsB;EACtB,mBAAmB;EACnB,cAAc;EACd,2BAA2B;AAC7B;;AAEA;EACE,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,kCAAkC;EAClC,gBAAgB;EAChB,WAAW;EACX,yCAAyC;EACzC,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,SAAS;AACX;;AAEA;EACE,WAAW;EACX,SAAS;AACX;;AAEA;EACE,UAAU;EACV,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE;IACE,UAAU;IACV,SAAS;IACT,UAAU;IACV,WAAW;IACX,iBAAiB;IACjB,oCAAoC;EACtC;;EAEA;IACE,WAAW;IACX,UAAU;IACV,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,oCAAoC;EACtC;AACF;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,2BAA2B;EAC3B,iBAAiB;AACnB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Location {\n  width: 6px;\n  height: 6px;\n  background: transparent;\n  border: 2px solid #666;\n  border-radius: 6px;\n  margin-left: -4px;\n  margin-top: -4px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  cursor: pointer;\n  z-index: 2;\n  transition: border-color 0.25s linear;\n}\n\n.Location-dimmed {\n  width: 2px;\n  height: 2px;\n  margin-left: -1px;\n  margin-top: -1px;\n  z-index: 1;\n  background: #bbb;\n  border: none;\n}\n\n.Location-ping {\n  pointer-events: none;\n  position: absolute;\n  display: none;\n}\n\n.Location-odd {\n  border-color: #bbb;\n}\n\n.Location-synced {\n  z-index: 3;\n  border-color: #2070a6;\n}\n\n.Location-synced .Location-ping {\n  border: 1px solid #fff;\n  border-radius: 30px;\n  display: block;\n  animation: ping 1s forwards;\n}\n\n.Location:hover {\n  z-index: 4;\n  border-color: #fff;\n}\n\n.Location-details {\n  min-width: 335px;\n  position: absolute;\n  font-family: monospace, sans-serif;\n  background: #222;\n  color: #fff;\n  box-shadow: 0 3px 20px rgba(0, 0, 0, 0.5);\n  border-collapse: collapse;\n}\n\n.Location-quarter0 .Location-details {\n  left: 16px;\n  top: -4px;\n}\n\n.Location-quarter1 .Location-details {\n  right: 16px;\n  top: -4px;\n}\n\n.Location-quarter2 .Location-details {\n  left: 16px;\n  bottom: -4px;\n}\n\n.Location-quarter3 .Location-details {\n  right: 16px;\n  bottom: -4px;\n}\n\n.Location-details td {\n  text-align: left;\n  padding: 0.5em 1em;\n}\n\n.Location-details td:nth-child(odd) {\n  width: 16px;\n  text-align: center;\n  padding-right: 0.2em;\n}\n\n.Location-details td:nth-child(even) {\n  padding-left: 0.2em;\n}\n\n@keyframes ping {\n  from {\n    left: -1px;\n    top: -1px;\n    width: 6px;\n    height: 6px;\n    border-width: 1px;\n    border-color: rgba(255, 255, 255, 1);\n  }\n\n  to {\n    left: -18px;\n    top: -18px;\n    width: 40px;\n    height: 40px;\n    border-width: 1px;\n    border-color: rgba(255, 255, 255, 0);\n  }\n}\n\n.Location-validator {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  transform: scale(1.5);\n  transform-origin: right 50%;\n  margin-left: 16px;\n}\n"],sourceRoot:""}]);const s=i},7937:(e,n,t)=>{"use strict";t.d(n,{Z:()=>f});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o),s=t(1667),l=t.n(s),c=new URL(t(6830),t.b),u=i()(a()),d=l()(c);u.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Map {\n  min-width: 1350px;\n  background: url("+d+") no-repeat;\n  background-size: contain;\n  background-position: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n}\n","",{version:3,sources:["webpack://./src/components/Map/Map.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,iBAAiB;EACjB,6DAAuD;EACvD,wBAAwB;EACxB,2BAA2B;EAC3B,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,MAAM;EACN,SAAS;AACX",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Map {\n  min-width: 1350px;\n  background: url('../../assets/world-map.svg') no-repeat;\n  background-size: contain;\n  background-position: center;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n}\n"],sourceRoot:""}]);const f=u},4962:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.OfflineIndicator {\n  position: absolute;\n  top: 30px;\n  right: 30px;\n  z-index: 10;\n  background: #c00;\n  line-height: 16px;\n  color: #fff;\n  font-size: 30px;\n  padding: 16px;\n  border-radius: 50px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 20px;\n}\n\n.OfflineIndicator-upgrade {\n  background: #282;\n}\n","",{version:3,sources:["webpack://./src/components/OfflineIndicator.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,WAAW;EACX,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.OfflineIndicator {\n  position: absolute;\n  top: 30px;\n  right: 30px;\n  z-index: 10;\n  background: #c00;\n  line-height: 16px;\n  color: #fff;\n  font-size: 30px;\n  padding: 16px;\n  border-radius: 50px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 20px;\n}\n\n.OfflineIndicator-upgrade {\n  background: #282;\n}\n"],sourceRoot:""}]);const s=i},188:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Setting {\n  color: #635f5f;\n  padding: 0;\n  margin: 0 0 8px 0;\n  cursor: pointer;\n}\n\n.Setting-on {\n  color: #fff;\n}\n\n.Setting .Icon {\n  margin-right: 10px;\n}\n\n.Setting-switch {\n  width: 40px;\n  height: 18px;\n  border-radius: 18px;\n  display: block;\n  float: right;\n  position: relative;\n  background: #444;\n  transition: background-color 0.15s linear, border-color 0.15s linear;\n}\n\n.Setting-on .Setting-switch {\n  background: #2070a6;\n  border-color: #2070a6;\n}\n\n.Setting-knob {\n  width: 18px;\n  height: 18px;\n  border-radius: 19px;\n  display: block;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background: #fff;\n  transition: left 0.15s ease-in-out;\n}\n\n.Setting-on .Setting-knob {\n  left: 22px;\n}\n","",{version:3,sources:["webpack://./src/components/Settings/Setting.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,cAAc;EACd,UAAU;EACV,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,cAAc;EACd,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,oEAAoE;AACtE;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,cAAc;EACd,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,gBAAgB;EAChB,kCAAkC;AACpC;;AAEA;EACE,UAAU;AACZ",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Setting {\n  color: #635f5f;\n  padding: 0;\n  margin: 0 0 8px 0;\n  cursor: pointer;\n}\n\n.Setting-on {\n  color: #fff;\n}\n\n.Setting .Icon {\n  margin-right: 10px;\n}\n\n.Setting-switch {\n  width: 40px;\n  height: 18px;\n  border-radius: 18px;\n  display: block;\n  float: right;\n  position: relative;\n  background: #444;\n  transition: background-color 0.15s linear, border-color 0.15s linear;\n}\n\n.Setting-on .Setting-switch {\n  background: #2070a6;\n  border-color: #2070a6;\n}\n\n.Setting-knob {\n  width: 18px;\n  height: 18px;\n  border-radius: 19px;\n  display: block;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background: #fff;\n  transition: left 0.15s ease-in-out;\n}\n\n.Setting-on .Setting-knob {\n  left: 22px;\n}\n"],sourceRoot:""}]);const s=i},6127:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Settings {\n  text-align: center;\n}\n\n.Settings-category {\n  text-align: left;\n  width: 500px;\n  margin: 0 auto;\n  padding: 2em 0;\n}\n\n.Settings-category h2 {\n  padding: 0;\n  margin: 0 0 0.5em 0;\n  font-size: 20px;\n  font-weight: 100;\n}\n","",{version:3,sources:["webpack://./src/components/Settings/Settings.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,cAAc;EACd,cAAc;AAChB;;AAEA;EACE,UAAU;EACV,mBAAmB;EACnB,eAAe;EACf,gBAAgB;AAClB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Settings {\n  text-align: center;\n}\n\n.Settings-category {\n  text-align: left;\n  width: 500px;\n  margin: 0 auto;\n  padding: 2em 0;\n}\n\n.Settings-category h2 {\n  padding: 0;\n  margin: 0 0 0.5em 0;\n  font-size: 20px;\n  font-weight: 100;\n}\n"],sourceRoot:""}]);const s=i},667:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Sparkline {\n  fill: currentcolor;\n  fill-opacity: 0.35;\n  stroke: currentcolor;\n  margin: 0 -1px -3px -1px;\n}\n\n.Sparkline path {\n  pointer-events: none;\n}\n\n.Sparkline .Sparkline-cursor {\n  display: none;\n}\n\n.Sparkline:hover .Sparkline-cursor {\n  display: initial;\n}\n","",{version:3,sources:["webpack://./src/components/Sparkline.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,kBAAkB;EAClB,kBAAkB;EAClB,oBAAoB;EACpB,wBAAwB;AAC1B;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Sparkline {\n  fill: currentcolor;\n  fill-opacity: 0.35;\n  stroke: currentcolor;\n  margin: 0 -1px -3px -1px;\n}\n\n.Sparkline path {\n  pointer-events: none;\n}\n\n.Sparkline .Sparkline-cursor {\n  display: none;\n}\n\n.Sparkline:hover .Sparkline-cursor {\n  display: initial;\n}\n"],sourceRoot:""}]);const s=i},5636:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2022 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Stats {\n  text-align: center;\n  padding-top: 2.5rem;\n  padding-bottom: 0.1rem;\n}\n\n.Stats-category {\n  text-align: left;\n  background-color: #fff;\n  margin-bottom: 2.5rem;\n  padding: 1rem;\n}\n\n.Stats-category table {\n  color: #000;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: collapse;\n}\n\n.Stats-category tr:nth-child(even) {\n  background-color: #eee;\n}\n\n.Stats-percent {\n  width: 6em;\n  text-align: right;\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n}\n\n.Stats-count {\n  width: 6.5em;\n  text-align: right;\n  padding-right: 1.5rem;\n  border-right: 1px solid black;\n}\n\n.Stats-value {\n  padding-left: 2rem;\n}\n\nth.Stats-value {\n  padding-left: 1rem;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.Stats-category td {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.Stats-unknown {\n  opacity: 0.5;\n}\n","",{version:3,sources:["webpack://./src/components/Stats/Stats.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,kBAAkB;EAClB,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;EACtB,qBAAqB;EACrB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,WAAW;EACX,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,UAAU;EACV,iBAAiB;EACjB,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,qBAAqB;EACrB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2022 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Stats {\n  text-align: center;\n  padding-top: 2.5rem;\n  padding-bottom: 0.1rem;\n}\n\n.Stats-category {\n  text-align: left;\n  background-color: #fff;\n  margin-bottom: 2.5rem;\n  padding: 1rem;\n}\n\n.Stats-category table {\n  color: #000;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: collapse;\n}\n\n.Stats-category tr:nth-child(even) {\n  background-color: #eee;\n}\n\n.Stats-percent {\n  width: 6em;\n  text-align: right;\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n}\n\n.Stats-count {\n  width: 6.5em;\n  text-align: right;\n  padding-right: 1.5rem;\n  border-right: 1px solid black;\n}\n\n.Stats-value {\n  padding-left: 2rem;\n}\n\nth.Stats-value {\n  padding-left: 1rem;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.Stats-category td {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.Stats-unknown {\n  opacity: 0.5;\n}\n"],sourceRoot:""}]);const s=i},5861:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Tile {\n  font-size: 2.5em;\n  text-align: left;\n  width: 260px;\n  height: 100px;\n  display: inline-block;\n  position: relative;\n}\n\n.Tile-label {\n  position: absolute;\n  top: 24px;\n  left: 70px;\n  right: 0;\n  font-size: 0.4em;\n  text-transform: uppercase;\n}\n\n.Tile-content {\n  position: absolute;\n  bottom: 16px;\n  left: 70px;\n  right: 0;\n  font-weight: 300;\n  font-size: 0.75em;\n}\n\n.Tile .Icon {\n  position: absolute;\n  left: 20px;\n  top: 15px;\n  font-size: 0.8em;\n  padding: 0.1em;\n  border-radius: 1.25em;\n  border: 2px solid #2070a6;\n  color: #2070a6;\n}\n","",{version:3,sources:["webpack://./src/components/Tile.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,gBAAgB;EAChB,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,QAAQ;EACR,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,QAAQ;EACR,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,gBAAgB;EAChB,cAAc;EACd,qBAAqB;EACrB,yBAAyB;EACzB,cAAc;AAChB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Tile {\n  font-size: 2.5em;\n  text-align: left;\n  width: 260px;\n  height: 100px;\n  display: inline-block;\n  position: relative;\n}\n\n.Tile-label {\n  position: absolute;\n  top: 24px;\n  left: 70px;\n  right: 0;\n  font-size: 0.4em;\n  text-transform: uppercase;\n}\n\n.Tile-content {\n  position: absolute;\n  bottom: 16px;\n  left: 70px;\n  right: 0;\n  font-weight: 300;\n  font-size: 0.75em;\n}\n\n.Tile .Icon {\n  position: absolute;\n  left: 20px;\n  top: 15px;\n  font-size: 0.8em;\n  padding: 0.1em;\n  border-radius: 1.25em;\n  border: 2px solid #2070a6;\n  color: #2070a6;\n}\n"],sourceRoot:""}]);const s=i},3754:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,"/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Tooltip {\n  background: #000;\n  color: #fff;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: 400;\n  padding: 3px 5px;\n  border-radius: 2px;\n  position: absolute;\n  white-space: nowrap;\n  top: -32px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);\n  pointer-events: none;\n  transition: color 0.15s ease-in-out;\n}\n\n.Tooltip::after {\n  content: ' ';\n  width: 0;\n  height: 0;\n  display: block;\n  position: absolute;\n  left: 50%;\n  bottom: -6px;\n  margin-left: -6px;\n  border-top: 6px #000 solid;\n  border-left: 6px transparent solid;\n  border-right: 6px transparent solid;\n  pointer-events: none;\n}\n\n.Tooltip-left {\n  left: 10px;\n  transform: none;\n}\n\n.Tooltip-left::after {\n  left: 3px;\n  margin: 0;\n}\n\n.Tooltip-right {\n  left: initial;\n  right: 10px;\n  transform: none;\n}\n\n.Tooltip-right::after {\n  left: initial;\n  right: 3px;\n  margin: 0;\n}\n\n.Tooltip.Tooltip-copied {\n  color: #888;\n}\n\n.Tooltip-container {\n  position: relative;\n}\n\n.Tooltip-container-inline {\n  display: inline-block;\n}\n\n.Tooltip-container-inline .Tooltip-left {\n  left: 0;\n}\n\n.Tooltip-container-inline .Tooltip-right {\n  right: 0;\n}\n\n:hover > .Tooltip {\n  display: block;\n}\n","",{version:3,sources:["webpack://./src/components/Tooltip.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,gBAAgB;EAChB,WAAW;EACX,iDAAiD;EACjD,eAAe;EACf,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,UAAU;EACV,SAAS;EACT,2BAA2B;EAC3B,aAAa;EACb,yCAAyC;EACzC,oBAAoB;EACpB,mCAAmC;AACrC;;AAEA;EACE,YAAY;EACZ,QAAQ;EACR,SAAS;EACT,cAAc;EACd,kBAAkB;EAClB,SAAS;EACT,YAAY;EACZ,iBAAiB;EACjB,0BAA0B;EAC1B,kCAAkC;EAClC,mCAAmC;EACnC,oBAAoB;AACtB;;AAEA;EACE,UAAU;EACV,eAAe;AACjB;;AAEA;EACE,SAAS;EACT,SAAS;AACX;;AAEA;EACE,aAAa;EACb,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,UAAU;EACV,SAAS;AACX;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,cAAc;AAChB",sourcesContent:["/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n.Tooltip {\n  background: #000;\n  color: #fff;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: 400;\n  padding: 3px 5px;\n  border-radius: 2px;\n  position: absolute;\n  white-space: nowrap;\n  top: -32px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);\n  pointer-events: none;\n  transition: color 0.15s ease-in-out;\n}\n\n.Tooltip::after {\n  content: ' ';\n  width: 0;\n  height: 0;\n  display: block;\n  position: absolute;\n  left: 50%;\n  bottom: -6px;\n  margin-left: -6px;\n  border-top: 6px #000 solid;\n  border-left: 6px transparent solid;\n  border-right: 6px transparent solid;\n  pointer-events: none;\n}\n\n.Tooltip-left {\n  left: 10px;\n  transform: none;\n}\n\n.Tooltip-left::after {\n  left: 3px;\n  margin: 0;\n}\n\n.Tooltip-right {\n  left: initial;\n  right: 10px;\n  transform: none;\n}\n\n.Tooltip-right::after {\n  left: initial;\n  right: 3px;\n  margin: 0;\n}\n\n.Tooltip.Tooltip-copied {\n  color: #888;\n}\n\n.Tooltip-container {\n  position: relative;\n}\n\n.Tooltip-container-inline {\n  display: inline-block;\n}\n\n.Tooltip-container-inline .Tooltip-left {\n  left: 0;\n}\n\n.Tooltip-container-inline .Tooltip-right {\n  right: 0;\n}\n\n:hover > .Tooltip {\n  display: block;\n}\n"],sourceRoot:""}]);const s=i},1424:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([e.id,'/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n* {\n  /* Use "standard"/common sense heights/widths (ie they include padding+border) */\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;CAgBC;;AAED;EACE,gFAAgF;EAChF,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,uBAAuB;AACzB",sourcesContent:['/*\nSource code for the Substrate Telemetry Server.\nCopyright (C) 2023 Parity Technologies (UK) Ltd.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n* {\n  /* Use "standard"/common sense heights/widths (ie they include padding+border) */\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n}\n'],sourceRoot:""}]);const s=i},3645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),n.push(u))}},n}},1667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},7537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},4448:(e,n,t)=>{"use strict";var r=t(7294),a=t(3840);function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function l(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(s[e]=n,e=0;e<n.length;e++)i.add(n[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,n,t,r,a,o,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=o,this.removeEmptyString=i}var b={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){b[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];b[n]=new m(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){b[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){b[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){b[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){b[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){b[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){b[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){b[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function y(e,n,t,r){var a=b.hasOwnProperty(n)?b[n]:null;(null!==a?0!==a.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!d.call(h,e)||!d.call(p,e)&&(f.test(e)?h[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(g,v);b[n]=new m(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(g,v);b[n]=new m(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(g,v);b[n]=new m(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){b[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),b.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){b[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var A=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),x=Symbol.for("react.portal"),C=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),P=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),T=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),B=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var H=Symbol.iterator;function U(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=H&&e[H]||e["@@iterator"])?e:null}var R,F=Object.assign;function j(e){if(void 0===R)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);R=n&&n[1]||""}return"\n"+R+e}var X=!1;function M(e,n){if(!e||X)return"";X=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var a=n.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,s=o.length-1;1<=i&&0<=s&&a[i]!==o[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==o[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==o[s]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=s);break}}}finally{X=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?j(e):""}function Z(e){switch(e.tag){case 5:return j(e.type);case 16:return j("Lazy");case 13:return j("Suspense");case 19:return j("SuspenseList");case 0:case 2:case 15:return M(e.type,!1);case 11:return M(e.type.render,!1);case 1:return M(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case x:return"Portal";case P:return"Profiler";case E:return"StrictMode";case z:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case S:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(n=e.displayName||null)?n:G(e.type)||"Memo";case B:n=e._payload,e=e._init;try{return G(e(n))}catch(e){}}return null}function Y(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(n);case 8:return n===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function I(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function D(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function V(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function K(e,n){var t=n.checked;return F({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function J(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=I(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Q(e,n){null!=(n=n.checked)&&y(e,"checked",n,!1)}function _(e,n){Q(e,n);var t=I(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,I(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function $(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&q(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+I(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(o(91));return F({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(o(92));if(ne(t)){if(1<t.length)throw Error(o(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:I(t)}}function oe(e,n){var t=I(n.value),r=I(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ie(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?se(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,n)}))}:ue);function fe(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function be(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=me(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var ge=F({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,n){if(n){if(ge[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(o(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(o(62))}}function ye(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ae=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var xe=null,Ce=null,Ee=null;function Pe(e){if(e=ya(e)){if("function"!=typeof xe)throw Error(o(280));var n=e.stateNode;n&&(n=wa(n),xe(e.stateNode,e.type,n))}}function ke(e){Ce?Ee?Ee.push(e):Ee=[e]:Ce=e}function Te(){if(Ce){var e=Ce,n=Ee;if(Ee=Ce=null,Pe(e),n)for(e=0;e<n.length;e++)Pe(n[e])}}function Se(e,n){return e(n)}function ze(){}var Ne=!1;function Le(e,n,t){if(Ne)return e(n,t);Ne=!0;try{return Se(e,n,t)}finally{Ne=!1,(null!==Ce||null!==Ee)&&(ze(),Te())}}function Be(e,n){var t=e.stateNode;if(null===t)return null;var r=wa(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(o(231,n,typeof t));return t}var Oe=!1;if(u)try{var He={};Object.defineProperty(He,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",He,He),window.removeEventListener("test",He,He)}catch(ue){Oe=!1}function Ue(e,n,t,r,a,o,i,s,l){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var Re=!1,Fe=null,je=!1,Xe=null,Me={onError:function(e){Re=!0,Fe=e}};function Ze(e,n,t,r,a,o,i,s,l){Re=!1,Fe=null,Ue.apply(Me,arguments)}function Ge(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ye(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ie(e){if(Ge(e)!==e)throw Error(o(188))}function We(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ge(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){t=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===t)return Ie(a),e;if(i===r)return Ie(a),n;i=i.sibling}throw Error(o(188))}if(t.return!==r.return)t=a,r=i;else{for(var s=!1,l=a.child;l;){if(l===t){s=!0,t=a,r=i;break}if(l===r){s=!0,r=a,t=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===t){s=!0,t=i,r=a;break}if(l===r){s=!0,r=i,t=a;break}l=l.sibling}if(!s)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}(e))?De(e):null}function De(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=De(e);if(null!==n)return n;e=e.sibling}return null}var Ve=a.unstable_scheduleCallback,qe=a.unstable_cancelCallback,Ke=a.unstable_shouldYield,Je=a.unstable_requestPaint,Qe=a.unstable_now,_e=a.unstable_getCurrentPriorityLevel,$e=a.unstable_ImmediatePriority,en=a.unstable_UserBlockingPriority,nn=a.unstable_NormalPriority,tn=a.unstable_LowPriority,rn=a.unstable_IdlePriority,an=null,on=null,sn=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(ln(e)/cn|0)|0},ln=Math.log,cn=Math.LN2,un=64,dn=4194304;function fn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&t;if(0!==i){var s=i&~a;0!==s?r=fn(s):0!=(o&=i)&&(r=fn(o))}else 0!=(i=t&~a)?r=fn(i):0!==o&&(r=fn(o));if(0===r)return 0;if(0!==n&&n!==r&&0==(n&a)&&((a=r&-r)>=(o=n&-n)||16===a&&0!=(4194240&o)))return n;if(0!=(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-sn(n)),r|=e[t],n&=~a;return r}function hn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function mn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function bn(){var e=un;return 0==(4194240&(un<<=1))&&(un=64),e}function gn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function vn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-sn(n)]=t}function yn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-sn(t),a=1<<r;a&n|e[r]&n&&(e[r]|=n),t&=~a}}var An=0;function wn(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var xn,Cn,En,Pn,kn,Tn=!1,Sn=[],zn=null,Nn=null,Ln=null,Bn=new Map,On=new Map,Hn=[],Un="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rn(e,n){switch(e){case"focusin":case"focusout":zn=null;break;case"dragenter":case"dragleave":Nn=null;break;case"mouseover":case"mouseout":Ln=null;break;case"pointerover":case"pointerout":Bn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":On.delete(n.pointerId)}}function Fn(e,n,t,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==n&&null!==(n=ya(n))&&Cn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function jn(e){var n=va(e.target);if(null!==n){var t=Ge(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ye(t)))return e.blockedOn=n,void kn(e.priority,(function(){En(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Xn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Jn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=ya(t))&&Cn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);Ae=r,t.target.dispatchEvent(r),Ae=null,n.shift()}return!0}function Mn(e,n,t){Xn(e)&&t.delete(n)}function Zn(){Tn=!1,null!==zn&&Xn(zn)&&(zn=null),null!==Nn&&Xn(Nn)&&(Nn=null),null!==Ln&&Xn(Ln)&&(Ln=null),Bn.forEach(Mn),On.forEach(Mn)}function Gn(e,n){e.blockedOn===n&&(e.blockedOn=null,Tn||(Tn=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Zn)))}function Yn(e){function n(n){return Gn(n,e)}if(0<Sn.length){Gn(Sn[0],e);for(var t=1;t<Sn.length;t++){var r=Sn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==zn&&Gn(zn,e),null!==Nn&&Gn(Nn,e),null!==Ln&&Gn(Ln,e),Bn.forEach(n),On.forEach(n),t=0;t<Hn.length;t++)(r=Hn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Hn.length&&null===(t=Hn[0]).blockedOn;)jn(t),null===t.blockedOn&&Hn.shift()}var In=A.ReactCurrentBatchConfig,Wn=!0;function Dn(e,n,t,r){var a=An,o=In.transition;In.transition=null;try{An=1,qn(e,n,t,r)}finally{An=a,In.transition=o}}function Vn(e,n,t,r){var a=An,o=In.transition;In.transition=null;try{An=4,qn(e,n,t,r)}finally{An=a,In.transition=o}}function qn(e,n,t,r){if(Wn){var a=Jn(e,n,t,r);if(null===a)Ir(e,n,r,Kn,t),Rn(e,r);else if(function(e,n,t,r,a){switch(n){case"focusin":return zn=Fn(zn,e,n,t,r,a),!0;case"dragenter":return Nn=Fn(Nn,e,n,t,r,a),!0;case"mouseover":return Ln=Fn(Ln,e,n,t,r,a),!0;case"pointerover":var o=a.pointerId;return Bn.set(o,Fn(Bn.get(o)||null,e,n,t,r,a)),!0;case"gotpointercapture":return o=a.pointerId,On.set(o,Fn(On.get(o)||null,e,n,t,r,a)),!0}return!1}(a,e,n,t,r))r.stopPropagation();else if(Rn(e,r),4&n&&-1<Un.indexOf(e)){for(;null!==a;){var o=ya(a);if(null!==o&&xn(o),null===(o=Jn(e,n,t,r))&&Ir(e,n,r,Kn,t),o===a)break;a=o}null!==a&&r.stopPropagation()}else Ir(e,n,r,null,t)}}var Kn=null;function Jn(e,n,t,r){if(Kn=null,null!==(e=va(e=we(r))))if(null===(n=Ge(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ye(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Kn=e,null}function Qn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(_e()){case $e:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var _n=null,$n=null,et=null;function nt(){if(et)return et;var e,n,t=$n,r=t.length,a="value"in _n?_n.value:_n.textContent,o=a.length;for(e=0;e<r&&t[e]===a[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===a[o-n];n++);return et=a.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function at(){return!1}function ot(e){function n(n,t,r,a,o){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return F(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var it,st,lt,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=ot(ct),dt=F({},ct,{view:0,detail:0}),ft=ot(dt),pt=F({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lt&&(lt&&"mousemove"===e.type?(it=e.screenX-lt.screenX,st=e.screenY-lt.screenY):st=it=0,lt=e),it)},movementY:function(e){return"movementY"in e?e.movementY:st}}),ht=ot(pt),mt=ot(F({},pt,{dataTransfer:0})),bt=ot(F({},dt,{relatedTarget:0})),gt=ot(F({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=F({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yt=ot(vt),At=ot(F({},ct,{data:0})),wt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ct={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Et(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Ct[e])&&!!n[e]}function Pt(){return Et}var kt=F({},dt,{key:function(e){if(e.key){var n=wt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tt=ot(kt),St=ot(F({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),zt=ot(F({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pt})),Nt=ot(F({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),Lt=F({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Bt=ot(Lt),Ot=[9,13,27,32],Ht=u&&"CompositionEvent"in window,Ut=null;u&&"documentMode"in document&&(Ut=document.documentMode);var Rt=u&&"TextEvent"in window&&!Ut,Ft=u&&(!Ht||Ut&&8<Ut&&11>=Ut),jt=String.fromCharCode(32),Xt=!1;function Mt(e,n){switch(e){case"keyup":return-1!==Ot.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Zt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Gt=!1,Yt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function It(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Yt[e.type]:"textarea"===n}function Wt(e,n,t,r){ke(r),0<(n=Dr(n,"onChange")).length&&(t=new ut("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Dt=null,Vt=null;function qt(e){jr(e,0)}function Kt(e){if(V(Aa(e)))return e}function Jt(e,n){if("change"===e)return n}var Qt=!1;if(u){var _t;if(u){var $t="oninput"in document;if(!$t){var er=document.createElement("div");er.setAttribute("oninput","return;"),$t="function"==typeof er.oninput}_t=$t}else _t=!1;Qt=_t&&(!document.documentMode||9<document.documentMode)}function nr(){Dt&&(Dt.detachEvent("onpropertychange",tr),Vt=Dt=null)}function tr(e){if("value"===e.propertyName&&Kt(Vt)){var n=[];Wt(n,Vt,e,we(e)),Le(qt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Vt=t,(Dt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kt(Vt)}function or(e,n){if("click"===e)return Kt(n)}function ir(e,n){if("input"===e||"change"===e)return Kt(n)}var sr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function lr(e,n){if(sr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!d.call(n,a)||!sr(e[a],n[a]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?dr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function fr(){for(var e=window,n=q();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=q((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function hr(e){var n=fr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&dr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var a=t.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=ur(t,o);var i=ur(t,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((n=n.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(n),e.extend(i.node,i.offset)):(n.setEnd(i.node,i.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=u&&"documentMode"in document&&11>=document.documentMode,br=null,gr=null,vr=null,yr=!1;function Ar(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;yr||null==br||br!==q(r)||(r="selectionStart"in(r=br)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&lr(vr,r)||(vr=r,0<(r=Dr(gr,"onSelect")).length&&(n=new ut("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=br)))}function wr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var xr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Cr={},Er={};function Pr(e){if(Cr[e])return Cr[e];if(!xr[e])return e;var n,t=xr[e];for(n in t)if(t.hasOwnProperty(n)&&n in Er)return Cr[e]=t[n];return e}u&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete xr.animationend.animation,delete xr.animationiteration.animation,delete xr.animationstart.animation),"TransitionEvent"in window||delete xr.transitionend.transition);var kr=Pr("animationend"),Tr=Pr("animationiteration"),Sr=Pr("animationstart"),zr=Pr("transitionend"),Nr=new Map,Lr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Br(e,n){Nr.set(e,n),l(n,[e])}for(var Or=0;Or<Lr.length;Or++){var Hr=Lr[Or];Br(Hr.toLowerCase(),"on"+(Hr[0].toUpperCase()+Hr.slice(1)))}Br(kr,"onAnimationEnd"),Br(Tr,"onAnimationIteration"),Br(Sr,"onAnimationStart"),Br("dblclick","onDoubleClick"),Br("focusin","onFocus"),Br("focusout","onBlur"),Br(zr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ur="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Rr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ur));function Fr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,i,s,l,c){if(Ze.apply(this,arguments),Re){if(!Re)throw Error(o(198));var u=Fe;Re=!1,Fe=null,je||(je=!0,Xe=u)}}(r,n,void 0,e),e.currentTarget=null}function jr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var o=void 0;if(n)for(var i=r.length-1;0<=i;i--){var s=r[i],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==o&&a.isPropagationStopped())break e;Fr(a,s,c),o=l}else for(i=0;i<r.length;i++){if(l=(s=r[i]).instance,c=s.currentTarget,s=s.listener,l!==o&&a.isPropagationStopped())break e;Fr(a,s,c),o=l}}}if(je)throw e=Xe,je=!1,Xe=null,e}function Xr(e,n){var t=n[ma];void 0===t&&(t=n[ma]=new Set);var r=e+"__bubble";t.has(r)||(Yr(n,e,2,!1),t.add(r))}function Mr(e,n,t){var r=0;n&&(r|=4),Yr(t,e,r,n)}var Zr="_reactListening"+Math.random().toString(36).slice(2);function Gr(e){if(!e[Zr]){e[Zr]=!0,i.forEach((function(n){"selectionchange"!==n&&(Rr.has(n)||Mr(n,!1,e),Mr(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Zr]||(n[Zr]=!0,Mr("selectionchange",!1,n))}}function Yr(e,n,t,r){switch(Qn(n)){case 1:var a=Dn;break;case 4:a=Vn;break;default:a=qn}t=a.bind(null,n,t,e),a=void 0,!Oe||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function Ir(e,n,t,r,a){var o=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=va(s)))return;if(5===(l=i.tag)||6===l){r=o=i;continue e}s=s.parentNode}}r=r.return}Le((function(){var r=o,a=we(t),i=[];e:{var s=Nr.get(e);if(void 0!==s){var l=ut,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":l=Tt;break;case"focusin":c="focus",l=bt;break;case"focusout":c="blur",l=bt;break;case"beforeblur":case"afterblur":l=bt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=zt;break;case kr:case Tr:case Sr:l=gt;break;case zr:l=Nt;break;case"scroll":l=ft;break;case"wheel":l=Bt;break;case"copy":case"cut":case"paste":l=yt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=St}var u=0!=(4&n),d=!u&&"scroll"===e,f=u?null!==s?s+"Capture":null:s;u=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==f&&null!=(m=Be(h,f))&&u.push(Wr(h,m,p))),d)break;h=h.return}0<u.length&&(s=new l(s,c,null,t,a),i.push({event:s,listeners:u}))}}if(0==(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||t===Ae||!(c=t.relatedTarget||t.fromElement)||!va(c)&&!c[ha])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(c=(c=t.relatedTarget||t.toElement)?va(c):null)&&(c!==(d=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(u=ht,m="onMouseLeave",f="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(u=St,m="onPointerLeave",f="onPointerEnter",h="pointer"),d=null==l?s:Aa(l),p=null==c?s:Aa(c),(s=new u(m,h+"leave",l,t,a)).target=d,s.relatedTarget=p,m=null,va(a)===r&&((u=new u(f,h+"enter",c,t,a)).target=p,u.relatedTarget=d,m=u),d=m,l&&c)e:{for(f=c,h=0,p=u=l;p;p=Vr(p))h++;for(p=0,m=f;m;m=Vr(m))p++;for(;0<h-p;)u=Vr(u),h--;for(;0<p-h;)f=Vr(f),p--;for(;h--;){if(u===f||null!==f&&u===f.alternate)break e;u=Vr(u),f=Vr(f)}u=null}else u=null;null!==l&&qr(i,s,l,u,!1),null!==c&&null!==d&&qr(i,d,c,u,!0)}if("select"===(l=(s=r?Aa(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var b=Jt;else if(It(s))if(Qt)b=ir;else{b=ar;var g=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(b=or);switch(b&&(b=b(e,r))?Wt(i,b,t,a):(g&&g(e,s,r),"focusout"===e&&(g=s._wrapperState)&&g.controlled&&"number"===s.type&&ee(s,"number",s.value)),g=r?Aa(r):window,e){case"focusin":(It(g)||"true"===g.contentEditable)&&(br=g,gr=r,vr=null);break;case"focusout":vr=gr=br=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,Ar(i,t,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":Ar(i,t,a)}var v;if(Ht)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Gt?Mt(e,t)&&(y="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(y="onCompositionStart");y&&(Ft&&"ko"!==t.locale&&(Gt||"onCompositionStart"!==y?"onCompositionEnd"===y&&Gt&&(v=nt()):($n="value"in(_n=a)?_n.value:_n.textContent,Gt=!0)),0<(g=Dr(r,y)).length&&(y=new At(y,e,null,t,a),i.push({event:y,listeners:g}),(v||null!==(v=Zt(t)))&&(y.data=v))),(v=Rt?function(e,n){switch(e){case"compositionend":return Zt(n);case"keypress":return 32!==n.which?null:(Xt=!0,jt);case"textInput":return(e=n.data)===jt&&Xt?null:e;default:return null}}(e,t):function(e,n){if(Gt)return"compositionend"===e||!Ht&&Mt(e,n)?(e=nt(),et=$n=_n=null,Gt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Ft&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Dr(r,"onBeforeInput")).length&&(a=new At("onBeforeInput","beforeinput",null,t,a),i.push({event:a,listeners:r}),a.data=v)}jr(i,n)}))}function Wr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Dr(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Be(e,t))&&r.unshift(Wr(e,o,a)),null!=(o=Be(e,n))&&r.push(Wr(e,o,a))),e=e.return}return r}function Vr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qr(e,n,t,r,a){for(var o=n._reactName,i=[];null!==t&&t!==r;){var s=t,l=s.alternate,c=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==c&&(s=c,a?null!=(l=Be(t,o))&&i.unshift(Wr(t,l,s)):a||null!=(l=Be(t,o))&&i.push(Wr(t,l,s))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}var Kr=/\r\n?/g,Jr=/\u0000|\uFFFD/g;function Qr(e){return("string"==typeof e?e:""+e).replace(Kr,"\n").replace(Jr,"")}function _r(e,n,t){if(n=Qr(n),Qr(e)!==n&&t)throw Error(o(425))}function $r(){}var ea=null,na=null;function ta(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(sa)}:ra;function sa(e){setTimeout((function(){throw e}))}function la(e,n){var t=n,r=0;do{var a=t.nextSibling;if(e.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return e.removeChild(a),void Yn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);Yn(n)}function ca(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ua(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),fa="__reactFiber$"+da,pa="__reactProps$"+da,ha="__reactContainer$"+da,ma="__reactEvents$"+da,ba="__reactListeners$"+da,ga="__reactHandles$"+da;function va(e){var n=e[fa];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ha]||t[fa]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=ua(e);null!==e;){if(t=e[fa])return t;e=ua(e)}return n}t=(e=t).parentNode}return null}function ya(e){return!(e=e[fa]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Aa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function wa(e){return e[pa]||null}var xa=[],Ca=-1;function Ea(e){return{current:e}}function Pa(e){0>Ca||(e.current=xa[Ca],xa[Ca]=null,Ca--)}function ka(e,n){Ca++,xa[Ca]=e.current,e.current=n}var Ta={},Sa=Ea(Ta),za=Ea(!1),Na=Ta;function La(e,n){var t=e.type.contextTypes;if(!t)return Ta;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=o),o}function Ba(e){return null!=e.childContextTypes}function Oa(){Pa(za),Pa(Sa)}function Ha(e,n,t){if(Sa.current!==Ta)throw Error(o(168));ka(Sa,n),ka(za,t)}function Ua(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in n))throw Error(o(108,Y(e)||"Unknown",a));return F({},t,r)}function Ra(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ta,Na=Sa.current,ka(Sa,e),ka(za,za.current),!0}function Fa(e,n,t){var r=e.stateNode;if(!r)throw Error(o(169));t?(e=Ua(e,n,Na),r.__reactInternalMemoizedMergedChildContext=e,Pa(za),Pa(Sa),ka(Sa,e)):Pa(za),ka(za,t)}var ja=null,Xa=!1,Ma=!1;function Za(e){null===ja?ja=[e]:ja.push(e)}function Ga(){if(!Ma&&null!==ja){Ma=!0;var e=0,n=An;try{var t=ja;for(An=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}ja=null,Xa=!1}catch(n){throw null!==ja&&(ja=ja.slice(e+1)),Ve($e,Ga),n}finally{An=n,Ma=!1}}return null}var Ya=[],Ia=0,Wa=null,Da=0,Va=[],qa=0,Ka=null,Ja=1,Qa="";function _a(e,n){Ya[Ia++]=Da,Ya[Ia++]=Wa,Wa=e,Da=n}function $a(e,n,t){Va[qa++]=Ja,Va[qa++]=Qa,Va[qa++]=Ka,Ka=e;var r=Ja;e=Qa;var a=32-sn(r)-1;r&=~(1<<a),t+=1;var o=32-sn(n)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Ja=1<<32-sn(n)+a|t<<a|r,Qa=o+e}else Ja=1<<o|t<<a|r,Qa=e}function eo(e){null!==e.return&&(_a(e,1),$a(e,1,0))}function no(e){for(;e===Wa;)Wa=Ya[--Ia],Ya[Ia]=null,Da=Ya[--Ia],Ya[Ia]=null;for(;e===Ka;)Ka=Va[--qa],Va[qa]=null,Qa=Va[--qa],Va[qa]=null,Ja=Va[--qa],Va[qa]=null}var to=null,ro=null,ao=!1,oo=null;function io(e,n){var t=Lc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function so(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,to=e,ro=ca(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,to=e,ro=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Ka?{id:Ja,overflow:Qa}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Lc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,to=e,ro=null,!0);default:return!1}}function lo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(ao){var n=ro;if(n){var t=n;if(!so(e,n)){if(lo(e))throw Error(o(418));n=ca(t.nextSibling);var r=to;n&&so(e,n)?io(r,t):(e.flags=-4097&e.flags|2,ao=!1,to=e)}}else{if(lo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,to=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;to=e}function fo(e){if(e!==to)return!1;if(!ao)return uo(e),ao=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ta(e.type,e.memoizedProps)),n&&(n=ro)){if(lo(e))throw po(),Error(o(418));for(;n;)io(e,n),n=ca(n.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){ro=ca(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}ro=null}}else ro=to?ca(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=ca(e.nextSibling)}function ho(){ro=to=null,ao=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var bo=A.ReactCurrentBatchConfig;function go(e,n){if(e&&e.defaultProps){for(var t in n=F({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var vo=Ea(null),yo=null,Ao=null,wo=null;function xo(){wo=Ao=yo=null}function Co(e){var n=vo.current;Pa(vo),e._currentValue=n}function Eo(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Po(e,n){yo=e,wo=Ao=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(As=!0),e.firstContext=null)}function ko(e){var n=e._currentValue;if(wo!==e)if(e={context:e,memoizedValue:n,next:null},null===Ao){if(null===yo)throw Error(o(308));Ao=e,yo.dependencies={lanes:0,firstContext:e}}else Ao=Ao.next=e;return n}var To=null;function So(e){null===To?To=[e]:To.push(e)}function zo(e,n,t,r){var a=n.interleaved;return null===a?(t.next=t,So(n)):(t.next=a.next,a.next=t),n.interleaved=t,No(e,r)}function No(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Lo=!1;function Bo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Oo(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ho(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Uo(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Sl)){var a=r.pending;return null===a?n.next=n:(n.next=a.next,a.next=n),r.pending=n,No(e,t)}return null===(a=r.interleaved)?(n.next=n,So(r)):(n.next=a.next,a.next=n),r.interleaved=n,No(e,t)}function Ro(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!=(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,yn(e,t)}}function Fo(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?a=o=i:o=o.next=i,t=t.next}while(null!==t);null===o?a=o=n:o=o.next=n}else a=o=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function jo(e,n,t,r){var a=e.updateQueue;Lo=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,c=l.next;l.next=null,null===i?o=c:i.next=c,i=l;var u=e.alternate;null!==u&&(s=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l)}if(null!==o){var d=a.baseState;for(i=0,u=c=l=null,s=o;;){var f=s.lane,p=s.eventTime;if((r&f)===f){null!==u&&(u=u.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var h=e,m=s;switch(f=n,p=t,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,f);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(f="function"==typeof(h=m.payload)?h.call(p,d,f):h))break e;d=F({},d,f);break e;case 2:Lo=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(f=a.effects)?a.effects=[s]:f.push(s))}else p={eventTime:p,lane:f,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=p,l=d):u=u.next=p,i|=f;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(f=s).next,f.next=null,a.lastBaseUpdate=f,a.shared.pending=null}}if(null===u&&(l=d),a.baseState=l,a.firstBaseUpdate=c,a.lastBaseUpdate=u,null!==(n=a.shared.interleaved)){a=n;do{i|=a.lane,a=a.next}while(a!==n)}else null===o&&(a.shared.lanes=0);Rl|=i,e.lanes=i,e.memoizedState=d}}function Xo(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Mo=(new r.Component).refs;function Zo(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:F({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Go={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ec(),a=nc(e),o=Ho(r,a);o.payload=n,null!=t&&(o.callback=t),null!==(n=Uo(e,o,a))&&(tc(n,e,a,r),Ro(n,e,a))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ec(),a=nc(e),o=Ho(r,a);o.tag=1,o.payload=n,null!=t&&(o.callback=t),null!==(n=Uo(e,o,a))&&(tc(n,e,a,r),Ro(n,e,a))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ec(),r=nc(e),a=Ho(t,r);a.tag=2,null!=n&&(a.callback=n),null!==(n=Uo(e,a,r))&&(tc(n,e,r,t),Ro(n,e,r))}};function Yo(e,n,t,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(n.prototype&&n.prototype.isPureReactComponent&&lr(t,r)&&lr(a,o))}function Io(e,n,t){var r=!1,a=Ta,o=n.contextType;return"object"==typeof o&&null!==o?o=ko(o):(a=Ba(n)?Na:Sa.current,o=(r=null!=(r=n.contextTypes))?La(e,a):Ta),n=new n(t,o),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Go,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),n}function Wo(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Go.enqueueReplaceState(n,n.state,null)}function Do(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs=Mo,Bo(e);var o=n.contextType;"object"==typeof o&&null!==o?a.context=ko(o):(o=Ba(n)?Na:Sa.current,a.context=La(e,o)),a.state=e.memoizedState,"function"==typeof(o=n.getDerivedStateFromProps)&&(Zo(e,n,o,t),a.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(n=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&Go.enqueueReplaceState(a,a.state,null),jo(e,t,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Vo(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===i?n.ref:(n=function(e){var n=a.refs;n===Mo&&(n=a.refs={}),null===e?delete n[i]:n[i]=e},n._stringRef=i,n)}if("string"!=typeof e)throw Error(o(284));if(!t._owner)throw Error(o(290,e))}return e}function qo(e,n){throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Ko(e){return(0,e._init)(e._payload)}function Jo(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Oc(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function s(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,t,r){return null===n||6!==n.tag?((n=Fc(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function c(e,n,t,r){var o=t.type;return o===C?d(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===B&&Ko(o)===n.type)?((r=a(n,t.props)).ref=Vo(e,n,t),r.return=e,r):((r=Hc(t.type,t.key,t.props,null,e.mode,r)).ref=Vo(e,n,t),r.return=e,r)}function u(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=jc(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function d(e,n,t,r,o){return null===n||7!==n.tag?((n=Uc(t,e.mode,r,o)).return=e,n):((n=a(n,t)).return=e,n)}function f(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Fc(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return(t=Hc(n.type,n.key,n.props,null,e.mode,t)).ref=Vo(e,null,n),t.return=e,t;case x:return(n=jc(n,e.mode,t)).return=e,n;case B:return f(e,(0,n._init)(n._payload),t)}if(ne(n)||U(n))return(n=Uc(n,e.mode,t,null)).return=e,n;qo(e,n)}return null}function p(e,n,t,r){var a=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==a?null:l(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return t.key===a?c(e,n,t,r):null;case x:return t.key===a?u(e,n,t,r):null;case B:return p(e,n,(a=t._init)(t._payload),r)}if(ne(t)||U(t))return null!==a?null:d(e,n,t,r,null);qo(e,t)}return null}function h(e,n,t,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return l(n,e=e.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return c(n,e=e.get(null===r.key?t:r.key)||null,r,a);case x:return u(n,e=e.get(null===r.key?t:r.key)||null,r,a);case B:return h(e,n,t,(0,r._init)(r._payload),a)}if(ne(r)||U(r))return d(n,e=e.get(t)||null,r,a,null);qo(n,r)}return null}function m(a,o,s,l){for(var c=null,u=null,d=o,m=o=0,b=null;null!==d&&m<s.length;m++){d.index>m?(b=d,d=null):b=d.sibling;var g=p(a,d,s[m],l);if(null===g){null===d&&(d=b);break}e&&d&&null===g.alternate&&n(a,d),o=i(g,o,m),null===u?c=g:u.sibling=g,u=g,d=b}if(m===s.length)return t(a,d),ao&&_a(a,m),c;if(null===d){for(;m<s.length;m++)null!==(d=f(a,s[m],l))&&(o=i(d,o,m),null===u?c=d:u.sibling=d,u=d);return ao&&_a(a,m),c}for(d=r(a,d);m<s.length;m++)null!==(b=h(d,a,m,s[m],l))&&(e&&null!==b.alternate&&d.delete(null===b.key?m:b.key),o=i(b,o,m),null===u?c=b:u.sibling=b,u=b);return e&&d.forEach((function(e){return n(a,e)})),ao&&_a(a,m),c}function b(a,s,l,c){var u=U(l);if("function"!=typeof u)throw Error(o(150));if(null==(l=u.call(l)))throw Error(o(151));for(var d=u=null,m=s,b=s=0,g=null,v=l.next();null!==m&&!v.done;b++,v=l.next()){m.index>b?(g=m,m=null):g=m.sibling;var y=p(a,m,v.value,c);if(null===y){null===m&&(m=g);break}e&&m&&null===y.alternate&&n(a,m),s=i(y,s,b),null===d?u=y:d.sibling=y,d=y,m=g}if(v.done)return t(a,m),ao&&_a(a,b),u;if(null===m){for(;!v.done;b++,v=l.next())null!==(v=f(a,v.value,c))&&(s=i(v,s,b),null===d?u=v:d.sibling=v,d=v);return ao&&_a(a,b),u}for(m=r(a,m);!v.done;b++,v=l.next())null!==(v=h(m,a,b,v.value,c))&&(e&&null!==v.alternate&&m.delete(null===v.key?b:v.key),s=i(v,s,b),null===d?u=v:d.sibling=v,d=v);return e&&m.forEach((function(e){return n(a,e)})),ao&&_a(a,b),u}return function e(r,o,i,l){if("object"==typeof i&&null!==i&&i.type===C&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var c=i.key,u=o;null!==u;){if(u.key===c){if((c=i.type)===C){if(7===u.tag){t(r,u.sibling),(o=a(u,i.props.children)).return=r,r=o;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===B&&Ko(c)===u.type){t(r,u.sibling),(o=a(u,i.props)).ref=Vo(r,u,i),o.return=r,r=o;break e}t(r,u);break}n(r,u),u=u.sibling}i.type===C?((o=Uc(i.props.children,r.mode,l,i.key)).return=r,r=o):((l=Hc(i.type,i.key,i.props,null,r.mode,l)).ref=Vo(r,o,i),l.return=r,r=l)}return s(r);case x:e:{for(u=i.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){t(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break e}t(r,o);break}n(r,o),o=o.sibling}(o=jc(i,r.mode,l)).return=r,r=o}return s(r);case B:return e(r,o,(u=i._init)(i._payload),l)}if(ne(i))return m(r,o,i,l);if(U(i))return b(r,o,i,l);qo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(t(r,o.sibling),(o=a(o,i)).return=r,r=o):(t(r,o),(o=Fc(i,r.mode,l)).return=r,r=o),s(r)):t(r,o)}}var Qo=Jo(!0),_o=Jo(!1),$o={},ei=Ea($o),ni=Ea($o),ti=Ea($o);function ri(e){if(e===$o)throw Error(o(174));return e}function ai(e,n){switch(ka(ti,n),ka(ni,e),ka(ei,$o),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Pa(ei),ka(ei,n)}function oi(){Pa(ei),Pa(ni),Pa(ti)}function ii(e){ri(ti.current);var n=ri(ei.current),t=le(n,e.type);n!==t&&(ka(ni,e),ka(ei,t))}function si(e){ni.current===e&&(Pa(ei),Pa(ni))}var li=Ea(0);function ci(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ui=[];function di(){for(var e=0;e<ui.length;e++)ui[e]._workInProgressVersionPrimary=null;ui.length=0}var fi=A.ReactCurrentDispatcher,pi=A.ReactCurrentBatchConfig,hi=0,mi=null,bi=null,gi=null,vi=!1,yi=!1,Ai=0,wi=0;function xi(){throw Error(o(321))}function Ci(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!sr(e[t],n[t]))return!1;return!0}function Ei(e,n,t,r,a,i){if(hi=i,mi=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,fi.current=null===e||null===e.memoizedState?ss:ls,e=t(r,a),yi){i=0;do{if(yi=!1,Ai=0,25<=i)throw Error(o(301));i+=1,gi=bi=null,n.updateQueue=null,fi.current=cs,e=t(r,a)}while(yi)}if(fi.current=is,n=null!==bi&&null!==bi.next,hi=0,gi=bi=mi=null,vi=!1,n)throw Error(o(300));return e}function Pi(){var e=0!==Ai;return Ai=0,e}function ki(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===gi?mi.memoizedState=gi=e:gi=gi.next=e,gi}function Ti(){if(null===bi){var e=mi.alternate;e=null!==e?e.memoizedState:null}else e=bi.next;var n=null===gi?mi.memoizedState:gi.next;if(null!==n)gi=n,bi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(bi=e).memoizedState,baseState:bi.baseState,baseQueue:bi.baseQueue,queue:bi.queue,next:null},null===gi?mi.memoizedState=gi=e:gi=gi.next=e}return gi}function Si(e,n){return"function"==typeof n?n(e):n}function zi(e){var n=Ti(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=bi,a=r.baseQueue,i=t.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}r.baseQueue=a=i,t.pending=null}if(null!==a){i=a.next,r=r.baseState;var l=s=null,c=null,u=i;do{var d=u.lane;if((hi&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var f={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=f,s=r):c=c.next=f,mi.lanes|=d,Rl|=d}u=u.next}while(null!==u&&u!==i);null===c?s=r:c.next=l,sr(r,n.memoizedState)||(As=!0),n.memoizedState=r,n.baseState=s,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){a=e;do{i=a.lane,mi.lanes|=i,Rl|=i,a=a.next}while(a!==e)}else null===a&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ni(e){var n=Ti(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,i=n.memoizedState;if(null!==a){t.pending=null;var s=a=a.next;do{i=e(i,s.action),s=s.next}while(s!==a);sr(i,n.memoizedState)||(As=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function Li(){}function Bi(e,n){var t=mi,r=Ti(),a=n(),i=!sr(r.memoizedState,a);if(i&&(r.memoizedState=a,As=!0),r=r.queue,Ii(Ui.bind(null,t,r,e),[e]),r.getSnapshot!==n||i||null!==gi&&1&gi.memoizedState.tag){if(t.flags|=2048,Xi(9,Hi.bind(null,t,r,a,n),void 0,null),null===zl)throw Error(o(349));0!=(30&hi)||Oi(t,n,a)}return a}function Oi(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=mi.updateQueue)?(n={lastEffect:null,stores:null},mi.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Hi(e,n,t,r){n.value=t,n.getSnapshot=r,Ri(n)&&Fi(e)}function Ui(e,n,t){return t((function(){Ri(n)&&Fi(e)}))}function Ri(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!sr(e,t)}catch(e){return!0}}function Fi(e){var n=No(e,1);null!==n&&tc(n,e,1,-1)}function ji(e){var n=ki();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Si,lastRenderedState:e},n.queue=e,e=e.dispatch=ts.bind(null,mi,e),[n.memoizedState,e]}function Xi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=mi.updateQueue)?(n={lastEffect:null,stores:null},mi.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Mi(){return Ti().memoizedState}function Zi(e,n,t,r){var a=ki();mi.flags|=e,a.memoizedState=Xi(1|n,t,void 0,void 0===r?null:r)}function Gi(e,n,t,r){var a=Ti();r=void 0===r?null:r;var o=void 0;if(null!==bi){var i=bi.memoizedState;if(o=i.destroy,null!==r&&Ci(r,i.deps))return void(a.memoizedState=Xi(n,t,o,r))}mi.flags|=e,a.memoizedState=Xi(1|n,t,o,r)}function Yi(e,n){return Zi(8390656,8,e,n)}function Ii(e,n){return Gi(2048,8,e,n)}function Wi(e,n){return Gi(4,2,e,n)}function Di(e,n){return Gi(4,4,e,n)}function Vi(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function qi(e,n,t){return t=null!=t?t.concat([e]):null,Gi(4,4,Vi.bind(null,n,e),t)}function Ki(){}function Ji(e,n){var t=Ti();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Ci(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Qi(e,n){var t=Ti();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Ci(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function _i(e,n,t){return 0==(21&hi)?(e.baseState&&(e.baseState=!1,As=!0),e.memoizedState=t):(sr(t,n)||(t=bn(),mi.lanes|=t,Rl|=t,e.baseState=!0),n)}function $i(e,n){var t=An;An=0!==t&&4>t?t:4,e(!0);var r=pi.transition;pi.transition={};try{e(!1),n()}finally{An=t,pi.transition=r}}function es(){return Ti().memoizedState}function ns(e,n,t){var r=nc(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},rs(e)?as(n,t):null!==(t=zo(e,n,t,r))&&(tc(t,e,r,ec()),os(t,n,r))}function ts(e,n,t){var r=nc(e),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(rs(e))as(n,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=n.lastRenderedReducer))try{var i=n.lastRenderedState,s=o(i,t);if(a.hasEagerState=!0,a.eagerState=s,sr(s,i)){var l=n.interleaved;return null===l?(a.next=a,So(n)):(a.next=l.next,l.next=a),void(n.interleaved=a)}}catch(e){}null!==(t=zo(e,n,a,r))&&(tc(t,e,r,a=ec()),os(t,n,r))}}function rs(e){var n=e.alternate;return e===mi||null!==n&&n===mi}function as(e,n){yi=vi=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function os(e,n,t){if(0!=(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,yn(e,t)}}var is={readContext:ko,useCallback:xi,useContext:xi,useEffect:xi,useImperativeHandle:xi,useInsertionEffect:xi,useLayoutEffect:xi,useMemo:xi,useReducer:xi,useRef:xi,useState:xi,useDebugValue:xi,useDeferredValue:xi,useTransition:xi,useMutableSource:xi,useSyncExternalStore:xi,useId:xi,unstable_isNewReconciler:!1},ss={readContext:ko,useCallback:function(e,n){return ki().memoizedState=[e,void 0===n?null:n],e},useContext:ko,useEffect:Yi,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Zi(4194308,4,Vi.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Zi(4194308,4,e,n)},useInsertionEffect:function(e,n){return Zi(4,2,e,n)},useMemo:function(e,n){var t=ki();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ki();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=ns.bind(null,mi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ki().memoizedState=e},useState:ji,useDebugValue:Ki,useDeferredValue:function(e){return ki().memoizedState=e},useTransition:function(){var e=ji(!1),n=e[0];return e=$i.bind(null,e[1]),ki().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=mi,a=ki();if(ao){if(void 0===t)throw Error(o(407));t=t()}else{if(t=n(),null===zl)throw Error(o(349));0!=(30&hi)||Oi(r,n,t)}a.memoizedState=t;var i={value:t,getSnapshot:n};return a.queue=i,Yi(Ui.bind(null,r,i,e),[e]),r.flags|=2048,Xi(9,Hi.bind(null,r,i,t,n),void 0,null),t},useId:function(){var e=ki(),n=zl.identifierPrefix;if(ao){var t=Qa;n=":"+n+"R"+(t=(Ja&~(1<<32-sn(Ja)-1)).toString(32)+t),0<(t=Ai++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=wi++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ls={readContext:ko,useCallback:Ji,useContext:ko,useEffect:Ii,useImperativeHandle:qi,useInsertionEffect:Wi,useLayoutEffect:Di,useMemo:Qi,useReducer:zi,useRef:Mi,useState:function(){return zi(Si)},useDebugValue:Ki,useDeferredValue:function(e){return _i(Ti(),bi.memoizedState,e)},useTransition:function(){return[zi(Si)[0],Ti().memoizedState]},useMutableSource:Li,useSyncExternalStore:Bi,useId:es,unstable_isNewReconciler:!1},cs={readContext:ko,useCallback:Ji,useContext:ko,useEffect:Ii,useImperativeHandle:qi,useInsertionEffect:Wi,useLayoutEffect:Di,useMemo:Qi,useReducer:Ni,useRef:Mi,useState:function(){return Ni(Si)},useDebugValue:Ki,useDeferredValue:function(e){var n=Ti();return null===bi?n.memoizedState=e:_i(n,bi.memoizedState,e)},useTransition:function(){return[Ni(Si)[0],Ti().memoizedState]},useMutableSource:Li,useSyncExternalStore:Bi,useId:es,unstable_isNewReconciler:!1};function us(e,n){try{var t="",r=n;do{t+=Z(r),r=r.return}while(r);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:a,digest:null}}function ds(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function fs(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var ps="function"==typeof WeakMap?WeakMap:Map;function hs(e,n,t){(t=Ho(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Il||(Il=!0,Wl=r),fs(0,n)},t}function ms(e,n,t){(t=Ho(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=n.value;t.payload=function(){return r(a)},t.callback=function(){fs(0,n)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){fs(0,n),"function"!=typeof r&&(null===Dl?Dl=new Set([this]):Dl.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function bs(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new ps;var a=new Set;r.set(n,a)}else void 0===(a=r.get(n))&&(a=new Set,r.set(n,a));a.has(t)||(a.add(t),e=Pc.bind(null,e,n,t),n.then(e,e))}function gs(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function vs(e,n,t,r,a){return 0==(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Ho(-1,1)).tag=2,Uo(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var ys=A.ReactCurrentOwner,As=!1;function ws(e,n,t,r){n.child=null===e?_o(n,null,t,r):Qo(n,e.child,t,r)}function xs(e,n,t,r,a){t=t.render;var o=n.ref;return Po(n,a),r=Ei(e,n,t,r,o,a),t=Pi(),null===e||As?(ao&&t&&eo(n),n.flags|=1,ws(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,Is(e,n,a))}function Cs(e,n,t,r,a){if(null===e){var o=t.type;return"function"!=typeof o||Bc(o)||void 0!==o.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Hc(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=o,Es(e,n,o,r,a))}if(o=e.child,0==(e.lanes&a)){var i=o.memoizedProps;if((t=null!==(t=t.compare)?t:lr)(i,r)&&e.ref===n.ref)return Is(e,n,a)}return n.flags|=1,(e=Oc(o,r)).ref=n.ref,e.return=n,n.child=e}function Es(e,n,t,r,a){if(null!==e){var o=e.memoizedProps;if(lr(o,r)&&e.ref===n.ref){if(As=!1,n.pendingProps=r=o,0==(e.lanes&a))return n.lanes=e.lanes,Is(e,n,a);0!=(131072&e.flags)&&(As=!0)}}return Ts(e,n,t,r,a)}function Ps(e,n,t){var r=n.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Ol,Bl),Bl|=t;else{if(0==(1073741824&t))return e=null!==o?o.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,ka(Ol,Bl),Bl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:t,ka(Ol,Bl),Bl|=r}else null!==o?(r=o.baseLanes|t,n.memoizedState=null):r=t,ka(Ol,Bl),Bl|=r;return ws(e,n,a,t),n.child}function ks(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function Ts(e,n,t,r,a){var o=Ba(t)?Na:Sa.current;return o=La(n,o),Po(n,a),t=Ei(e,n,t,r,o,a),r=Pi(),null===e||As?(ao&&r&&eo(n),n.flags|=1,ws(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,Is(e,n,a))}function Ss(e,n,t,r,a){if(Ba(t)){var o=!0;Ra(n)}else o=!1;if(Po(n,a),null===n.stateNode)Ys(e,n),Io(n,t,r),Do(n,t,r,a),r=!0;else if(null===e){var i=n.stateNode,s=n.memoizedProps;i.props=s;var l=i.context,c=t.contextType;c="object"==typeof c&&null!==c?ko(c):La(n,c=Ba(t)?Na:Sa.current);var u=t.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||l!==c)&&Wo(n,i,r,c),Lo=!1;var f=n.memoizedState;i.state=f,jo(n,r,i,a),l=n.memoizedState,s!==r||f!==l||za.current||Lo?("function"==typeof u&&(Zo(n,t,u,r),l=n.memoizedState),(s=Lo||Yo(n,t,s,r,f,l,c))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4194308)):("function"==typeof i.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=l),i.props=r,i.state=l,i.context=c,r=s):("function"==typeof i.componentDidMount&&(n.flags|=4194308),r=!1)}else{i=n.stateNode,Oo(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:go(n.type,s),i.props=c,d=n.pendingProps,f=i.context,l="object"==typeof(l=t.contextType)&&null!==l?ko(l):La(n,l=Ba(t)?Na:Sa.current);var p=t.getDerivedStateFromProps;(u="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==d||f!==l)&&Wo(n,i,r,l),Lo=!1,f=n.memoizedState,i.state=f,jo(n,r,i,a);var h=n.memoizedState;s!==d||f!==h||za.current||Lo?("function"==typeof p&&(Zo(n,t,p,r),h=n.memoizedState),(c=Lo||Yo(n,t,c,r,f,h,l)||!1)?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,l)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=h),i.props=r,i.state=h,i.context=l,r=c):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),r=!1)}return zs(e,n,t,r,o,a)}function zs(e,n,t,r,a,o){ks(e,n);var i=0!=(128&n.flags);if(!r&&!i)return a&&Fa(n,t,!1),Is(e,n,o);r=n.stateNode,ys.current=n;var s=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=Qo(n,e.child,null,o),n.child=Qo(n,null,s,o)):ws(e,n,s,o),n.memoizedState=r.state,a&&Fa(n,t,!0),n.child}function Ns(e){var n=e.stateNode;n.pendingContext?Ha(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Ha(0,n.context,!1),ai(e,n.containerInfo)}function Ls(e,n,t,r,a){return ho(),mo(a),n.flags|=256,ws(e,n,t,r),n.child}var Bs,Os,Hs,Us={dehydrated:null,treeContext:null,retryLane:0};function Rs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fs(e,n,t){var r,a=n.pendingProps,i=li.current,s=!1,l=0!=(128&n.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(s=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),ka(li,1&i),null===e)return co(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(l=a.children,e=a.fallback,s?(a=n.mode,s=n.child,l={mode:"hidden",children:l},0==(1&a)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Rc(l,a,0,null),e=Uc(e,a,t,null),s.return=n,e.return=n,s.sibling=e,n.child=s,n.child.memoizedState=Rs(t),n.memoizedState=Us,e):js(n,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,n,t,r,a,i,s){if(t)return 256&n.flags?(n.flags&=-257,Xs(e,n,s,r=ds(Error(o(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(i=r.fallback,a=n.mode,r=Rc({mode:"visible",children:r.children},a,0,null),(i=Uc(i,a,s,null)).flags|=2,r.return=n,i.return=n,r.sibling=i,n.child=r,0!=(1&n.mode)&&Qo(n,e.child,null,s),n.child.memoizedState=Rs(s),n.memoizedState=Us,i);if(0==(1&n.mode))return Xs(e,n,s,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var l=r.dgst;return r=l,Xs(e,n,s,r=ds(i=Error(o(419)),r,void 0))}if(l=0!=(s&e.childLanes),As||l){if(null!==(r=zl)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|s))?0:a)&&a!==i.retryLane&&(i.retryLane=a,No(e,a),tc(r,e,a,-1))}return mc(),Xs(e,n,s,r=ds(Error(o(421))))}return"$?"===a.data?(n.flags|=128,n.child=e.child,n=Tc.bind(null,e),a._reactRetry=n,null):(e=i.treeContext,ro=ca(a.nextSibling),to=n,ao=!0,oo=null,null!==e&&(Va[qa++]=Ja,Va[qa++]=Qa,Va[qa++]=Ka,Ja=e.id,Qa=e.overflow,Ka=n),(n=js(n,r.children)).flags|=4096,n)}(e,n,l,a,r,i,t);if(s){s=a.fallback,l=n.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:a.children};return 0==(1&l)&&n.child!==i?((a=n.child).childLanes=0,a.pendingProps=c,n.deletions=null):(a=Oc(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==r?s=Oc(r,s):(s=Uc(s,l,t,null)).flags|=2,s.return=n,a.return=n,a.sibling=s,n.child=a,a=s,s=n.child,l=null===(l=e.child.memoizedState)?Rs(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~t,n.memoizedState=Us,a}return e=(s=e.child).sibling,a=Oc(s,{mode:"visible",children:a.children}),0==(1&n.mode)&&(a.lanes=t),a.return=n,a.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=a,n.memoizedState=null,a}function js(e,n){return(n=Rc({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Xs(e,n,t,r){return null!==r&&mo(r),Qo(n,e.child,null,t),(e=js(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Ms(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Eo(e.return,n,t)}function Zs(e,n,t,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=t,o.tailMode=a)}function Gs(e,n,t){var r=n.pendingProps,a=r.revealOrder,o=r.tail;if(ws(e,n,r.children,t),0!=(2&(r=li.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ms(e,t,n);else if(19===e.tag)Ms(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(li,r),0==(1&n.mode))n.memoizedState=null;else switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===ci(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Zs(n,!1,a,t,o);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ci(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Zs(n,!0,t,null,o);break;case"together":Zs(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Ys(e,n){0==(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Is(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Rl|=n.lanes,0==(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=Oc(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Oc(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Ws(e,n){if(!ao)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ds(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Vs(e,n,t){var r=n.pendingProps;switch(no(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ds(n),null;case 1:case 17:return Ba(n.type)&&Oa(),Ds(n),null;case 3:return r=n.stateNode,oi(),Pa(za),Pa(Sa),di(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fo(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&n.flags)||(n.flags|=1024,null!==oo&&(ic(oo),oo=null))),Ds(n),null;case 5:si(n);var a=ri(ti.current);if(t=n.type,null!==e&&null!=n.stateNode)Os(e,n,t,r),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(o(166));return Ds(n),null}if(e=ri(ei.current),fo(n)){r=n.stateNode,t=n.type;var i=n.memoizedProps;switch(r[fa]=n,r[pa]=i,e=0!=(1&n.mode),t){case"dialog":Xr("cancel",r),Xr("close",r);break;case"iframe":case"object":case"embed":Xr("load",r);break;case"video":case"audio":for(a=0;a<Ur.length;a++)Xr(Ur[a],r);break;case"source":Xr("error",r);break;case"img":case"image":case"link":Xr("error",r),Xr("load",r);break;case"details":Xr("toggle",r);break;case"input":J(r,i),Xr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Xr("invalid",r);break;case"textarea":ae(r,i),Xr("invalid",r)}for(var l in ve(t,i),a=null,i)if(i.hasOwnProperty(l)){var c=i[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&_r(r.textContent,c,e),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&_r(r.textContent,c,e),a=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Xr("scroll",r)}switch(t){case"input":D(r),$(r,i,!0);break;case"textarea":D(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=$r)}r=a,n.updateQueue=r,null!==r&&(n.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(t,{is:r.is}):(e=l.createElement(t),"select"===t&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,t),e[fa]=n,e[pa]=r,Bs(e,n),n.stateNode=e;e:{switch(l=ye(t,r),t){case"dialog":Xr("cancel",e),Xr("close",e),a=r;break;case"iframe":case"object":case"embed":Xr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Ur.length;a++)Xr(Ur[a],e);a=r;break;case"source":Xr("error",e),a=r;break;case"img":case"image":case"link":Xr("error",e),Xr("load",e),a=r;break;case"details":Xr("toggle",e),a=r;break;case"input":J(e,r),a=K(e,r),Xr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=F({},r,{value:void 0}),Xr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Xr("invalid",e)}for(i in ve(t,a),c=a)if(c.hasOwnProperty(i)){var u=c[i];"style"===i?be(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===i?"string"==typeof u?("textarea"!==t||""!==u)&&fe(e,u):"number"==typeof u&&fe(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Xr("scroll",e):null!=u&&y(e,i,u,l))}switch(t){case"input":D(e),$(e,r,!1);break;case"textarea":D(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+I(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?te(e,!!r.multiple,i,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=$r)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Ds(n),null;case 6:if(e&&null!=n.stateNode)Hs(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(o(166));if(t=ri(ti.current),ri(ei.current),fo(n)){if(r=n.stateNode,t=n.memoizedProps,r[fa]=n,(i=r.nodeValue!==t)&&null!==(e=to))switch(e.tag){case 3:_r(r.nodeValue,t,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&_r(r.nodeValue,t,0!=(1&e.mode))}i&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[fa]=n,n.stateNode=r}return Ds(n),null;case 13:if(Pa(li),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&0!=(1&n.mode)&&0==(128&n.flags))po(),ho(),n.flags|=98560,i=!1;else if(i=fo(n),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=n.memoizedState)?i.dehydrated:null))throw Error(o(317));i[fa]=n}else ho(),0==(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Ds(n),i=!1}else null!==oo&&(ic(oo),oo=null),i=!0;if(!i)return 65536&n.flags?n:null}return 0!=(128&n.flags)?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!=(1&n.mode)&&(null===e||0!=(1&li.current)?0===Hl&&(Hl=3):mc())),null!==n.updateQueue&&(n.flags|=4),Ds(n),null);case 4:return oi(),null===e&&Gr(n.stateNode.containerInfo),Ds(n),null;case 10:return Co(n.type._context),Ds(n),null;case 19:if(Pa(li),null===(i=n.memoizedState))return Ds(n),null;if(r=0!=(128&n.flags),null===(l=i.rendering))if(r)Ws(i,!1);else{if(0!==Hl||null!==e&&0!=(128&e.flags))for(e=n.child;null!==e;){if(null!==(l=ci(e))){for(n.flags|=128,Ws(i,!1),null!==(r=l.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(i=t).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ka(li,1&li.current|2),n.child}e=e.sibling}null!==i.tail&&Qe()>Gl&&(n.flags|=128,r=!0,Ws(i,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=ci(l))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Ws(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!ao)return Ds(n),null}else 2*Qe()-i.renderingStartTime>Gl&&1073741824!==t&&(n.flags|=128,r=!0,Ws(i,!1),n.lanes=4194304);i.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=i.last)?t.sibling=l:n.child=l,i.last=l)}return null!==i.tail?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=Qe(),n.sibling=null,t=li.current,ka(li,r?1&t|2:1&t),n):(Ds(n),null);case 22:case 23:return dc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!=(1&n.mode)?0!=(1073741824&Bl)&&(Ds(n),6&n.subtreeFlags&&(n.flags|=8192)):Ds(n),null;case 24:case 25:return null}throw Error(o(156,n.tag))}function qs(e,n){switch(no(n),n.tag){case 1:return Ba(n.type)&&Oa(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return oi(),Pa(za),Pa(Sa),di(),0!=(65536&(e=n.flags))&&0==(128&e)?(n.flags=-65537&e|128,n):null;case 5:return si(n),null;case 13:if(Pa(li),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));ho()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Pa(li),null;case 4:return oi(),null;case 10:return Co(n.type._context),null;case 22:case 23:return dc(),null;default:return null}}Bs=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Os=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,ri(ei.current);var o,i=null;switch(t){case"input":a=K(e,a),r=K(e,r),i=[];break;case"select":a=F({},a,{value:void 0}),r=F({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=$r)}for(u in ve(t,r),t=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var l=a[u];for(o in l)l.hasOwnProperty(o)&&(t||(t={}),t[o]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var c=r[u];if(l=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(o in l)!l.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(t||(t={}),t[o]="");for(o in c)c.hasOwnProperty(o)&&l[o]!==c[o]&&(t||(t={}),t[o]=c[o])}else t||(i||(i=[]),i.push(u,t)),t=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(i=i||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Xr("scroll",e),i||l===c||(i=[])):(i=i||[]).push(u,c))}t&&(i=i||[]).push("style",t);var u=i;(n.updateQueue=u)&&(n.flags|=4)}},Hs=function(e,n,t,r){t!==r&&(n.flags|=4)};var Ks=!1,Js=!1,Qs="function"==typeof WeakSet?WeakSet:Set,_s=null;function $s(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ec(e,n,t)}else t.current=null}function el(e,n,t){try{t()}catch(t){Ec(e,n,t)}}var nl=!1;function tl(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&el(n,t,o)}a=a.next}while(a!==r)}}function rl(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function al(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function ol(e){var n=e.alternate;null!==n&&(e.alternate=null,ol(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[fa],delete n[pa],delete n[ma],delete n[ba],delete n[ga]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function sl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=$r));else if(4!==r&&null!==(e=e.child))for(ll(e,n,t),e=e.sibling;null!==e;)ll(e,n,t),e=e.sibling}function cl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cl(e,n,t),e=e.sibling;null!==e;)cl(e,n,t),e=e.sibling}var ul=null,dl=!1;function fl(e,n,t){for(t=t.child;null!==t;)pl(e,n,t),t=t.sibling}function pl(e,n,t){if(on&&"function"==typeof on.onCommitFiberUnmount)try{on.onCommitFiberUnmount(an,t)}catch(e){}switch(t.tag){case 5:Js||$s(t,n);case 6:var r=ul,a=dl;ul=null,fl(e,n,t),dl=a,null!==(ul=r)&&(dl?(e=ul,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(dl?(e=ul,t=t.stateNode,8===e.nodeType?la(e.parentNode,t):1===e.nodeType&&la(e,t),Yn(e)):la(ul,t.stateNode));break;case 4:r=ul,a=dl,ul=t.stateNode.containerInfo,dl=!0,fl(e,n,t),ul=r,dl=a;break;case 0:case 11:case 14:case 15:if(!Js&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&el(t,n,i),a=a.next}while(a!==r)}fl(e,n,t);break;case 1:if(!Js&&($s(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){Ec(t,n,e)}fl(e,n,t);break;case 21:fl(e,n,t);break;case 22:1&t.mode?(Js=(r=Js)||null!==t.memoizedState,fl(e,n,t),Js=r):fl(e,n,t);break;default:fl(e,n,t)}}function hl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Qs),n.forEach((function(n){var r=Sc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function ml(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var i=e,s=n,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,dl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===ul)throw Error(o(160));pl(i,s,a),ul=null,dl=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){Ec(a,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)bl(n,e),n=n.sibling}function bl(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(n,e),gl(e),4&r){try{tl(3,e,e.return),rl(3,e)}catch(n){Ec(e,e.return,n)}try{tl(5,e,e.return)}catch(n){Ec(e,e.return,n)}}break;case 1:ml(n,e),gl(e),512&r&&null!==t&&$s(t,t.return);break;case 5:if(ml(n,e),gl(e),512&r&&null!==t&&$s(t,t.return),32&e.flags){var a=e.stateNode;try{fe(a,"")}catch(n){Ec(e,e.return,n)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,s=null!==t?t.memoizedProps:i,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(a,i),ye(l,s);var u=ye(l,i);for(s=0;s<c.length;s+=2){var d=c[s],f=c[s+1];"style"===d?be(a,f):"dangerouslySetInnerHTML"===d?de(a,f):"children"===d?fe(a,f):y(a,d,f,u)}switch(l){case"input":_(a,i);break;case"textarea":oe(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var h=i.value;null!=h?te(a,!!i.multiple,h,!1):p!==!!i.multiple&&(null!=i.defaultValue?te(a,!!i.multiple,i.defaultValue,!0):te(a,!!i.multiple,i.multiple?[]:"",!1))}a[pa]=i}catch(n){Ec(e,e.return,n)}}break;case 6:if(ml(n,e),gl(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(n){Ec(e,e.return,n)}}break;case 3:if(ml(n,e),gl(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Yn(n.containerInfo)}catch(n){Ec(e,e.return,n)}break;case 4:default:ml(n,e),gl(e);break;case 13:ml(n,e),gl(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Zl=Qe())),4&r&&hl(e);break;case 22:if(d=null!==t&&null!==t.memoizedState,1&e.mode?(Js=(u=Js)||d,ml(n,e),Js=u):ml(n,e),gl(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!=(1&e.mode))for(_s=e,d=e.child;null!==d;){for(f=_s=d;null!==_s;){switch(h=(p=_s).child,p.tag){case 0:case 11:case 14:case 15:tl(4,p,p.return);break;case 1:$s(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,t=p.return;try{n=r,m.props=n.memoizedProps,m.state=n.memoizedState,m.componentWillUnmount()}catch(e){Ec(r,t,e)}}break;case 5:$s(p,p.return);break;case 22:if(null!==p.memoizedState){wl(f);continue}}null!==h?(h.return=p,_s=h):wl(f)}d=d.sibling}e:for(d=null,f=e;;){if(5===f.tag){if(null===d){d=f;try{a=f.stateNode,u?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=f.stateNode,s=null!=(c=f.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=me("display",s))}catch(n){Ec(e,e.return,n)}}}else if(6===f.tag){if(null===d)try{f.stateNode.nodeValue=u?"":f.memoizedProps}catch(n){Ec(e,e.return,n)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:ml(n,e),gl(e),4&r&&hl(e);case 21:}}function gl(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(il(t)){var r=t;break e}t=t.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(fe(a,""),r.flags&=-33),cl(e,sl(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;ll(e,sl(e),i);break;default:throw Error(o(161))}}catch(n){Ec(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vl(e,n,t){_s=e,yl(e,n,t)}function yl(e,n,t){for(var r=0!=(1&e.mode);null!==_s;){var a=_s,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Ks;if(!i){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Js;s=Ks;var c=Js;if(Ks=i,(Js=l)&&!c)for(_s=a;null!==_s;)l=(i=_s).child,22===i.tag&&null!==i.memoizedState?xl(a):null!==l?(l.return=i,_s=l):xl(a);for(;null!==o;)_s=o,yl(o,n,t),o=o.sibling;_s=a,Ks=s,Js=c}Al(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,_s=o):Al(e)}}function Al(e){for(;null!==_s;){var n=_s;if(0!=(8772&n.flags)){var t=n.alternate;try{if(0!=(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Js||rl(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Js)if(null===t)r.componentDidMount();else{var a=n.elementType===n.type?t.memoizedProps:go(n.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;null!==i&&Xo(n,i,r);break;case 3:var s=n.updateQueue;if(null!==s){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Xo(n,s,t)}break;case 5:var l=n.stateNode;if(null===t&&4&n.flags){t=l;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var u=n.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var f=d.dehydrated;null!==f&&Yn(f)}}}break;default:throw Error(o(163))}Js||512&n.flags&&al(n)}catch(e){Ec(n,n.return,e)}}if(n===e){_s=null;break}if(null!==(t=n.sibling)){t.return=n.return,_s=t;break}_s=n.return}}function wl(e){for(;null!==_s;){var n=_s;if(n===e){_s=null;break}var t=n.sibling;if(null!==t){t.return=n.return,_s=t;break}_s=n.return}}function xl(e){for(;null!==_s;){var n=_s;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rl(4,n)}catch(e){Ec(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var a=n.return;try{r.componentDidMount()}catch(e){Ec(n,a,e)}}var o=n.return;try{al(n)}catch(e){Ec(n,o,e)}break;case 5:var i=n.return;try{al(n)}catch(e){Ec(n,i,e)}}}catch(e){Ec(n,n.return,e)}if(n===e){_s=null;break}var s=n.sibling;if(null!==s){s.return=n.return,_s=s;break}_s=n.return}}var Cl,El=Math.ceil,Pl=A.ReactCurrentDispatcher,kl=A.ReactCurrentOwner,Tl=A.ReactCurrentBatchConfig,Sl=0,zl=null,Nl=null,Ll=0,Bl=0,Ol=Ea(0),Hl=0,Ul=null,Rl=0,Fl=0,jl=0,Xl=null,Ml=null,Zl=0,Gl=1/0,Yl=null,Il=!1,Wl=null,Dl=null,Vl=!1,ql=null,Kl=0,Jl=0,Ql=null,_l=-1,$l=0;function ec(){return 0!=(6&Sl)?Qe():-1!==_l?_l:_l=Qe()}function nc(e){return 0==(1&e.mode)?1:0!=(2&Sl)&&0!==Ll?Ll&-Ll:null!==bo.transition?(0===$l&&($l=bn()),$l):0!==(e=An)?e:e=void 0===(e=window.event)?16:Qn(e.type)}function tc(e,n,t,r){if(50<Jl)throw Jl=0,Ql=null,Error(o(185));vn(e,t,r),0!=(2&Sl)&&e===zl||(e===zl&&(0==(2&Sl)&&(Fl|=t),4===Hl&&sc(e,Ll)),rc(e,r),1===t&&0===Sl&&0==(1&n.mode)&&(Gl=Qe()+500,Xa&&Ga()))}function rc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-sn(o),s=1<<i,l=a[i];-1===l?0!=(s&t)&&0==(s&r)||(a[i]=hn(s,n)):l<=n&&(e.expiredLanes|=s),o&=~s}}(e,n);var r=pn(e,e===zl?Ll:0);if(0===r)null!==t&&qe(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&qe(t),1===n)0===e.tag?function(e){Xa=!0,Za(e)}(lc.bind(null,e)):Za(lc.bind(null,e)),ia((function(){0==(6&Sl)&&Ga()})),t=null;else{switch(wn(r)){case 1:t=$e;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=zc(t,ac.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function ac(e,n){if(_l=-1,$l=0,0!=(6&Sl))throw Error(o(327));var t=e.callbackNode;if(xc()&&e.callbackNode!==t)return null;var r=pn(e,e===zl?Ll:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||n)n=bc(e,r);else{n=r;var a=Sl;Sl|=2;var i=hc();for(zl===e&&Ll===n||(Yl=null,Gl=Qe()+500,fc(e,n));;)try{vc();break}catch(n){pc(e,n)}xo(),Pl.current=i,Sl=a,null!==Nl?n=0:(zl=null,Ll=0,n=Hl)}if(0!==n){if(2===n&&0!==(a=mn(e))&&(r=a,n=oc(e,a)),1===n)throw t=Ul,fc(e,0),sc(e,r),rc(e,Qe()),t;if(6===n)sc(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],o=a.getSnapshot;a=a.value;try{if(!sr(o(),a))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(a)&&(2===(n=bc(e,r))&&0!==(i=mn(e))&&(r=i,n=oc(e,i)),1===n))throw t=Ul,fc(e,0),sc(e,r),rc(e,Qe()),t;switch(e.finishedWork=a,e.finishedLanes=r,n){case 0:case 1:throw Error(o(345));case 2:case 5:wc(e,Ml,Yl);break;case 3:if(sc(e,r),(130023424&r)===r&&10<(n=Zl+500-Qe())){if(0!==pn(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(wc.bind(null,e,Ml,Yl),n);break}wc(e,Ml,Yl);break;case 4:if(sc(e,r),(4194240&r)===r)break;for(n=e.eventTimes,a=-1;0<r;){var s=31-sn(r);i=1<<s,(s=n[s])>a&&(a=s),r&=~i}if(r=a,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*El(r/1960))-r)){e.timeoutHandle=ra(wc.bind(null,e,Ml,Yl),r);break}wc(e,Ml,Yl);break;default:throw Error(o(329))}}}return rc(e,Qe()),e.callbackNode===t?ac.bind(null,e):null}function oc(e,n){var t=Xl;return e.current.memoizedState.isDehydrated&&(fc(e,n).flags|=256),2!==(e=bc(e,n))&&(n=Ml,Ml=t,null!==n&&ic(n)),e}function ic(e){null===Ml?Ml=e:Ml.push.apply(Ml,e)}function sc(e,n){for(n&=~jl,n&=~Fl,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-sn(n),r=1<<t;e[t]=-1,n&=~r}}function lc(e){if(0!=(6&Sl))throw Error(o(327));xc();var n=pn(e,0);if(0==(1&n))return rc(e,Qe()),null;var t=bc(e,n);if(0!==e.tag&&2===t){var r=mn(e);0!==r&&(n=r,t=oc(e,r))}if(1===t)throw t=Ul,fc(e,0),sc(e,n),rc(e,Qe()),t;if(6===t)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,wc(e,Ml,Yl),rc(e,Qe()),null}function cc(e,n){var t=Sl;Sl|=1;try{return e(n)}finally{0===(Sl=t)&&(Gl=Qe()+500,Xa&&Ga())}}function uc(e){null!==ql&&0===ql.tag&&0==(6&Sl)&&xc();var n=Sl;Sl|=1;var t=Tl.transition,r=An;try{if(Tl.transition=null,An=1,e)return e()}finally{An=r,Tl.transition=t,0==(6&(Sl=n))&&Ga()}}function dc(){Bl=Ol.current,Pa(Ol)}function fc(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,aa(t)),null!==Nl)for(t=Nl.return;null!==t;){var r=t;switch(no(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Oa();break;case 3:oi(),Pa(za),Pa(Sa),di();break;case 5:si(r);break;case 4:oi();break;case 13:case 19:Pa(li);break;case 10:Co(r.type._context);break;case 22:case 23:dc()}t=t.return}if(zl=e,Nl=e=Oc(e.current,null),Ll=Bl=n,Hl=0,Ul=null,jl=Fl=Rl=0,Ml=Xl=null,null!==To){for(n=0;n<To.length;n++)if(null!==(r=(t=To[n]).interleaved)){t.interleaved=null;var a=r.next,o=t.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}t.pending=r}To=null}return e}function pc(e,n){for(;;){var t=Nl;try{if(xo(),fi.current=is,vi){for(var r=mi.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}vi=!1}if(hi=0,gi=bi=mi=null,yi=!1,Ai=0,kl.current=null,null===t||null===t.return){Hl=1,Ul=n,Nl=null;break}e:{var i=e,s=t.return,l=t,c=n;if(n=Ll,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=l,f=d.tag;if(0==(1&d.mode)&&(0===f||11===f||15===f)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var h=gs(s);if(null!==h){h.flags&=-257,vs(h,s,l,0,n),1&h.mode&&bs(i,u,n),c=u;var m=(n=h).updateQueue;if(null===m){var b=new Set;b.add(c),n.updateQueue=b}else m.add(c);break e}if(0==(1&n)){bs(i,u,n),mc();break e}c=Error(o(426))}else if(ao&&1&l.mode){var g=gs(s);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),vs(g,s,l,0,n),mo(us(c,l));break e}}i=c=us(c,l),4!==Hl&&(Hl=2),null===Xl?Xl=[i]:Xl.push(i),i=s;do{switch(i.tag){case 3:i.flags|=65536,n&=-n,i.lanes|=n,Fo(i,hs(0,c,n));break e;case 1:l=c;var v=i.type,y=i.stateNode;if(0==(128&i.flags)&&("function"==typeof v.getDerivedStateFromError||null!==y&&"function"==typeof y.componentDidCatch&&(null===Dl||!Dl.has(y)))){i.flags|=65536,n&=-n,i.lanes|=n,Fo(i,ms(i,l,n));break e}}i=i.return}while(null!==i)}Ac(t)}catch(e){n=e,Nl===t&&null!==t&&(Nl=t=t.return);continue}break}}function hc(){var e=Pl.current;return Pl.current=is,null===e?is:e}function mc(){0!==Hl&&3!==Hl&&2!==Hl||(Hl=4),null===zl||0==(268435455&Rl)&&0==(268435455&Fl)||sc(zl,Ll)}function bc(e,n){var t=Sl;Sl|=2;var r=hc();for(zl===e&&Ll===n||(Yl=null,fc(e,n));;)try{gc();break}catch(n){pc(e,n)}if(xo(),Sl=t,Pl.current=r,null!==Nl)throw Error(o(261));return zl=null,Ll=0,Hl}function gc(){for(;null!==Nl;)yc(Nl)}function vc(){for(;null!==Nl&&!Ke();)yc(Nl)}function yc(e){var n=Cl(e.alternate,e,Bl);e.memoizedProps=e.pendingProps,null===n?Ac(e):Nl=n,kl.current=null}function Ac(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(32768&n.flags)){if(null!==(t=Vs(t,n,Bl)))return void(Nl=t)}else{if(null!==(t=qs(t,n)))return t.flags&=32767,void(Nl=t);if(null===e)return Hl=6,void(Nl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Nl=n);Nl=n=e}while(null!==n);0===Hl&&(Hl=5)}function wc(e,n,t){var r=An,a=Tl.transition;try{Tl.transition=null,An=1,function(e,n,t,r){do{xc()}while(null!==ql);if(0!=(6&Sl))throw Error(o(327));t=e.finishedWork;var a=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var a=31-sn(t),o=1<<a;n[a]=0,r[a]=-1,e[a]=-1,t&=~o}}(e,i),e===zl&&(Nl=zl=null,Ll=0),0==(2064&t.subtreeFlags)&&0==(2064&t.flags)||Vl||(Vl=!0,zc(nn,(function(){return xc(),null}))),i=0!=(15990&t.flags),0!=(15990&t.subtreeFlags)||i){i=Tl.transition,Tl.transition=null;var s=An;An=1;var l=Sl;Sl|=4,kl.current=null,function(e,n){if(ea=Wn,pr(e=fr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{t.nodeType,i.nodeType}catch(e){t=null;break e}var s=0,l=-1,c=-1,u=0,d=0,f=e,p=null;n:for(;;){for(var h;f!==t||0!==a&&3!==f.nodeType||(l=s+a),f!==i||0!==r&&3!==f.nodeType||(c=s+r),3===f.nodeType&&(s+=f.nodeValue.length),null!==(h=f.firstChild);)p=f,f=h;for(;;){if(f===e)break n;if(p===t&&++u===a&&(l=s),p===i&&++d===r&&(c=s),null!==(h=f.nextSibling))break;p=(f=p).parentNode}f=h}t=-1===l||-1===c?null:{start:l,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(na={focusedElem:e,selectionRange:t},Wn=!1,_s=n;null!==_s;)if(e=(n=_s).child,0!=(1028&n.subtreeFlags)&&null!==e)e.return=n,_s=e;else for(;null!==_s;){n=_s;try{var m=n.alternate;if(0!=(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var b=m.memoizedProps,g=m.memoizedState,v=n.stateNode,y=v.getSnapshotBeforeUpdate(n.elementType===n.type?b:go(n.type,b),g);v.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var A=n.stateNode.containerInfo;1===A.nodeType?A.textContent="":9===A.nodeType&&A.documentElement&&A.removeChild(A.documentElement);break;default:throw Error(o(163))}}catch(e){Ec(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,_s=e;break}_s=n.return}m=nl,nl=!1}(e,t),bl(t,e),hr(na),Wn=!!ea,na=ea=null,e.current=t,vl(t,e,a),Je(),Sl=l,An=s,Tl.transition=i}else e.current=t;if(Vl&&(Vl=!1,ql=e,Kl=a),0===(i=e.pendingLanes)&&(Dl=null),function(e){if(on&&"function"==typeof on.onCommitFiberRoot)try{on.onCommitFiberRoot(an,e,void 0,128==(128&e.current.flags))}catch(e){}}(t.stateNode),rc(e,Qe()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((a=n[t]).value,{componentStack:a.stack,digest:a.digest});if(Il)throw Il=!1,e=Wl,Wl=null,e;0!=(1&Kl)&&0!==e.tag&&xc(),0!=(1&(i=e.pendingLanes))?e===Ql?Jl++:(Jl=0,Ql=e):Jl=0,Ga()}(e,n,t,r)}finally{Tl.transition=a,An=r}return null}function xc(){if(null!==ql){var e=wn(Kl),n=Tl.transition,t=An;try{if(Tl.transition=null,An=16>e?16:e,null===ql)var r=!1;else{if(e=ql,ql=null,Kl=0,0!=(6&Sl))throw Error(o(331));var a=Sl;for(Sl|=4,_s=e.current;null!==_s;){var i=_s,s=i.child;if(0!=(16&_s.flags)){var l=i.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(_s=u;null!==_s;){var d=_s;switch(d.tag){case 0:case 11:case 15:tl(8,d,i)}var f=d.child;if(null!==f)f.return=d,_s=f;else for(;null!==_s;){var p=(d=_s).sibling,h=d.return;if(ol(d),d===u){_s=null;break}if(null!==p){p.return=h,_s=p;break}_s=h}}}var m=i.alternate;if(null!==m){var b=m.child;if(null!==b){m.child=null;do{var g=b.sibling;b.sibling=null,b=g}while(null!==b)}}_s=i}}if(0!=(2064&i.subtreeFlags)&&null!==s)s.return=i,_s=s;else e:for(;null!==_s;){if(0!=(2048&(i=_s).flags))switch(i.tag){case 0:case 11:case 15:tl(9,i,i.return)}var v=i.sibling;if(null!==v){v.return=i.return,_s=v;break e}_s=i.return}}var y=e.current;for(_s=y;null!==_s;){var A=(s=_s).child;if(0!=(2064&s.subtreeFlags)&&null!==A)A.return=s,_s=A;else e:for(s=y;null!==_s;){if(0!=(2048&(l=_s).flags))try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(e){Ec(l,l.return,e)}if(l===s){_s=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,_s=w;break e}_s=l.return}}if(Sl=a,Ga(),on&&"function"==typeof on.onPostCommitFiberRoot)try{on.onPostCommitFiberRoot(an,e)}catch(e){}r=!0}return r}finally{An=t,Tl.transition=n}}return!1}function Cc(e,n,t){e=Uo(e,n=hs(0,n=us(t,n),1),1),n=ec(),null!==e&&(vn(e,1,n),rc(e,n))}function Ec(e,n,t){if(3===e.tag)Cc(e,e,t);else for(;null!==n;){if(3===n.tag){Cc(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Dl||!Dl.has(r))){n=Uo(n,e=ms(n,e=us(t,e),1),1),e=ec(),null!==n&&(vn(n,1,e),rc(n,e));break}}n=n.return}}function Pc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ec(),e.pingedLanes|=e.suspendedLanes&t,zl===e&&(Ll&t)===t&&(4===Hl||3===Hl&&(130023424&Ll)===Ll&&500>Qe()-Zl?fc(e,0):jl|=t),rc(e,n)}function kc(e,n){0===n&&(0==(1&e.mode)?n=1:(n=dn,0==(130023424&(dn<<=1))&&(dn=4194304)));var t=ec();null!==(e=No(e,n))&&(vn(e,n,t),rc(e,t))}function Tc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),kc(e,t)}function Sc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(n),kc(e,t)}function zc(e,n){return Ve(e,n)}function Nc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Lc(e,n,t,r){return new Nc(e,n,t,r)}function Bc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Oc(e,n){var t=e.alternate;return null===t?((t=Lc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Hc(e,n,t,r,a,i){var s=2;if(r=e,"function"==typeof e)Bc(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case C:return Uc(t.children,a,i,n);case E:s=8,a|=8;break;case P:return(e=Lc(12,t,n,2|a)).elementType=P,e.lanes=i,e;case z:return(e=Lc(13,t,n,a)).elementType=z,e.lanes=i,e;case N:return(e=Lc(19,t,n,a)).elementType=N,e.lanes=i,e;case O:return Rc(t,a,i,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:s=10;break e;case T:s=9;break e;case S:s=11;break e;case L:s=14;break e;case B:s=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=Lc(s,t,n,a)).elementType=e,n.type=r,n.lanes=i,n}function Uc(e,n,t,r){return(e=Lc(7,e,r,n)).lanes=t,e}function Rc(e,n,t,r){return(e=Lc(22,e,r,n)).elementType=O,e.lanes=t,e.stateNode={isHidden:!1},e}function Fc(e,n,t){return(e=Lc(6,e,null,n)).lanes=t,e}function jc(e,n,t){return(n=Lc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Xc(e,n,t,r,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gn(0),this.expirationTimes=gn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gn(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Mc(e,n,t,r,a,o,i,s,l){return e=new Xc(e,n,t,s,l),1===n?(n=1,!0===o&&(n|=8)):n=0,o=Lc(3,null,null,n),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Bo(o),e}function Zc(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Gc(e){if(!e)return Ta;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Ba(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(o(171))}if(1===e.tag){var t=e.type;if(Ba(t))return Ua(e,t,n)}return n}function Yc(e,n,t,r,a,o,i,s,l){return(e=Mc(t,r,!0,e,0,o,0,s,l)).context=Gc(null),t=e.current,(o=Ho(r=ec(),a=nc(t))).callback=null!=n?n:null,Uo(t,o,a),e.current.lanes=a,vn(e,a,r),rc(e,r),e}function Ic(e,n,t,r){var a=n.current,o=ec(),i=nc(a);return t=Gc(t),null===n.context?n.context=t:n.pendingContext=t,(n=Ho(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Uo(a,n,i))&&(tc(e,a,i,o),Ro(e,a,i)),i}function Wc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Dc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Vc(e,n){Dc(e,n),(e=e.alternate)&&Dc(e,n)}Cl=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||za.current)As=!0;else{if(0==(e.lanes&t)&&0==(128&n.flags))return As=!1,function(e,n,t){switch(n.tag){case 3:Ns(n),ho();break;case 5:ii(n);break;case 1:Ba(n.type)&&Ra(n);break;case 4:ai(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,a=n.memoizedProps.value;ka(vo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(ka(li,1&li.current),n.flags|=128,null):0!=(t&n.child.childLanes)?Fs(e,n,t):(ka(li,1&li.current),null!==(e=Is(e,n,t))?e.sibling:null);ka(li,1&li.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(128&e.flags)){if(r)return Gs(e,n,t);n.flags|=128}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(li,li.current),r)break;return null;case 22:case 23:return n.lanes=0,Ps(e,n,t)}return Is(e,n,t)}(e,n,t);As=0!=(131072&e.flags)}else As=!1,ao&&0!=(1048576&n.flags)&&$a(n,Da,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Ys(e,n),e=n.pendingProps;var a=La(n,Sa.current);Po(n,t),a=Ei(null,n,r,e,a,t);var i=Pi();return n.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Ba(r)?(i=!0,Ra(n)):i=!1,n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Bo(n),a.updater=Go,n.stateNode=a,a._reactInternals=n,Do(n,r,e,t),n=zs(null,n,r,!0,i,t)):(n.tag=0,ao&&i&&eo(n),ws(null,n,a,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Ys(e,n),e=n.pendingProps,r=(a=r._init)(r._payload),n.type=r,a=n.tag=function(e){if("function"==typeof e)return Bc(e)?1:0;if(null!=e){if((e=e.$$typeof)===S)return 11;if(e===L)return 14}return 2}(r),e=go(r,e),a){case 0:n=Ts(null,n,r,e,t);break e;case 1:n=Ss(null,n,r,e,t);break e;case 11:n=xs(null,n,r,e,t);break e;case 14:n=Cs(null,n,r,go(r.type,e),t);break e}throw Error(o(306,r,""))}return n;case 0:return r=n.type,a=n.pendingProps,Ts(e,n,r,a=n.elementType===r?a:go(r,a),t);case 1:return r=n.type,a=n.pendingProps,Ss(e,n,r,a=n.elementType===r?a:go(r,a),t);case 3:e:{if(Ns(n),null===e)throw Error(o(387));r=n.pendingProps,a=(i=n.memoizedState).element,Oo(e,n),jo(n,r,null,t);var s=n.memoizedState;if(r=s.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},n.updateQueue.baseState=i,n.memoizedState=i,256&n.flags){n=Ls(e,n,r,t,a=us(Error(o(423)),n));break e}if(r!==a){n=Ls(e,n,r,t,a=us(Error(o(424)),n));break e}for(ro=ca(n.stateNode.containerInfo.firstChild),to=n,ao=!0,oo=null,t=_o(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(ho(),r===a){n=Is(e,n,t);break e}ws(e,n,r,t)}n=n.child}return n;case 5:return ii(n),null===e&&co(n),r=n.type,a=n.pendingProps,i=null!==e?e.memoizedProps:null,s=a.children,ta(r,a)?s=null:null!==i&&ta(r,i)&&(n.flags|=32),ks(e,n),ws(e,n,s,t),n.child;case 6:return null===e&&co(n),null;case 13:return Fs(e,n,t);case 4:return ai(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Qo(n,null,r,t):ws(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,xs(e,n,r,a=n.elementType===r?a:go(r,a),t);case 7:return ws(e,n,n.pendingProps,t),n.child;case 8:case 12:return ws(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,a=n.pendingProps,i=n.memoizedProps,s=a.value,ka(vo,r._currentValue),r._currentValue=s,null!==i)if(sr(i.value,s)){if(i.children===a.children&&!za.current){n=Is(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var l=i.dependencies;if(null!==l){s=i.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=Ho(-1,t&-t)).tag=2;var u=i.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}i.lanes|=t,null!==(c=i.alternate)&&(c.lanes|=t),Eo(i.return,t,n),l.lanes|=t;break}c=c.next}}else if(10===i.tag)s=i.type===n.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(o(341));s.lanes|=t,null!==(l=s.alternate)&&(l.lanes|=t),Eo(s,t,n),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===n){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}ws(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=n.pendingProps.children,Po(n,t),r=r(a=ko(a)),n.flags|=1,ws(e,n,r,t),n.child;case 14:return a=go(r=n.type,n.pendingProps),Cs(e,n,r,a=go(r.type,a),t);case 15:return Es(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:go(r,a),Ys(e,n),n.tag=1,Ba(r)?(e=!0,Ra(n)):e=!1,Po(n,t),Io(n,r,a),Do(n,r,a,t),zs(null,n,r,!0,e,t);case 19:return Gs(e,n,t);case 22:return Ps(e,n,t)}throw Error(o(156,n.tag))};var qc="function"==typeof reportError?reportError:function(e){console.error(e)};function Kc(e){this._internalRoot=e}function Jc(e){this._internalRoot=e}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function _c(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $c(){}function eu(e,n,t,r,a){var o=t._reactRootContainer;if(o){var i=o;if("function"==typeof a){var s=a;a=function(){var e=Wc(i);s.call(e)}}Ic(n,i,e,a)}else i=function(e,n,t,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=Wc(i);o.call(e)}}var i=Yc(n,r,e,0,null,!1,0,"",$c);return e._reactRootContainer=i,e[ha]=i.current,Gr(8===e.nodeType?e.parentNode:e),uc(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var s=r;r=function(){var e=Wc(l);s.call(e)}}var l=Mc(e,0,!1,null,0,!1,0,"",$c);return e._reactRootContainer=l,e[ha]=l.current,Gr(8===e.nodeType?e.parentNode:e),uc((function(){Ic(n,l,t,r)})),l}(t,n,e,a,r);return Wc(i)}Jc.prototype.render=Kc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(o(409));Ic(e,n,null,null)},Jc.prototype.unmount=Kc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;uc((function(){Ic(null,e,null,null)})),n[ha]=null}},Jc.prototype.unstable_scheduleHydration=function(e){if(e){var n=Pn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Hn.length&&0!==n&&n<Hn[t].priority;t++);Hn.splice(t,0,e),0===t&&jn(e)}},xn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=fn(n.pendingLanes);0!==t&&(yn(n,1|t),rc(n,Qe()),0==(6&Sl)&&(Gl=Qe()+500,Ga()))}break;case 13:uc((function(){var n=No(e,1);if(null!==n){var t=ec();tc(n,e,1,t)}})),Vc(e,1)}},Cn=function(e){if(13===e.tag){var n=No(e,134217728);null!==n&&tc(n,e,134217728,ec()),Vc(e,134217728)}},En=function(e){if(13===e.tag){var n=nc(e),t=No(e,n);null!==t&&tc(t,e,n,ec()),Vc(e,n)}},Pn=function(){return An},kn=function(e,n){var t=An;try{return An=e,n()}finally{An=t}},xe=function(e,n,t){switch(n){case"input":if(_(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=wa(r);if(!a)throw Error(o(90));V(r),_(r,a)}}}break;case"textarea":oe(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Se=cc,ze=uc;var nu={usingClientEntryPoint:!1,Events:[ya,Aa,wa,ke,Te,cc]},tu={findFiberByHostInstance:va,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ru={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:A.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{an=au.inject(ru),on=au}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(n))throw Error(o(200));return Zc(e,n,null,t)},n.createRoot=function(e,n){if(!Qc(e))throw Error(o(299));var t=!1,r="",a=qc;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(a=n.onRecoverableError)),n=Mc(e,1,!1,null,0,t,0,r,a),e[ha]=n.current,Gr(8===e.nodeType?e.parentNode:e),new Kc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=We(n))?null:e.stateNode},n.flushSync=function(e){return uc(e)},n.hydrate=function(e,n,t){if(!_c(n))throw Error(o(200));return eu(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Qc(e))throw Error(o(405));var r=null!=t&&t.hydratedSources||null,a=!1,i="",s=qc;if(null!=t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),n=Yc(n,null,e,1,null!=t?t:null,a,0,i,s),e[ha]=n.current,Gr(e),r)for(e=0;e<r.length;e++)a=(a=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a);return new Jc(n)},n.render=function(e,n,t){if(!_c(n))throw Error(o(200));return eu(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!_c(e))throw Error(o(40));return!!e._reactRootContainer&&(uc((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},n.unstable_batchedUpdates=cc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!_c(t))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return eu(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},745:(e,n,t)=>{"use strict";var r=t(3935);n.s=r.createRoot,r.hydrateRoot},3935:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(4448)},2408:(e,n)=>{"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,b={};function g(e,n,t){this.props=e,this.context=n,this.refs=b,this.updater=t||h}function v(){}function y(e,n,t){this.props=e,this.context=n,this.refs=b,this.updater=t||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var A=y.prototype=new v;A.constructor=y,m(A,g.prototype),A.isPureReactComponent=!0;var w=Array.isArray,x=Object.prototype.hasOwnProperty,C={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,r){var a,o={},i=null,s=null;if(null!=n)for(a in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(i=""+n.key),n)x.call(n,a)&&!E.hasOwnProperty(a)&&(o[a]=n[a]);var l=arguments.length-2;if(1===l)o.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];o.children=c}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===o[a]&&(o[a]=l[a]);return{$$typeof:t,type:e,key:i,ref:s,props:o,_owner:C.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var T=/\/+/g;function S(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function z(e,n,a,o,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case r:l=!0}}if(l)return i=i(l=e),e=""===o?"."+S(l,0):o,w(i)?(a="",null!=e&&(a=e.replace(T,"$&/")+"/"),z(i,n,a,"",(function(e){return e}))):null!=i&&(k(i)&&(i=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(T,"$&/")+"/")+e)),n.push(i)),1;if(l=0,o=""===o?".":o+":",w(e))for(var c=0;c<e.length;c++){var u=o+S(s=e[c],c);l+=z(s,n,a,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=z(s=s.value,n,a,u=o+S(s,c++),i);else if("object"===s)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function N(e,n,t){if(null==e)return e;var r=[],a=0;return z(e,r,"","",(function(e){return n.call(t,e,a++)})),r}function L(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var B={current:null},O={transition:null},H={ReactCurrentDispatcher:B,ReactCurrentBatchConfig:O,ReactCurrentOwner:C};n.Children={map:N,forEach:function(e,n,t){N(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return N(e,(function(){n++})),n},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=a,n.Profiler=i,n.PureComponent=y,n.StrictMode=o,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=H,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),o=e.key,i=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,s=C.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in n)x.call(n,c)&&!E.hasOwnProperty(c)&&(a[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];a.children=l}return{$$typeof:t,type:e.type,key:o,ref:i,props:a,_owner:s}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=P,n.createFactory=function(e){var n=P.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=k,n.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:L}},n.memo=function(e,n){return{$$typeof:d,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=O.transition;O.transition={};try{e()}finally{O.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return B.current.useCallback(e,n)},n.useContext=function(e){return B.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return B.current.useDeferredValue(e)},n.useEffect=function(e,n){return B.current.useEffect(e,n)},n.useId=function(){return B.current.useId()},n.useImperativeHandle=function(e,n,t){return B.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return B.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return B.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return B.current.useMemo(e,n)},n.useReducer=function(e,n,t){return B.current.useReducer(e,n,t)},n.useRef=function(e){return B.current.useRef(e)},n.useState=function(e){return B.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return B.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return B.current.useTransition()},n.version="18.2.0"},7294:(e,n,t)=>{"use strict";e.exports=t(2408)},53:(e,n)=>{"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<o(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var s=2*(r+1)-1,l=e[s],c=s+1,u=e[c];if(0>o(l,t))c<a&&0>o(u,l)?(e[r]=u,e[c]=t,r=c):(e[r]=l,e[s]=t,r=s);else{if(!(c<a&&0>o(u,t)))break e;e[r]=u,e[c]=t,r=c}}}return n}function o(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var s=Date,l=s.now();n.unstable_now=function(){return s.now()-l}}var c=[],u=[],d=1,f=null,p=3,h=!1,m=!1,b=!1,g="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function A(e){for(var n=r(u);null!==n;){if(null===n.callback)a(u);else{if(!(n.startTime<=e))break;a(u),n.sortIndex=n.expirationTime,t(c,n)}n=r(u)}}function w(e){if(b=!1,A(e),!m)if(null!==r(c))m=!0,O(x);else{var n=r(u);null!==n&&H(w,n.startTime-e)}}function x(e,t){m=!1,b&&(b=!1,v(k),k=-1),h=!0;var o=p;try{for(A(t),f=r(c);null!==f&&(!(f.expirationTime>t)||e&&!z());){var i=f.callback;if("function"==typeof i){f.callback=null,p=f.priorityLevel;var s=i(f.expirationTime<=t);t=n.unstable_now(),"function"==typeof s?f.callback=s:f===r(c)&&a(c),A(t)}else a(c);f=r(c)}if(null!==f)var l=!0;else{var d=r(u);null!==d&&H(w,d.startTime-t),l=!1}return l}finally{f=null,p=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,E=!1,P=null,k=-1,T=5,S=-1;function z(){return!(n.unstable_now()-S<T)}function N(){if(null!==P){var e=n.unstable_now();S=e;var t=!0;try{t=P(!0,e)}finally{t?C():(E=!1,P=null)}}else E=!1}if("function"==typeof y)C=function(){y(N)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,B=L.port2;L.port1.onmessage=N,C=function(){B.postMessage(null)}}else C=function(){g(N,0)};function O(e){P=e,E||(E=!0,C())}function H(e,t){k=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){m||h||(m=!0,O(x))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,a,o){var i=n.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>i?(e.sortIndex=o,t(u,e),null===r(c)&&e===r(u)&&(b?(v(k),k=-1):b=!0,H(w,o-i))):(e.sortIndex=s,t(c,e),m||h||(m=!0,O(x))),e},n.unstable_shouldYield=z,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},3840:(e,n,t)=>{"use strict";e.exports=t(53)},3379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var l=e[s],c=r.base?l[0]+r.base:l[0],u=o[c]||0,d="".concat(c," ").concat(u);o[c]=u+1;var f=t(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==f)n[f].references++,n[f].updater(p);else{var h=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var l=r(e,a),c=0;c<o.length;c++){var u=t(o[c]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}o=l}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},9216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},3565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},7795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},4589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},6830:(e,n,t)=>{"use strict";e.exports=t.p+"images/world-map.bfbb8e5e5b279a3e1067.svg"},1218:e=>{e.exports={bytes:"",lenIn:171116,lenOut:339508}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";var e=t(7294),n=t(745);function r(e){return new Promise((n=>{setTimeout((()=>n()),e)}))}const a=Date.now,o=JSON.parse,i=JSON.stringify;function s(e,n,t){if(0===n.length)return n.push(e),0;let r=0,a=n.length-1;for(;r!==a;){const o=(r+a)/2|0;t(e,n[o])<0?a=Math.max(r,o-1):r=Math.min(a,o+1)}const o=t(e,n[r])<=0?r:r+1;return n.splice(o,0,e),o}function l(e,n,t){if(0===n.length)return-1;let r=0,a=n.length-1;for(;r!==a;){const o=(r+a)/2|0,i=n[o];if(e===i)return o;const s=t(e,i);if(s<0)a=Math.max(r,o-1);else{if(!(s>0))return n.indexOf(e,r);r=Math.min(a,o+1)}}return e===n[r]?r:-1}class c{constructor(e){this.map=Array(),this.list=Array(),this.changeRef=0,this.focus={start:0,end:0},this.compare=e}setComparator(e){this.compare=e,this.list=this.map.filter((e=>null!=e)),this.list.sort(e),this.changeRef+=1}add(e){this.map.length<=e.id&&(this.map=this.map.concat(Array(Math.max(10,1+e.id-this.map.length)))),this.remove(e.id),this.map[e.id]=e,s(e,this.list,this.compare)<this.focus.end&&(this.changeRef+=1)}remove(e){const n=this.map[e];if(!n)return;const t=l(n,this.list,this.compare);this.list.splice(t,1),this.map[e]=null,t<this.focus.end&&(this.changeRef+=1)}get(e){return this.map[e]}sorted(){return this.list}mut(e,n){const t=this.map[e];if(!t)return;const r=l(t,this.list,this.compare);n(t),r>=this.focus.start&&r<this.focus.end&&(this.changeRef+=1)}mutAndSort(e,n){const t=this.map[e];if(!t)return;const r=l(t,this.list,this.compare);n(t),this.list.splice(r,1);const a=s(t,this.list,this.compare);a!==r&&(r<this.focus.start&&a<this.focus.start||r>=this.focus.end&&a>=this.focus.end||(this.changeRef+=1))}mutAndMaybeSort(e,n,t){t?this.mutAndSort(e,n):this.mut(e,n)}mutEach(e){this.list.forEach(e)}mutEachAndSort(e){this.list.forEach(e),this.list.sort(this.compare),this.changeRef+=1}clear(){this.map=[],this.list=[],this.changeRef+=1}setFocus(e,n){this.focus={start:e,end:n}}get ref(){return this.changeRef}hasChangedSince(e){return this.changeRef>e}}var u,d=t(3379),f=t.n(d),p=t(7795),h=t.n(p),m=t(569),b=t.n(m),g=t(3565),v=t.n(g),y=t(9216),A=t.n(y),w=t(4589),x=t.n(w),C=t(8644),E={};function P(n){const{chains:t,subscribed:r,connection:a}=n,[o,i]=e.useState(""),[s,l]=e.useState(u.NumberOfNodes);function c(){window.location.hash=r?`#list/${r}`:"#list"}function d(e){return()=>{a.then((n=>n.subscribe(e.genesisHash))),c()}}const f=o.toLocaleLowerCase(),p=t.filter((e=>e.label.toLocaleLowerCase().includes(f)));s===u.Alphabetical&&p.sort(((e,n)=>e.label.localeCompare(n.label)));const h=p.length>0?p.map((n=>e.createElement(T,{key:n.genesisHash,chain:n,filterText:o,isSubscribed:r===n.genesisHash,onClick:d(n)}))):"No chains found";return e.createElement("div",{className:"AllChains-overlay",onClick:c},e.createElement("div",{className:"AllChains-content",onClick:function(e){e.stopPropagation()}},e.createElement("div",{className:"AllChains-controls"},e.createElement("input",{type:"text",placeholder:"Filter by chain name..",value:o,onChange:function(e){e.stopPropagation(),i(e.currentTarget.value)}}),e.createElement(k,{text:"#nodes",isActive:s===u.NumberOfNodes,onClick:function(){l(u.NumberOfNodes)}}),e.createElement(k,{text:"A-Z",isActive:s===u.Alphabetical,onClick:function(){l(u.Alphabetical)}})),e.createElement("div",{className:"AllChains-chains"},h)))}function k(n){const t=n.isActive?"AllChains-controls-sortby AllChains-controls-sortby-active":"AllChains-controls-sortby";return e.createElement("div",{className:t,onClick:n.onClick},n.text)}function T({chain:n,isSubscribed:t,onClick:r,filterText:a}){const{label:o,nodeCount:i}=n,s=t?"AllChains-chain AllChains-chain-selected":"AllChains-chain",l=a?function(n,t){const r=n.toLocaleLowerCase().indexOf(t);return r>-1?e.createElement(e.Fragment,null,n.slice(0,r),e.createElement("span",{className:"AllChains-chain-highlighted-text"},n.slice(r,r+t.length)),n.slice(r+t.length)):n}(o,a):o;return e.createElement("a",{key:o,className:s,onClick:r},l,e.createElement("span",{className:"AllChains-node-count",title:"Node Count"},i))}E.styleTagTransform=x(),E.setAttributes=v(),E.insert=b().bind(null,"head"),E.domAPI=h(),E.insertStyleElement=A(),f()(C.Z,E),C.Z&&C.Z.locals&&C.Z.locals,function(e){e[e.Alphabetical=0]="Alphabetical",e[e.NumberOfNodes=1]="NumberOfNodes"}(u||(u={}));var S=t(6339),z={};function N(){return{width:Math.max(document.documentElement.clientWidth,window.innerWidth||0),height:Math.max(document.documentElement.clientHeight,window.innerHeight||0)}}function L(e){const n=e.toString();let t="",r=n.length;for(;r>3;)t=","+n.substr(r-3,3)+t,r-=3;return t=n.substr(0,r)+t,t}function B(e,n){if(e.length<n)return e;const t=(n-2)/2|0;return e.substr(0,t)+".."+e.substr(-t,t)}function O(e){return e<1e4?`${e}ms`:(e/1e3|0)+"s"}function H(e){const n=(0|e).toString();switch(n.length){case 1:return e.toFixed(3)+"s";case 2:return e.toFixed(2)+"s";case 3:return e.toFixed(1)+"s";default:return n+"s"}}function U(){const{hash:e}=window.location;if("#"!==e[0])return{};const[n,t]=e.substr(1).split("/");return{tab:n,chain:decodeURIComponent(t)}}function R(e){const n=Object.assign(U(),e),{tab:t="",chain:r=""}=n;window.location.hash=`#${t}/${encodeURIComponent(r)}`}z.styleTagTransform=x(),z.setAttributes=v(),z.insert=b().bind(null,"head"),z.domAPI=h(),z.insertStyleElement=A(),f()(S.Z,z),S.Z&&S.Z.locals&&S.Z.locals;let F=null;const j="http://www.w3.org/2000/svg";function X(){return F||(F=document.createElementNS(j,"svg"),F.setAttribute("style","display: none;"),document.body.appendChild(F)),F}const M=new Map;let Z=0;class G extends e.Component{shouldComponentUpdate(e){return this.props.src!==e.src||this.props.className!==e.className}render(){const{className:n,onClick:t,src:r}=this.props,a=function(e){let n=M.get(e);return n||(n=`icon${Z}`,Z+=1,M.set(e,n),fetch(e).then((e=>{return t=this,r=void 0,o=function*(){const t=yield e.text(),r=document.createElement("div");r.innerHTML=t;const a=r.querySelector("svg"),o=document.createElementNS(j,"symbol"),i=a.getAttribute("viewBox");o.setAttribute("id",n),i&&o.setAttribute("viewBox",i);for(const e of Array.from(a.childNodes))o.appendChild(e);X().appendChild(o)},new((a=void 0)||(a=Promise))((function(e,n){function i(e){try{l(o.next(e))}catch(e){n(e)}}function s(e){try{l(o.throw(e))}catch(e){n(e)}}function l(n){var t;n.done?e(n.value):(t=n.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,s)}l((o=o.apply(t,r||[])).next())}));var t,r,a,o}))),n}(r);return e.createElement("svg",{className:`Icon ${n||""}`,onClick:t},e.createElement("use",{href:`#${a}`}))}}const Y=t.p+"images/mark-github.468c3582badebba006a1.svg",I=t.p+"images/kebab-horizontal.ad4243fe06f9f2c7aaae.svg";var W=t(691),D={};D.styleTagTransform=x(),D.setAttributes=v(),D.insert=b().bind(null,"head"),D.domAPI=h(),D.insertStyleElement=A(),f()(W.Z,D),W.Z&&W.Z.locals&&W.Z.locals;class V extends e.Component{constructor(){super(...arguments),this.lastRender=performance.now(),this.subscribedChainInView=!1}shouldComponentUpdate(e){return e.subscribedHash!==this.clicked&&(this.clicked=e.subscribedHash),this.props.subscribedHash!==e.subscribedHash||performance.now()-this.lastRender>1e3}render(){this.lastRender=performance.now(),this.subscribedChainInView=!1;const n=N().width,{chains:t,subscribedHash:r,subscribedData:a}=this.props,o=t.slice(0,n/160|0).map((e=>this.renderChain(e))),i=r?`#all-chains/${r}`:"#all-chains",s=a&&!this.subscribedChainInView?e.createElement("div",{className:"Chains-extra-subscribed-chain"},this.renderChain(a)):null;return e.createElement("div",{className:"Chains"},s,o,e.createElement("a",{className:"Chains-all-chains",href:i,title:"All Chains"},e.createElement(G,{src:I})),e.createElement("a",{className:"Chains-fork-me",href:"https://github.com/paritytech/substrate-telemetry",target:"_blank",title:"Fork Me!",rel:"noreferrer"},e.createElement(G,{src:Y})))}renderChain(n){const{label:t,genesisHash:r,nodeCount:a}=n;let o="Chains-chain";return r===this.props.subscribedHash&&(o+=" Chains-chain-selected",this.subscribedChainInView=!0),e.createElement("a",{key:r,className:o,onClick:this.subscribe.bind(this,r)},e.createElement("span",null,t),e.createElement("span",{className:"Chains-node-count",title:"Node Count"},a))}subscribe(e){return n=this,t=void 0,a=function*(){e!==this.clicked&&(this.clicked=e,(yield this.props.connection).subscribe(e))},new((r=void 0)||(r=Promise))((function(e,o){function i(e){try{l(a.next(e))}catch(e){o(e)}}function s(e){try{l(a.throw(e))}catch(e){o(e)}}function l(n){var t;n.done?e(n.value):(t=n.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,s)}l((a=a.apply(n,t||[])).next())}));var n,t,r,a}}var q=t(4609),K={};K.styleTagTransform=x(),K.setAttributes=v(),K.insert=b().bind(null,"head"),K.domAPI=h(),K.insertStyleElement=A(),f()(q.Z,K),q.Z&&q.Z.locals&&q.Z.locals;class J extends e.Component{constructor(e){super(e),this.setDisplay=e=>{this.setState({display:e})};let n="list";switch(U().tab){case"map":n="map";break;case"settings":n="settings"}this.state={display:n}}render(){const{appState:n}=this.props,{best:t,finalized:r,blockTimestamp:a,blockAverage:o}=n,{display:i}=this.state;return e.createElement("div",{className:"Chain"},e.createElement(ue,{best:t,finalized:r,blockAverage:o,blockTimestamp:a,currentTab:i,setDisplay:this.setDisplay}),e.createElement("div",{className:"Chain-content-container"},e.createElement("div",{className:"Chain-content"},this.renderContent())))}renderContent(){const{display:n}=this.state;if("settings"===n)return e.createElement(jn,{settings:this.props.settings});const{appState:t,appUpdate:r,pins:a,sortBy:o}=this.props;if("list"===n)return e.createElement(vn,{appState:t,appUpdate:r,pins:a,sortBy:o});if("map"===n)return e.createElement(Ln,{appState:t});if("stats"===n)return e.createElement(Kn,{appState:t});throw new Error("invalid `display`: ${display}")}}var Q=t(6599),_={};_.styleTagTransform=x(),_.setAttributes=v(),_.insert=b().bind(null,"head"),_.domAPI=h(),_.insertStyleElement=A(),f()(Q.Z,_),Q.Z&&Q.Z.locals&&Q.Z.locals;class $ extends e.Component{constructor(){super(...arguments),this.onClick=()=>{const{tab:e,display:n,setDisplay:t}=this.props;R({tab:e}),t(n)}}render(){const{label:n,icon:t,display:r,current:a}=this.props,o=r===a?"Chain-Tab-on Chain-Tab":"Chain-Tab";return e.createElement("div",{className:o,onClick:this.onClick,title:n},e.createElement(G,{src:t}))}}const ee=t.p+"images/cube.40f4375d2cc8e8587ec1.svg",ne=t.p+"images/cube-alt.1ed2eb063e9e2e7da6e7.svg",te=t.p+"images/history.5dd62e900debfea97374.svg",re=t.p+"images/watch.ee57484d067d06b498d0.svg",ae=t.p+"images/list-alt-regular.7dc1ed27d52dc5892df9.svg",oe=t.p+"images/location.22ad8b44396c3d3e4520.svg",ie=t.p+"images/settings.aedd2c40494e6b32a25d.svg",se=t.p+"images/graph.4c6e42d60a9201cebfae.svg";var le=t(9816),ce={};ce.styleTagTransform=x(),ce.setAttributes=v(),ce.insert=b().bind(null,"head"),ce.domAPI=h(),ce.insertStyleElement=A(),f()(le.Z,ce),le.Z&&le.Z.locals&&le.Z.locals;class ue extends e.Component{shouldComponentUpdate(e){return this.props.best!==e.best||this.props.finalized!==e.finalized||this.props.blockTimestamp!==e.blockTimestamp||this.props.blockAverage!==e.blockAverage||this.props.currentTab!==e.currentTab}render(){const{best:n,finalized:t,blockTimestamp:r,blockAverage:a}=this.props,{currentTab:o,setDisplay:i}=this.props;return e.createElement("div",{className:"Header"},e.createElement(_n,{icon:ee,title:"Best Block"},"#",L(n)),e.createElement(_n,{icon:ne,title:"Finalized Block"},"#",L(t)),e.createElement(_n,{icon:te,title:"Average Time"},null==a?"-":H(a/1e3)),e.createElement(_n,{icon:re,title:"Last Block"},e.createElement(et,{when:r})),e.createElement("div",{className:"Header-tabs"},e.createElement($,{icon:ae,label:"List",display:"list",tab:"",current:o,setDisplay:i}),e.createElement($,{icon:oe,label:"Map",display:"map",tab:"map",current:o,setDisplay:i}),e.createElement($,{icon:se,label:"Stats",display:"stats",tab:"stats",current:o,setDisplay:i}),e.createElement($,{icon:ie,label:"Settings",display:"settings",tab:"settings",current:o,setDisplay:i})))}}var de=t(4156),fe={};function pe(e,n){const t=n?` (${be(n)})`:"";return e>=1073741824?`${(e/1073741824).toFixed(1)} GB${t}`:e>=1048576?`${(e/1048576).toFixed(1)} MB${t}`:e>=1e3?`${(e/1024).toFixed(1)} kB${t}`:`${e} B${t}`}function he(e,n){const t=n?` (${be(n)})`:"";return e>=1048576?`${(e/1048576).toFixed(1)} MB/s${t}`:e>=1e3?`${(e/1024).toFixed(1)} kB/s${t}`:`${0|e} B/s${t}`}fe.styleTagTransform=x(),fe.setAttributes=v(),fe.insert=b().bind(null,"head"),fe.domAPI=h(),fe.insertStyleElement=A(),f()(de.Z,fe),de.Z&&de.Z.locals&&de.Z.locals;const me=1048576;function be(e){const n=(a()-e)/1e3|0,t=n/3600|0,r=n%3600/60|0;return t?`${t}h ago`:r?`${r}m ago`:(n%60|0)+"s ago"}const ge=t.p+"images/server.da3b83bb192a06591ad2.svg";class ve extends e.Component{shouldComponentUpdate(e){return this.props.node!==e.node}render(){const{name:n}=this.props.node;return e.createElement("td",{className:"Column"},e.createElement(ft,{text:n,position:"left"}),e.createElement(ct,{text:n}))}}ve.label="Node",ve.icon=ge,ve.setting=null,ve.width=null,ve.sortBy=({sortableName:e})=>e;const ye=t.p+"images/shield.d73f340ab2083ef531ae.svg";class Ae extends e.Component{constructor(){super(...arguments),this.onCopy=e=>{this.copy=e},this.onClick=e=>{e.stopPropagation(),null!=this.copy&&this.copy()}}shouldComponentUpdate(e){return this.data!==e.node.validator}render(){const{validator:n}=this.props.node;return this.data=n,n?e.createElement("td",{className:"Column",onClick:this.onClick},e.createElement(ft,{text:n,copy:this.onCopy}),e.createElement(Pa,{className:"Column-validator",account:n,size:16})):e.createElement("td",{className:"Column"},"-")}}Ae.label="Validator",Ae.icon=ye,Ae.width=16,Ae.setting="validator",Ae.sortBy=({validator:e})=>e||"";class we extends e.Component{shouldComponentUpdate(e){return this.data!==e.node.city}render(){const{city:n}=this.props.node;return this.data=n,n?e.createElement("td",{className:"Column"},e.createElement(ft,{text:n,position:"left"}),e.createElement(ct,{text:n,chars:14})):e.createElement("td",{className:"Column"},"-")}}we.label="Location",we.icon=oe,we.width=140,we.setting="location",we.sortBy=({city:e})=>e||"";const xe=t.p+"images/terminal.313f17539fe5ca89e19a.svg",Ce=t.p+"images/dot.56c39b625ce62a733118.svg",Ee=t.p+"images/substrate.96d5420f48a6f2f97ada.svg",Pe=t.p+"images/polkadot-js.cb23e82e0a775aa071f1.svg",ke=t.p+"images/robonomics.924eebe6da64fb01c0c8.svg",Te=t.p+"images/chainx.237572a859f91d89eefe.svg",Se=t.p+"images/edgeware.371f7bb0ab28e169f6ad.svg",ze=t.p+"images/joystream.d53d788563e64a4dcb22.svg",Ne=t.p+"images/laddernetwork.ac151189d77fdbf3c38a.svg",Le=t.p+"images/cennznet.b88b426ef7ad4eb110bf.svg",Be=t.p+"images/crab.5e7fb581671f944fe6f4.svg",Oe=t.p+"images/darwinia.c600347da5c92d6953a2.svg",He=t.p+"images/turingnetwork.c5545ff63733ab260af2.svg",Ue=t.p+"images/dothereum.07a528dd874ce0f2f459.svg",Re=t.p+"images/kagome.0bd3ca8038218eabd6e6.svg",Fe=t.p+"images/katalchain.ffcda532342a1d4743e0.svg",je=t.p+"images/bifrost.4ce936667dd3dd29a7d4.svg",Xe=t.p+"images/totem.3ecef204adc04025c365.svg",Me=t.p+"images/nodle.df51a765b385f8f23475.svg",Ze=t.p+"images/zero.e0e7742550ab46167795.svg",Ge=t.p+"images/crust.0016271e6b70ecad1b3b.svg",Ye={"parity-polkadot":Ce,"Parity Polkadot":Ce,"polkadot-js":Pe,"airalab-robonomics":ke,"substrate-node":Ee,"Substrate Node":Ee,"edgeware-node":Se,"Edgeware Node":Se,"joystream-node":ze,ChainX:Te,"ladder-node":Ne,"cennznet-node":Le,"Darwinia Crab":Be,Darwinia:Oe,"turing-node":He,dothereum:Ue,"Kagome Node":Re,katalchain:Fe,"bifrost-node":je,"totem-meccano-node":Xe,Totem:Xe,"Nodle Chain Node":Me,subzero:Ze,Crust:Ge},Ie=/^\d+\.\d+\.\d+/;class We extends e.Component{shouldComponentUpdate(e){return this.props.node!==e.node&&(this.implementation!==e.node.implementation||this.version!==e.node.version)}render(){const{implementation:n,version:t}=this.props.node;this.implementation=n,this.version=t;const[r]=t.match(Ie)||["?.?.?"],a=Ye[n]||Ee;return e.createElement("td",{className:"Column"},e.createElement(ft,{text:`${n} v${t}`}),e.createElement(G,{src:a})," ",r)}}We.label="Implementation",We.icon=xe,We.width=90,We.setting="implementation",We.sortBy=({sortableVersion:e})=>e;const De=t.p+"images/fingerprint.0894f0f14d02aea1959f.svg";class Ve extends e.Component{shouldComponentUpdate(e){return this.data!==e.node.networkId}render(){const{networkId:n}=this.props.node;return this.data=n,n?e.createElement("td",{className:"Column"},e.createElement(ft,{text:n,position:"left"}),e.createElement(ct,{text:n,chars:10})):e.createElement("td",{className:"Column"},"-")}}Ve.label="Network ID",Ve.icon=De,Ve.width=90,Ve.setting="networkId",Ve.sortBy=({networkId:e})=>e||"";const qe=t.p+"images/broadcast.e030fcee6db28c880c0a.svg";class Ke extends e.Component{constructor(){super(...arguments),this.data=0}shouldComponentUpdate(e){return this.data!==e.node.peers}render(){const{peers:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column"},n)}}Ke.label="Peer Count",Ke.icon=qe,Ke.width=26,Ke.setting="peers",Ke.sortBy=({peers:e})=>e;const Je=t.p+"images/inbox.ddb2ce607469de04b6e7.svg";class Qe extends e.Component{constructor(){super(...arguments),this.data=0}shouldComponentUpdate(e){return this.data!==e.node.txs}render(){const{txs:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column"},n)}}Qe.label="Transactions in Queue",Qe.icon=Je,Qe.width=26,Qe.setting="txs",Qe.sortBy=({txs:e})=>e;const _e=t.p+"images/cloud-upload.7ec8d121a295f5e8a61f.svg";class $e extends e.Component{constructor(){super(...arguments),this.data=[]}shouldComponentUpdate(e){return this.data!==e.node.upload}render(){const{upload:n,chartstamps:t}=this.props.node;return this.data=n,n.length<3?e.createElement("td",{className:"Column"},"-"):e.createElement("td",{className:"Column"},e.createElement(lt,{width:44,height:16,stroke:1,format:he,values:n,stamps:t,minScale:me}))}}$e.label="Upload Bandwidth",$e.icon=_e,$e.width=40,$e.setting="upload",$e.sortBy=({upload:e})=>e.length<3?0:e[e.length-1];const en=t.p+"images/cloud-download.f0bc2005afd838e630cb.svg";class nn extends e.Component{constructor(){super(...arguments),this.data=[]}shouldComponentUpdate(e){return this.data!==e.node.download}render(){const{download:n,chartstamps:t}=this.props.node;return this.data=n,n.length<3?e.createElement("td",{className:"Column"},"-"):e.createElement("td",{className:"Column"},e.createElement(lt,{width:44,height:16,stroke:1,format:he,values:n,stamps:t,minScale:me}))}}nn.label="Download Bandwidth",nn.icon=en,nn.width=40,nn.setting="download",nn.sortBy=({download:e})=>e.length<3?0:e[e.length-1];const tn=t.p+"images/git-branch.04319f00d9461f52bfca.svg";class rn extends e.Component{constructor(){super(...arguments),this.data=[]}shouldComponentUpdate(e){return this.data!==e.node.stateCacheSize}render(){const{stateCacheSize:n,chartstamps:t}=this.props.node;return this.data=n,n.length<3?e.createElement("td",{className:"Column"},"-"):e.createElement("td",{className:"Column"},e.createElement(lt,{width:44,height:16,stroke:1,format:pe,values:n,stamps:t,minScale:me}))}}rn.label="State Cache Size",rn.icon=tn,rn.width=40,rn.setting="stateCacheSize",rn.sortBy=({stateCacheSize:e})=>e.length<3?0:e[e.length-1];class an extends e.Component{constructor(){super(...arguments),this.data=0}shouldComponentUpdate(e){return this.data!==e.node.height}render(){const{height:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column"},`#${L(n)}`)}}an.label="Block",an.icon=ee,an.width=88,an.setting="blocknumber",an.sortBy=({height:e})=>e;const on=t.p+"images/file-binary.3d2c4e6051abfece5a88.svg";class sn extends e.Component{constructor(){super(...arguments),this.onCopy=e=>{this.copy=e},this.onClick=e=>{e.stopPropagation(),null!=this.copy&&this.copy()}}shouldComponentUpdate(e){return this.data!==e.node.hash}render(){const{hash:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column",onClick:this.onClick},e.createElement(ft,{text:n,position:"right",copy:this.onCopy}),e.createElement(ct,{text:n,chars:16}))}}sn.label="Block Hash",sn.icon=on,sn.width=154,sn.setting="blockhash",sn.sortBy=({hash:e})=>e||"";class ln extends e.Component{constructor(){super(...arguments),this.data=0}shouldComponentUpdate(e){return this.data!==e.node.finalized}render(){const{finalized:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column"},`#${L(n)}`)}}ln.label="Finalized Block",ln.icon=ne,ln.width=88,ln.setting="finalized",ln.sortBy=({finalized:e})=>e||0;class cn extends e.Component{constructor(){super(...arguments),this.onCopy=e=>{this.copy=e},this.onClick=e=>{e.stopPropagation(),null!=this.copy&&this.copy()}}shouldComponentUpdate(e){return this.data!==e.node.finalizedHash}render(){const{finalizedHash:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column",onClick:this.onClick},e.createElement(ft,{text:n,position:"right",copy:this.onCopy}),e.createElement(ct,{text:n,chars:16}))}}cn.label="Finalized Block Hash",cn.icon=on,cn.width=154,cn.setting="finalizedhash",cn.sortBy=({finalizedHash:e})=>e||"";class un extends e.Component{constructor(){super(...arguments),this.data=0}shouldComponentUpdate(e){return this.data!==e.node.blockTime}render(){const{blockTime:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column"},`${H(n/1e3)}`)}}un.label="Block Time",un.icon=te,un.width=80,un.setting="blocktime",un.sortBy=({blockTime:e})=>null==e?1/0:e;const dn=t.p+"images/dashboard.efc52e1e20eb004c35aa.svg";class fn extends e.Component{shouldComponentUpdate(e){return this.data!==e.node.propagationTime}render(){const{propagationTime:n}=this.props.node,t=null==n?"∞":O(n);return this.data=n,e.createElement("td",{className:"Column"},t)}}fn.label="Block Propagation Time",fn.icon=dn,fn.width=58,fn.setting="blockpropagation",fn.sortBy=({propagationTime:e})=>null==e?1/0:e;class pn extends e.Component{constructor(){super(...arguments),this.data=0}shouldComponentUpdate(e){return this.data!==e.node.blockTimestamp}render(){const{blockTimestamp:n}=this.props.node;return this.data=n,e.createElement("td",{className:"Column"},e.createElement(et,{when:n}))}}pn.label="Last Block Time",pn.icon=re,pn.width=100,pn.setting="blocklasttime",pn.sortBy=({blockTimestamp:e})=>e||0;const hn=t.p+"images/pulse.53cc00ac9fba11d6c757.svg";class mn extends e.Component{shouldComponentUpdate(e){return this.props.node!==e.node}render(){const{startupTime:n}=this.props.node;return n?e.createElement("td",{className:"Column"},e.createElement(et,{when:n,justTime:!0})):e.createElement("td",{className:"Column"},"-")}}mn.label="Node Uptime",mn.icon=hn,mn.width=58,mn.setting="uptime",mn.sortBy=({startupTime:e})=>e||0;var bn=t(3045),gn={};gn.styleTagTransform=x(),gn.setAttributes=v(),gn.insert=b().bind(null,"head"),gn.domAPI=h(),gn.insertStyleElement=A(),f()(bn.Z,gn),bn.Z&&bn.Z.locals&&bn.Z.locals;class vn extends e.Component{constructor(){super(...arguments),this.state={filter:null,viewportHeight:N().height},this.listStart=0,this.listEnd=0,this.relativeTop=-1,this.nextKey=0,this.previousKeys=new Map,this.onScroll=()=>{const e=(n=window.scrollY-179)-n%155;var n;if(this.relativeTop===e)return;this.relativeTop=e;const{viewportHeight:t}=this.state,r=Math.max(e,0),a=e<0?t+e:t,o=Math.max((r/31|0)-5,0),i=o+10+Math.ceil(a/31);o===this.listStart&&i===this.listEnd||(this.listStart=o,this.listEnd=i,this.props.appUpdate({}))},this.onResize=()=>{const e=N().height;this.setState({viewportHeight:e})},this.onFilterChange=e=>{this.setState({filter:e})}}componentDidMount(){this.onScroll(),window.addEventListener("resize",this.onResize),window.addEventListener("scroll",this.onScroll)}componentWillUnmount(){window.removeEventListener("resize",this.onResize),window.removeEventListener("scroll",this.onScroll)}render(){const{pins:n,sortBy:t,appState:r}=this.props,{selectedColumns:a}=r,{filter:o}=this.state;let i=r.nodes.sorted();if(null!=o){if(i=i.filter(o),0===i.length)return e.createElement(e.Fragment,null,e.createElement("div",{className:"List List-no-nodes"},"¯\\_(ツ)_/¯",e.createElement("br",null),"Nothing matches"),e.createElement(bt,{onChange:this.onFilterChange}));r.nodes.setFocus(0,i.length)}else r.nodes.setFocus(this.listStart,this.listEnd);const s=35+31*i.length,l=31*this.listStart;i=i.slice(this.listStart,this.listEnd);const c=this.recalculateKeys(i);return e.createElement(e.Fragment,null,e.createElement("div",{className:"List",style:{height:s}},e.createElement("table",{className:"List--table"},e.createElement(Tn,{columns:a,sortBy:t}),e.createElement("tbody",null,e.createElement("tr",{className:"List-padding",style:{height:`${l}px`}}),i.map(((t,r)=>e.createElement(wn,{key:c[r],node:t,pins:n,columns:a})))))),e.createElement(bt,{onChange:this.onFilterChange}))}recalculateKeys(e){const n=e.map((({id:e})=>{const n=this.previousKeys.get(e);return null!=n&&this.previousKeys.delete(e),n})),t=Array.from(this.previousKeys.values());let r=0;return this.previousKeys.clear(),n.map(((n,a)=>{const o=e[a].id;if(null!=n)return this.previousKeys.set(o,n),n;if(r<t.length){const e=t[r++];return this.previousKeys.set(o,e),e}const i=this.nextKey++;return this.previousKeys.set(o,i),i}))}}var yn=t(5793),An={};An.styleTagTransform=x(),An.setAttributes=v(),An.insert=b().bind(null,"head"),An.domAPI=h(),An.insertStyleElement=A(),f()(yn.Z,An),yn.Z&&yn.Z.locals&&yn.Z.locals;class wn extends e.Component{constructor(){super(...arguments),this.renderedChangeRef=0,this.toggle=()=>{const{pins:e,node:n}=this.props;n.pinned?e.delete(n.name):e.add(n.name)}}shouldComponentUpdate(e){return this.props.node.id!==e.node.id||this.renderedChangeRef!==e.node.changeRef}render(){const{node:n,columns:t}=this.props;this.renderedChangeRef=n.changeRef;let r="Row";return null!=n.propagationTime&&(r+=" Row-synced"),n.pinned&&(r+=" Row-pinned"),n.stale&&(r+=" Row-stale"),e.createElement("tr",{className:r,onClick:this.toggle},t.map(((t,r)=>e.createElement(t,{node:n,key:r}))))}}wn.columns=[ve,Ae,we,We,Ve,Ke,Qe,$e,nn,rn,an,sn,ln,cn,un,fn,pn,mn];const xn=t.p+"images/triangle-up.88c757f95b0d17f05de5.svg",Cn=t.p+"images/triangle-down.0d69942f8ae88f9fcfe2.svg";class En extends e.Component{constructor(){super(...arguments),this.toggleSort=()=>{const{index:e,sortBy:n,column:t}=this.props,r=n.get();null!=t.sortBy&&(r===e?n.set(~e):r===~e?n.set(null):n.set(e))}}render(){const{column:n,index:t,last:r}=this.props,{icon:a,width:o,label:i}=n,s=0===t?"left":t===r?"right":"center",l=this.props.sortBy.get(),c=null==n.sortBy?"THeadCell":l===t||l===~t?"THeadCell THeadCell-sorted":"THeadCell THeadCell-sortable",u=l===t?xn:l===~t?Cn:a;return e.createElement("th",{className:c,style:o?{width:o}:void 0,onClick:this.toggleSort},e.createElement("span",{className:"THeadCell-container"},e.createElement(ft,{text:i,position:s}),e.createElement(G,{src:u})))}}var Pn=t(3415),kn={};kn.styleTagTransform=x(),kn.setAttributes=v(),kn.insert=b().bind(null,"head"),kn.domAPI=h(),kn.insertStyleElement=A(),f()(Pn.Z,kn),Pn.Z&&Pn.Z.locals&&Pn.Z.locals;class Tn extends e.Component{constructor(e){super(e),this.sortBy=e.sortBy.get()}shouldComponentUpdate(e){return this.sortBy!==e.sortBy.get()}render(){const{columns:n,sortBy:t}=this.props,r=n.length-1;return this.sortBy=t.get(),e.createElement("thead",null,e.createElement("tr",{className:"THead"},n.map(((n,a)=>e.createElement(En,{key:a,column:n,index:a,last:r,sortBy:t})))))}}var Sn=t(7937),zn={};zn.styleTagTransform=x(),zn.setAttributes=v(),zn.insert=b().bind(null,"head"),zn.domAPI=h(),zn.insertStyleElement=A(),f()(Sn.Z,zn),Sn.Z&&Sn.Z.locals&&Sn.Z.locals;const Nn=800/350;class Ln extends e.Component{constructor(){super(...arguments),this.state={filter:null,width:0,height:0,top:0,left:0},this.onResize=()=>{const e=N();e.width=Math.max(1350,e.width),e.height-=148;let n=0,t=0,r=0,a=0;e.width/e.height>=Nn?(r=Math.round(e.height*Nn),a=Math.round(e.height),t=(e.width-r)/2):(r=Math.round(e.width),a=Math.round(e.width/Nn),n=(e.height-a)/2),this.setState({top:n,left:t,width:r,height:a})},this.onFilterChange=e=>{this.setState({filter:e})}}componentDidMount(){this.onResize(),window.addEventListener("resize",this.onResize)}componentWillUnmount(){window.removeEventListener("resize",this.onResize)}render(){const{appState:n}=this.props,{filter:t}=this.state,r=n.nodes.sorted();return e.createElement(e.Fragment,null,e.createElement("div",{className:"Map"},r.map((n=>{const{lat:r,lon:a}=n,o=null==t||t(n);if(null==r||null==a)return null;const i=this.pixelPosition(r,a);return e.createElement(Un,{key:n.id,position:i,focused:o,node:n})}))),e.createElement(bt,{onChange:this.onFilterChange}))}pixelPosition(e,n){const{state:t}=this;let r=0;return n>0&&(r|=1),e<0&&(r|=2),{left:Math.round((180+n)/360*t.width+t.left),top:Math.round((90-e)/180*t.height*1.1428571428571428+t.top),quarter:r}}}const Bn=t.p+"images/package.977f6a53a3b971064c3a.svg";var On=t(2382),Hn={};Hn.styleTagTransform=x(),Hn.setAttributes=v(),Hn.insert=b().bind(null,"head"),Hn.domAPI=h(),Hn.insertStyleElement=A(),f()(On.Z,Hn),On.Z&&On.Z.locals&&On.Z.locals;class Un extends e.Component{constructor(){super(...arguments),this.state={hover:!1},this.onMouseOver=()=>{this.setState({hover:!0})},this.onMouseOut=()=>{this.setState({hover:!1})}}render(){const{node:n,position:t,focused:r}=this.props,{left:a,top:o,quarter:i}=t,{height:s,propagationTime:l,city:c}=n;if(!c)return null;let u=`Location Location-quarter${i}`;return r?null!=l?u+=" Location-synced":s%2==1&&(u+=" Location-odd"):u+=" Location-dimmed",e.createElement("div",{className:u,style:{left:a,top:o},onMouseOver:this.onMouseOver,onMouseOut:this.onMouseOut},this.state.hover?this.renderDetails():null,e.createElement("div",{className:"Location-ping"}))}renderDetails(){const{name:n,implementation:t,version:r,validator:a,height:o,hash:i,blockTime:s,blockTimestamp:l,propagationTime:c,city:u}=this.props.node;let d=e.createElement("div",null);return a&&(d=e.createElement("tr",null,e.createElement("td",null,e.createElement(G,{src:ye})),e.createElement("td",{colSpan:5},B(a,30),e.createElement("span",{className:"Location-validator"},e.createElement(Pa,{account:a,size:16}))))),e.createElement("table",{className:"Location-details Location-details"},e.createElement("tbody",null,e.createElement("tr",null,e.createElement("td",{title:"Node"},e.createElement(G,{src:ge})),e.createElement("td",{colSpan:5},n)),d,e.createElement("tr",null,e.createElement("td",{title:"Implementation"},e.createElement(G,{src:xe})),e.createElement("td",{colSpan:5},t," v",r)),e.createElement("tr",null,e.createElement("td",{title:"Location"},e.createElement(G,{src:oe})),e.createElement("td",{colSpan:5},u)),e.createElement("tr",null,e.createElement("td",{title:"Block"},e.createElement(G,{src:Bn})),e.createElement("td",{colSpan:5},"#",L(o))),e.createElement("tr",null,e.createElement("td",{title:"Block Hash"},e.createElement(G,{src:on})),e.createElement("td",{colSpan:5},B(i,20))),e.createElement("tr",null,e.createElement("td",{title:"Block Time"},e.createElement(G,{src:te})),e.createElement("td",{style:{width:80}},H(s/1e3)),e.createElement("td",{title:"Block Propagation Time"},e.createElement(G,{src:dn})),e.createElement("td",{style:{width:58}},null==c?"∞":O(c)),e.createElement("td",{title:"Last Block Time"},e.createElement(G,{src:re})),e.createElement("td",{style:{minWidth:82}},e.createElement(et,{when:l})))))}}var Rn=t(6127),Fn={};Fn.styleTagTransform=x(),Fn.setAttributes=v(),Fn.insert=b().bind(null,"head"),Fn.domAPI=h(),Fn.insertStyleElement=A(),f()(Rn.Z,Fn),Rn.Z&&Rn.Z.locals&&Rn.Z.locals;class jn extends e.Component{render(){const{settings:n}=this.props;return e.createElement("div",{className:"Settings"},e.createElement("div",{className:"Settings-category"},e.createElement("h1",null,"List View"),e.createElement("h2",null,"Visible Columns"),wn.columns.map((({label:t,icon:r,setting:a},o)=>a?e.createElement(Zn,{key:o,setting:a,settings:n,icon:r,label:t}):null))))}}var Xn=t(188),Mn={};Mn.styleTagTransform=x(),Mn.setAttributes=v(),Mn.insert=b().bind(null,"head"),Mn.domAPI=h(),Mn.insertStyleElement=A(),f()(Xn.Z,Mn),Xn.Z&&Xn.Z.locals&&Xn.Z.locals;class Zn extends e.Component{constructor(){super(...arguments),this.toggle=()=>{const{setting:e,settings:n}=this.props;n.set(e,!n.get(e))}}render(){const{icon:n,label:t,setting:r,settings:a}=this.props,o=a.get(r)?"Setting Setting-on":"Setting";return e.createElement("div",{className:o,onClick:this.toggle},e.createElement(G,{src:n}),t,e.createElement("span",{className:"Setting-switch"},e.createElement("span",{className:"Setting-knob"})))}}var Gn=t(5636),Yn={};function In(e){return(Math.round(100*e)/100).toFixed(2)}function Wn(e){return e+""}function Dn(e){const[n,t]=e;return 0===n?"Less than "+t+" GB":null===t?"At least "+n+" GB":n+" GB"}function Vn(e){return e?"Yes":"No"}function qn(e){const[n,t]=e;return null===t?"More than "+(n/100).toFixed(1)+"x":0===n?"Less than "+(t/100).toFixed(1)+"x":n<=100&&t>=100?"Baseline":(n/100).toFixed(1)+"x"}Yn.styleTagTransform=x(),Yn.setAttributes=v(),Yn.insert=b().bind(null,"head"),Yn.domAPI=h(),Yn.insertStyleElement=A(),f()(Gn.Z,Yn),Gn.Z&&Gn.Z.locals&&Gn.Z.locals;class Kn extends e.Component{render(){const{appState:n}=this.props,t=[];function r(n,r,a,o){if(o){const i=function(n,t,r,a){let o=a.other+a.unknown;if(a.list.forEach((([e,n])=>{o+=n})),a.unknown===o)return null;const i=[];if(a.list.forEach((([n,t])=>{const a=In(t/o*100),s=i.length;i.push(e.createElement("tr",{key:s},e.createElement("td",{className:"Stats-percent"},a,"%"),e.createElement("td",{className:"Stats-count"},t),e.createElement("td",{className:"Stats-value"},r(n))))})),a.other>0){const n=In(a.other/o*100);i.push(e.createElement("tr",{key:"other"},e.createElement("td",{className:"Stats-percent"},n,"%"),e.createElement("td",{className:"Stats-count"},a.other),e.createElement("td",{className:"Stats-value"},"Other")))}if(a.unknown>0){const n=In(a.unknown/o*100);i.push(e.createElement("tr",{key:"unknown"},e.createElement("td",{className:"Stats-percent"},n,"%"),e.createElement("td",{className:"Stats-count"},a.unknown),e.createElement("td",{className:"Stats-value Stats-unknown"},"Unknown")))}return e.createElement("div",{className:"Stats-category",key:n},e.createElement("table",null,e.createElement("thead",null,e.createElement("tr",null,e.createElement("th",{className:"Stats-percent"}),e.createElement("th",{className:"Stats-count"}),e.createElement("th",{className:"Stats-value"},t))),e.createElement("tbody",null,i)))}(n,r,a,o);null!==i&&t.push(i)}}const a=n.chainStats;return a&&(r("version","Version",Wn,a.version),r("target_os","Operating System",Wn,a.target_os),r("target_arch","CPU Architecture",Wn,a.target_arch),r("cpu","CPU",Wn,a.cpu),r("core_count","CPU Cores",Wn,a.core_count),r("memory","Memory",Dn,a.memory),r("is_virtual_machine","Is Virtual Machine?",Vn,a.is_virtual_machine),r("linux_distro","Linux Distribution",Wn,a.linux_distro),r("linux_kernel","Linux Kernel",Wn,a.linux_kernel),r("cpu_hashrate_score","CPU Speed",qn,a.cpu_hashrate_score),r("memory_memcpy_score","Memory Speed",qn,a.memory_memcpy_score),r("disk_sequential_write_score","Disk Speed (sequential writes)",qn,a.disk_sequential_write_score),r("disk_random_write_score","Disk Speed (random writes)",qn,a.disk_random_write_score)),e.createElement("div",{className:"Stats"},t)}}var Jn=t(5861),Qn={};function _n(n){return e.createElement("div",{className:"Tile"},e.createElement(G,{src:n.icon}),e.createElement("span",{className:"Tile-label"},n.title),e.createElement("span",{className:"Tile-content"},n.children))}Qn.styleTagTransform=x(),Qn.setAttributes=v(),Qn.insert=b().bind(null,"head"),Qn.domAPI=h(),Qn.insertStyleElement=A(),f()(Jn.Z,Qn),Jn.Z&&Jn.Z.locals&&Jn.Z.locals;const $n=new Map;!function e(){const n=a();for(const e of $n.values())e(n);setTimeout(e,100)}();class et extends e.Component{constructor(e){super(e),this.state={now:a()-et.timeDiff},this.agoStr=this.stringify(e.when,this.state.now)}shouldComponentUpdate(e,n){const t=this.stringify(e.when,n.now);return this.agoStr!==t&&(this.agoStr=t,!0)}componentDidMount(){$n.set(this,(e=>{this.setState({now:e-et.timeDiff})}))}componentWillUnmount(){$n.delete(this)}render(){return 0===this.props.when?e.createElement("span",null,"-"):e.createElement("span",{title:new Date(this.props.when).toUTCString()},this.agoStr)}stringify(e,n){const t=Math.max(n-e,0)/1e3;let r;return r=t<10?`${t.toFixed(1)}s`:t<60?(0|t)+"s":t<3600?(t/60|0)+"m":t<86400?(t/3600|0)+"h":(t/86400|0)+"d",!0!==this.props.justTime&&(r+=" ago"),r}}et.timeDiff=0;var nt=t(4962),tt={};tt.styleTagTransform=x(),tt.setAttributes=v(),tt.insert=b().bind(null,"head"),tt.domAPI=h(),tt.insertStyleElement=A(),f()(nt.Z,tt),nt.Z&&nt.Z.locals&&nt.Z.locals;const rt=t.p+"images/zap.2e22cf19864b5fbc95b8.svg",at=t.p+"images/flame.6f16834ec7e9e7b0dc69.svg";function ot(n){switch(n.status){case"online":return null;case"offline":return e.createElement("div",{className:"OfflineIndicator",title:"Offline"},e.createElement(G,{src:rt}));case"upgrade-requested":return e.createElement("div",{className:"OfflineIndicator OfflineIndicator-upgrade",title:"New Version Available"},e.createElement(G,{src:at}))}}var it=t(667),st={};st.styleTagTransform=x(),st.setAttributes=v(),st.insert=b().bind(null,"head"),st.domAPI=h(),st.insertStyleElement=A(),f()(it.Z,st),it.Z&&it.Z.locals&&it.Z.locals;class lt extends e.Component{constructor(){super(...arguments),this.onRef=e=>{this.cursor=e},this.onTooltipInit=e=>{this.update=e},this.onMouseMove=e=>{const{width:n,height:t,values:r,format:a,stamps:o}=this.props,i=(n-2)/(r.length-1),s=0|Math.round((e.nativeEvent.offsetX-1-i/2)/i);this.cursor.setAttribute("d",`M ${1+i*s} 0 V ${t}`);const l=a?a(r[s],o?o[s]:null):`${r[s]}`;this.update(l)},this.onMouseLeave=()=>{this.cursor.removeAttribute("d")}}shouldComponentUpdate(e){const{stroke:n,width:t,height:r,format:a,values:o}=this.props;return o!==e.values||n!==e.stroke||t!==e.width||r!==e.height||a!==e.format}render(){const{stroke:n,width:t,height:r,minScale:a,values:o}=this.props,i=n/2,s=r-i,l=t-2,c=Math.max(a||0,...o),u=l/(o.length-1);let d="";return o.forEach(((e,n)=>{const t=1+n*u,r=i+(1-e/c)*s;d?d+=` L ${t} ${r}`:d=`${t} ${r}`})),e.createElement(e.Fragment,null,e.createElement(ft,{text:"-",onInit:this.onTooltipInit}),e.createElement("svg",{className:"Sparkline",width:t,height:r,strokeWidth:n,onMouseMove:this.onMouseMove,onMouseLeave:this.onMouseLeave},e.createElement("path",{d:`M 0 ${r} L ${d} V ${r} Z`,stroke:"none"}),e.createElement("path",{d:`M ${d}`,fill:"none"}),e.createElement("path",{className:"Sparkline-cursor",strokeWidth:"2",ref:this.onRef})))}}class ct extends e.Component{shouldComponentUpdate(e){return this.props.text!==e.text}render(){const{text:n,chars:t}=this.props;return n?null!=t&&n.length<=t?n:t?`${n.substr(0,t-1)}…`:e.createElement("div",{className:"Column-truncate"},n):"-"}}var ut=t(3754),dt={};function ft({text:n,position:t,copy:r,onInit:a}){const[o,i]=e.useState(!1),[s,l]=e.useState(null),c=e.useRef(null),u=e.useCallback((e=>{c.current&&(c.current.textContent=e)}),[c]);function d(){i(!1),l(null)}function f(){!function(e){const n=document.createElement("textarea");n.value=e,document.body.appendChild(n),n.select(),document.execCommand("copy"),document.body.removeChild(n)}(n),s&&clearTimeout(s),i(!0),l(setTimeout(d,2e3))}e.useEffect((()=>(a&&a(u),r&&r(f),()=>{s&&clearTimeout(s),r&&r(null)})),[]);let p="Tooltip";return t&&"center"!==t&&(p+=` Tooltip-${t}`),o&&(p+=" Tooltip-copied"),e.createElement("div",{className:p,ref:c},o?"Copied to clipboard!":n)}dt.styleTagTransform=x(),dt.setAttributes=v(),dt.insert=b().bind(null,"head"),dt.domAPI=h(),dt.insertStyleElement=A(),f()(ut.Z,dt),ut.Z&&ut.Z.locals&&ut.Z.locals;const pt=t.p+"images/search.2cf6c5d41aa903c0b06f.svg";var ht=t(1439),mt={};mt.styleTagTransform=x(),mt.setAttributes=v(),mt.insert=b().bind(null,"head"),mt.domAPI=h(),mt.insertStyleElement=A(),f()(ht.Z,mt),ht.Z&&ht.Z.locals&&ht.Z.locals;class bt extends e.Component{constructor(){super(...arguments),this.state={value:""},this.onRef=e=>{this.filterInput=e},this.onChange=()=>{this.setValue(this.filterInput.value)},this.onKeyUp=e=>{e.stopPropagation(),27===e.keyCode&&this.setValue("")},this.onWindowKeyUp=e=>{var n;if(e.ctrlKey)return;if(["INPUT","TEXTAREA"].includes(null===(n=e.target)||void 0===n?void 0:n.tagName))return;const{value:t}=this.state,r=e.key,a=t&&27===e.keyCode,o=""===t&&1===r.length;a?this.setValue(""):o&&(this.setValue(r),this.filterInput.focus())}}componentDidMount(){window.addEventListener("keyup",this.onWindowKeyUp)}componentWillUnmount(){window.removeEventListener("keyup",this.onWindowKeyUp)}shouldComponentUpdate(e,n){return this.props.onChange!==e.onChange||this.state.value!==n.value}render(){const{value:n}=this.state;let t="Filter";return""===n&&(t+=" Filter-hidden"),e.createElement("div",{className:t},e.createElement(G,{src:pt}),e.createElement("input",{ref:this.onRef,value:n,onChange:this.onChange,onKeyUp:this.onKeyUp}))}setValue(e){this.setState({value:e}),this.props.onChange(this.getNodeFilter(e))}getNodeFilter(e){if(""===e)return null;const n=e.toLowerCase();return({name:e,city:t})=>{const r=-1!==e.toLowerCase().indexOf(n),a=null!=t&&-1!==t.toLowerCase().indexOf(n);return r||a}}}function gt(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function vt(e,...n){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(n.length>0&&!n.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${n}, not of length=${e.length}`)}const yt={number:gt,bool:function(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)},bytes:vt,hash:function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");gt(e.outputLen),gt(e.blockLen)},exists:function(e,n=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(n&&e.finished)throw new Error("Hash#digest() has already been called")},output:function(e,n){vt(e);const t=n.outputLen;if(e.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}},At=yt,wt=("object"==typeof self&&"crypto"in self&&self.crypto,e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)));if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error("Non little-endian hardware is not supported");function xt(e){if("string"==typeof e&&(e=function(e){if("string"!=typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}Array.from({length:256},((e,n)=>n.toString(16).padStart(2,"0")));const Ct=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]),Et=BigInt(2**32-1),Pt=BigInt(32);function kt(e,n=!1){return n?{h:Number(e&Et),l:Number(e>>Pt&Et)}:{h:0|Number(e>>Pt&Et),l:0|Number(e&Et)}}const Tt={fromBig:kt,split:function(e,n=!1){let t=new Uint32Array(e.length),r=new Uint32Array(e.length);for(let a=0;a<e.length;a++){const{h:o,l:i}=kt(e[a],n);[t[a],r[a]]=[o,i]}return[t,r]},toBig:(e,n)=>BigInt(e>>>0)<<Pt|BigInt(n>>>0),shrSH:(e,n,t)=>e>>>t,shrSL:(e,n,t)=>e<<32-t|n>>>t,rotrSH:(e,n,t)=>e>>>t|n<<32-t,rotrSL:(e,n,t)=>e<<32-t|n>>>t,rotrBH:(e,n,t)=>e<<64-t|n>>>t-32,rotrBL:(e,n,t)=>e>>>t-32|n<<64-t,rotr32H:(e,n)=>n,rotr32L:(e,n)=>e,rotlSH:(e,n,t)=>e<<t|n>>>32-t,rotlSL:(e,n,t)=>n<<t|e>>>32-t,rotlBH:(e,n,t)=>n<<t-32|e>>>64-t,rotlBL:(e,n,t)=>e<<t-32|n>>>64-t,add:function(e,n,t,r){const a=(n>>>0)+(r>>>0);return{h:e+t+(a/2**32|0)|0,l:0|a}},add3L:(e,n,t)=>(e>>>0)+(n>>>0)+(t>>>0),add3H:(e,n,t,r)=>n+t+r+(e/2**32|0)|0,add4L:(e,n,t,r)=>(e>>>0)+(n>>>0)+(t>>>0)+(r>>>0),add4H:(e,n,t,r,a)=>n+t+r+a+(e/2**32|0)|0,add5H:(e,n,t,r,a,o)=>n+t+r+a+o+(e/2**32|0)|0,add5L:(e,n,t,r,a)=>(e>>>0)+(n>>>0)+(t>>>0)+(r>>>0)+(a>>>0)},St=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),zt=new Uint32Array(32);function Nt(e,n,t,r,a,o){const i=a[o],s=a[o+1];let l=zt[2*e],c=zt[2*e+1],u=zt[2*n],d=zt[2*n+1],f=zt[2*t],p=zt[2*t+1],h=zt[2*r],m=zt[2*r+1],b=Tt.add3L(l,u,i);c=Tt.add3H(b,c,d,s),l=0|b,({Dh:m,Dl:h}={Dh:m^c,Dl:h^l}),({Dh:m,Dl:h}={Dh:Tt.rotr32H(m,h),Dl:Tt.rotr32L(m,h)}),({h:p,l:f}=Tt.add(p,f,m,h)),({Bh:d,Bl:u}={Bh:d^p,Bl:u^f}),({Bh:d,Bl:u}={Bh:Tt.rotrSH(d,u,24),Bl:Tt.rotrSL(d,u,24)}),zt[2*e]=l,zt[2*e+1]=c,zt[2*n]=u,zt[2*n+1]=d,zt[2*t]=f,zt[2*t+1]=p,zt[2*r]=h,zt[2*r+1]=m}function Lt(e,n,t,r,a,o){const i=a[o],s=a[o+1];let l=zt[2*e],c=zt[2*e+1],u=zt[2*n],d=zt[2*n+1],f=zt[2*t],p=zt[2*t+1],h=zt[2*r],m=zt[2*r+1],b=Tt.add3L(l,u,i);c=Tt.add3H(b,c,d,s),l=0|b,({Dh:m,Dl:h}={Dh:m^c,Dl:h^l}),({Dh:m,Dl:h}={Dh:Tt.rotrSH(m,h,16),Dl:Tt.rotrSL(m,h,16)}),({h:p,l:f}=Tt.add(p,f,m,h)),({Bh:d,Bl:u}={Bh:d^p,Bl:u^f}),({Bh:d,Bl:u}={Bh:Tt.rotrBH(d,u,63),Bl:Tt.rotrBL(d,u,63)}),zt[2*e]=l,zt[2*e+1]=c,zt[2*n]=u,zt[2*n+1]=d,zt[2*t]=f,zt[2*t+1]=p,zt[2*r]=h,zt[2*r+1]=m}class Bt extends class extends class{clone(){return this._cloneInto()}}{constructor(e,n,t={},r,a,o){if(super(),this.blockLen=e,this.outputLen=n,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,At.number(e),At.number(n),At.number(r),n<0||n>r)throw new Error("Blake2: outputLen bigger than keyLen");if(void 0!==t.key&&(t.key.length<1||t.key.length>r))throw new Error(`Key should be up 1..${r} byte long or undefined`);if(void 0!==t.salt&&t.salt.length!==a)throw new Error(`Salt should be ${a} byte long or undefined`);if(void 0!==t.personalization&&t.personalization.length!==o)throw new Error(`Personalization should be ${o} byte long or undefined`);this.buffer32=wt(this.buffer=new Uint8Array(e))}update(e){At.exists(this);const{blockLen:n,buffer:t,buffer32:r}=this,a=(e=xt(e)).length;for(let o=0;o<a;){this.pos===n&&(this.compress(r,0,!1),this.pos=0);const i=Math.min(n-this.pos,a-o),s=e.byteOffset+o;if(i!==n||s%4||!(o+i<a))t.set(e.subarray(o,o+i),this.pos),this.pos+=i,this.length+=i,o+=i;else{const t=new Uint32Array(e.buffer,s,Math.floor((a-o)/4));for(let e=0;o+n<a;e+=r.length,o+=n)this.length+=n,this.compress(t,e,!1)}}return this}digestInto(e){At.exists(this),At.output(e,this);const{pos:n,buffer32:t}=this;this.finished=!0,this.buffer.subarray(n).fill(0),this.compress(t,0,!0);const r=wt(e);this.get().forEach(((e,n)=>r[n]=e))}digest(){const{buffer:e,outputLen:n}=this;this.digestInto(e);const t=e.slice(0,n);return this.destroy(),t}_cloneInto(e){const{buffer:n,length:t,finished:r,destroyed:a,outputLen:o,pos:i}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=t,e.finished=r,e.destroyed=a,e.outputLen=o,e.buffer.set(n),e.pos=i,e}}{constructor(e={}){super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|St[0],this.v0h=0|St[1],this.v1l=0|St[2],this.v1h=0|St[3],this.v2l=0|St[4],this.v2h=0|St[5],this.v3l=0|St[6],this.v3h=0|St[7],this.v4l=0|St[8],this.v4h=0|St[9],this.v5l=0|St[10],this.v5h=0|St[11],this.v6l=0|St[12],this.v6h=0|St[13],this.v7l=0|St[14],this.v7h=0|St[15];const n=e.key?e.key.length:0;if(this.v0l^=this.outputLen|n<<8|65536|1<<24,e.salt){const n=wt(xt(e.salt));this.v4l^=n[0],this.v4h^=n[1],this.v5l^=n[2],this.v5h^=n[3]}if(e.personalization){const n=wt(xt(e.personalization));this.v6l^=n[0],this.v6h^=n[1],this.v7l^=n[2],this.v7h^=n[3]}if(e.key){const n=new Uint8Array(this.blockLen);n.set(xt(e.key)),this.update(n)}}get(){let{v0l:e,v0h:n,v1l:t,v1h:r,v2l:a,v2h:o,v3l:i,v3h:s,v4l:l,v4h:c,v5l:u,v5h:d,v6l:f,v6h:p,v7l:h,v7h:m}=this;return[e,n,t,r,a,o,i,s,l,c,u,d,f,p,h,m]}set(e,n,t,r,a,o,i,s,l,c,u,d,f,p,h,m){this.v0l=0|e,this.v0h=0|n,this.v1l=0|t,this.v1h=0|r,this.v2l=0|a,this.v2h=0|o,this.v3l=0|i,this.v3h=0|s,this.v4l=0|l,this.v4h=0|c,this.v5l=0|u,this.v5h=0|d,this.v6l=0|f,this.v6h=0|p,this.v7l=0|h,this.v7h=0|m}compress(e,n,t){this.get().forEach(((e,n)=>zt[n]=e)),zt.set(St,16);let{h:r,l:a}=Tt.fromBig(BigInt(this.length));zt[24]=St[8]^a,zt[25]=St[9]^r,t&&(zt[28]=~zt[28],zt[29]=~zt[29]);let o=0;const i=Ct;for(let t=0;t<12;t++)Nt(0,4,8,12,e,n+2*i[o++]),Lt(0,4,8,12,e,n+2*i[o++]),Nt(1,5,9,13,e,n+2*i[o++]),Lt(1,5,9,13,e,n+2*i[o++]),Nt(2,6,10,14,e,n+2*i[o++]),Lt(2,6,10,14,e,n+2*i[o++]),Nt(3,7,11,15,e,n+2*i[o++]),Lt(3,7,11,15,e,n+2*i[o++]),Nt(0,5,10,15,e,n+2*i[o++]),Lt(0,5,10,15,e,n+2*i[o++]),Nt(1,6,11,12,e,n+2*i[o++]),Lt(1,6,11,12,e,n+2*i[o++]),Nt(2,7,8,13,e,n+2*i[o++]),Lt(2,7,8,13,e,n+2*i[o++]),Nt(3,4,9,14,e,n+2*i[o++]),Lt(3,4,9,14,e,n+2*i[o++]);this.v0l^=zt[0]^zt[16],this.v0h^=zt[1]^zt[17],this.v1l^=zt[2]^zt[18],this.v1h^=zt[3]^zt[19],this.v2l^=zt[4]^zt[20],this.v2h^=zt[5]^zt[21],this.v3l^=zt[6]^zt[22],this.v3h^=zt[7]^zt[23],this.v4l^=zt[8]^zt[24],this.v4h^=zt[9]^zt[25],this.v5l^=zt[10]^zt[26],this.v5h^=zt[11]^zt[27],this.v6l^=zt[12]^zt[28],this.v6h^=zt[13]^zt[29],this.v7l^=zt[14]^zt[30],this.v7h^=zt[15]^zt[31],zt.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Ot=function(e){const n=(n,t)=>e(t).update(xt(n)).digest(),t=e({});return n.outputLen=t.outputLen,n.blockLen=t.blockLen,n.create=n=>e(n),n}((e=>new Bt(e))),Ht="0123456789abcdef",Ut=new Array(256),Rt=new Array(65536);for(let e=0;e<Ht.length;e++)Ut[0|Ht[e].charCodeAt(0)]=0|e,e>9&&(Ut[0|Ht[e].toUpperCase().charCodeAt(0)]=0|e);for(let e=0;e<256;e++){const n=e<<8;for(let t=0;t<256;t++)Rt[n|t]=Ut[e]<<4|Ut[t]}const Ft="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this");function jt(e,n){return void 0===Ft[e]?n:Ft[e]}const Xt="function"==typeof Ft.BigInt&&"function"==typeof Ft.BigInt.asIntN?Ft.BigInt:()=>Number.NaN,Mt="function"==typeof Xt&&"function"==typeof Xt.asIntN,Zt="undefined"!=typeof Buffer,Gt=/^0x[\da-fA-F]+$/;function Yt(e,n=-1,t){return"string"==typeof e&&("0x"===e||Gt.test(e))&&(-1===n?t||e.length%2==0:e.length===2+Math.ceil(n/4))}function It(e){return(e&&e.constructor)===Uint8Array||e instanceof Uint8Array}const Wt=new(jt("TextEncoder",class{encode(e){const n=new Uint8Array(e.length);for(let t=0;t<e.length;t++)n[t]=e.charCodeAt(t);return n}}));function Dt(e){return e?Wt.encode(e.toString()):new Uint8Array}function Vt(e){return It(e)?e:Yt(e)?function(e,n=-1){if(!e)return new Uint8Array;let t=e.startsWith("0x")?2:0;const r=Math.ceil((e.length-t)/2),a=Math.ceil(-1===n?r:n/8),o=new Uint8Array(a);for(let n=a>r?a-r:0;n<a;n++,t+=2)o[n]=Rt[e.charCodeAt(t)<<8|e.charCodeAt(t+1)];return o}(e):function(e){return Zt&&function(e){return"function"==typeof e}(e&&e.readDoubleLE)&&Buffer.isBuffer(e)}(e)||Array.isArray(e)?new Uint8Array(e):Dt(e)}const qt=new(jt("TextDecoder",class{constructor(e){}decode(e){let n="";for(let t=0;t<e.length;t++)n+=String.fromCharCode(e[t]);return n}}))("utf-8");function Kt(e){return e?qt.decode(e):""}const Jt={getRandomValues:function(e){return Ft.crypto.getRandomValues(e)}},Qt={crypto:Jt};class _t{#e;constructor(e){this.#e=e}abort=()=>{throw new Error("abort")};__wbindgen_is_undefined=e=>void 0===this.#e.getObject(e);__wbindgen_throw=(e,n)=>{throw new Error(this.#e.getString(e,n))};__wbg_self_1b7a39e3a92c949c=()=>this.#e.addObject(Qt);__wbg_require_604837428532a733=(e,n)=>{throw new Error(`Unable to require ${this.#e.getString(e,n)}`)};__wbg_crypto_968f1772287e2df0=e=>this.#e.addObject(Jt);__wbg_getRandomValues_a3d34b4fee3c2869=e=>this.#e.addObject(Jt.getRandomValues);__wbg_getRandomValues_f5e14ab7ac8e995d=(e,n,t)=>{Jt.getRandomValues(this.#e.getU8a(n,t))};__wbg_randomFillSync_d5bd2d655fdf256a=(e,n,t)=>{throw new Error("randomFillsync is not available")};__wbindgen_object_drop_ref=e=>{this.#e.takeObject(e)}}const $t=Uint8Array,er=Uint16Array,nr=Uint32Array,tr=new $t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),rr=new $t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ar=new $t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),or=(e,n)=>{const t=new er(31);for(let r=0;r<31;++r)t[r]=n+=1<<e[r-1];const r=new nr(t[30]);for(let e=1;e<30;++e)for(let n=t[e];n<t[e+1];++n)r[n]=n-t[e]<<5|e;return[t,r]},[ir,sr]=or(rr,2);ir[28]=258,sr[258]=28;const[lr]=or(ar,0),cr=new er(32768);for(let e=0;e<32768;++e){let n=(43690&e)>>>1|(21845&e)<<1;n=(52428&n)>>>2|(13107&n)<<2,n=(61680&n)>>>4|(3855&n)<<4,cr[e]=((65280&n)>>>8|(255&n)<<8)>>>1}const ur=(e,n,t)=>{const r=e.length;let a=0;const o=new er(n);for(;a<r;++a)++o[e[a]-1];const i=new er(n);for(a=0;a<n;++a)i[a]=i[a-1]+o[a-1]<<1;let s;if(t){s=new er(1<<n);const t=15-n;for(a=0;a<r;++a)if(e[a]){const r=a<<4|e[a],o=n-e[a];let l=i[e[a]-1]++<<o;for(const e=l|(1<<o)-1;l<=e;++l)s[cr[l]>>>t]=r}}else for(s=new er(r),a=0;a<r;++a)s[a]=cr[i[e[a]-1]++]>>>15-e[a];return s},dr=new $t(288);for(let e=0;e<144;++e)dr[e]=8;for(let e=144;e<256;++e)dr[e]=9;for(let e=256;e<280;++e)dr[e]=7;for(let e=280;e<288;++e)dr[e]=8;const fr=new $t(32);for(let e=0;e<32;++e)fr[e]=5;const pr=ur(dr,9,1),hr=ur(fr,5,1),mr=(e,n,t)=>{const r=n>>>3;return(e[r]|e[r+1]<<8)>>>(7&n)&t},br=(e,n)=>{const t=n>>>3;return(e[t]|e[t+1]<<8|e[t+2]<<16)>>>(7&n)},gr=e=>{let n=e[0];for(let t=1;t<e.length;++t)e[t]>n&&(n=e[t]);return n},vr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",yr=new Array(256);for(let e=0;e<vr.length;e++)yr[vr.charCodeAt(e)]=e;var Ar=t(1218);const wr=(xr=function(e,n){const t=n.length;let r=0,a=0,o=-1;for(let i=0;o<t;i++)r=r<<6|yr[e.charCodeAt(i)],(a+=6)>=8&&(n[++o]=r>>>(a-=8)&255);return n}(Ar.bytes,new Uint8Array(Ar.lenIn)),Cr=new Uint8Array(Ar.lenOut),((e,n,t)=>{const r=!t||t.i;t||(t={});const a=e.length,o=!n||!r;n||(n=new $t(3*a));const i=e=>{let t=n.length;if(e>t){const r=new $t(Math.max(t<<1,e));r.set(n),n=r}};let s=t.f||0,l=t.p||0,c=t.b||0,u=t.l,d=t.d,f=t.m,p=t.n;if(s&&!u)return n;const h=a<<3;do{if(!u){t.f=s=mr(e,l,1);const b=mr(e,l+1,3);if(l+=3,!b){const s=((m=l)>>>3)+(7&m&&1)+4,u=e[s-4]|e[s-3]<<8,d=s+u;if(d>a){if(r)throw"unexpected EOF";break}o&&i(c+u),n.set(e.subarray(s,d),c),t.b=c+=u,t.p=l=d<<3;continue}if(1==b)u=pr,d=hr,f=9,p=5;else{if(2!=b)throw"invalid block type";{const n=mr(e,l,31)+257,t=mr(e,l+10,15)+4,a=n+mr(e,l+5,31)+1;l+=14;const o=new $t(a),i=new $t(19);for(let n=0;n<t;++n)i[tr[n]]=mr(e,l+3*n,7);l+=3*t;const s=gr(i),c=(1<<s)-1;if(!r&&l+a*(s+7)>h)break;const m=ur(i,s,1);for(let n=0;n<a;){const t=m[mr(e,l,c)];l+=15&t;const r=t>>>4;if(r<16)o[n++]=r;else{let t=0,a=0;for(16==r?(a=3+mr(e,l,3),l+=2,t=o[n-1]):17==r?(a=3+mr(e,l,7),l+=3):18==r&&(a=11+mr(e,l,127),l+=7);a--;)o[n++]=t}}const b=o.subarray(0,n),g=o.subarray(n);f=gr(b),p=gr(g),u=ur(b,f,1),d=ur(g,p,1)}}if(l>h)throw"unexpected EOF"}o&&i(c+131072);const b=(1<<f)-1,g=(1<<p)-1,v=f+p+18;for(;r||l+v<h;){const t=u[br(e,l)&b],r=t>>>4;if(l+=15&t,l>h)throw"unexpected EOF";if(!t)throw"invalid length/literal";if(r<256)n[c++]=r;else{if(256==r){u=void 0;break}{let t=r-254;if(r>264){const n=r-257,a=rr[n];t=mr(e,l,(1<<a)-1)+ir[n],l+=a}const a=d[br(e,l)&g],s=a>>>4;if(!a)throw"invalid distance";l+=15&a;let u=lr[s];if(s>3){const n=ar[s];u+=br(e,l)&(1<<n)-1,l+=n}if(l>h)throw"unexpected EOF";o&&i(c+131072);const f=c+t;for(;c<f;c+=4)n[c]=n[c-u],n[c+1]=n[c+1-u],n[c+2]=n[c+2-u],n[c+3]=n[c+3-u];c=f}}}t.l=u,t.p=l,t.b=c,u&&(s=1,t.m=f,t.d=d,t.n=p)}while(!s);var m;return c==n.length?n:((e,n,t)=>{(null==n||n<0)&&(n=0),(null==t||t>e.length)&&(t=e.length);const r=new(e instanceof er?er:e instanceof nr?nr:$t)(t-n);return r.set(e.subarray(n,t)),r})(n,0,c)})(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(xr),xr.subarray(2,-4)),Cr));var xr,Cr;const Er=function(e,n,t){return async e=>{const t={error:null,type:"none",wasm:null};try{if(!n||!n.length)throw new Error("No WebAssembly provided for initialization");if("object"!=typeof WebAssembly||"function"!=typeof WebAssembly.instantiate)throw new Error("WebAssembly is not available in your environment");const r=await WebAssembly.instantiate(n,{wbg:e});t.wasm=r.instance.exports,t.type="wasm"}catch(e){t.error=`FATAL: Unable to initialize @polkadot/wasm-crypto:: ${e.message}`,console.error(t.error)}return t}}(0,wr),Pr=new class{#n;#t;#r;#a;#o;#i;#s;#l;#c;#u;constructor(e){this.#r=e,this.#n=null,this.#t=null,this.#a=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.#o=this.#a.length,this.#u="none",this.#i=null,this.#s=null,this.#l=null,this.#c={...new _t(this)}}get error(){return this.#s}get type(){return this.#u}get wasm(){return this.#i}async init(e){this.#l&&!e||(this.#l=(e||this.#r)(this.#c));const{error:n,type:t,wasm:r}=await this.#l;return this.#u=t,this.#i=r,this.#s=n,this.#i}getObject(e){return this.#a[e]}dropObject(e){e<36||(this.#a[e]=this.#o,this.#o=e)}takeObject(e){const n=this.getObject(e);return this.dropObject(e),n}addObject(e){this.#o===this.#a.length&&this.#a.push(this.#a.length+1);const n=this.#o;return this.#o=this.#a[n],this.#a[n]=e,n}getInt32(){return null!==this.#n&&this.#n.buffer===this.#i.memory.buffer||(this.#n=new Int32Array(this.#i.memory.buffer)),this.#n}getUint8(){return null!==this.#t&&this.#t.buffer===this.#i.memory.buffer||(this.#t=new Uint8Array(this.#i.memory.buffer)),this.#t}getU8a(e,n){return this.getUint8().subarray(e/1,e/1+n)}getString(e,n){return Kt(this.getU8a(e,n))}allocU8a(e){const n=this.#i.__wbindgen_malloc(1*e.length);return this.getUint8().set(e,n/1),[n,e.length]}allocString(e){return this.allocU8a(Dt(e))}resultU8a(){const e=this.getInt32()[2],n=this.getInt32()[3],t=this.getU8a(e,n).slice();return this.#i.__wbindgen_free(e,1*n),t}resultString(){return Kt(this.resultU8a())}}(Er);function kr(e){return(...n)=>{if(!Pr.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return e(Pr.wasm,...n)}}kr(((e,n)=>(e.ext_bip39_generate(8,n),Pr.resultString()))),kr(((e,n)=>(e.ext_bip39_to_entropy(8,...Pr.allocString(n)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_bip39_to_mini_secret(8,...Pr.allocString(n),...Pr.allocString(t)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_bip39_to_seed(8,...Pr.allocString(n),...Pr.allocString(t)),Pr.resultU8a()))),kr(((e,n)=>0!==e.ext_bip39_validate(...Pr.allocString(n)))),kr(((e,n)=>(e.ext_ed_from_seed(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n,t,r)=>(e.ext_ed_sign(8,...Pr.allocU8a(n),...Pr.allocU8a(t),...Pr.allocU8a(r)),Pr.resultU8a()))),kr(((e,n,t,r)=>0!==e.ext_ed_verify(...Pr.allocU8a(n),...Pr.allocU8a(t),...Pr.allocU8a(r)))),kr(((e,n)=>(e.ext_secp_from_seed(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n)=>(e.ext_secp_pub_compress(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n)=>(e.ext_secp_pub_expand(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n,t,r)=>(e.ext_secp_recover(8,...Pr.allocU8a(n),...Pr.allocU8a(t),r),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_secp_sign(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_sr_derive_keypair_hard(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_sr_derive_keypair_soft(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_sr_derive_public_soft(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n)=>(e.ext_sr_from_seed(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n,t,r)=>(e.ext_sr_sign(8,...Pr.allocU8a(n),...Pr.allocU8a(t),...Pr.allocU8a(r)),Pr.resultU8a()))),kr(((e,n,t,r)=>0!==e.ext_sr_verify(...Pr.allocU8a(n),...Pr.allocU8a(t),...Pr.allocU8a(r)))),kr(((e,n,t)=>(e.ext_sr_agree(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n,t,r,a)=>(e.ext_vrf_sign(8,...Pr.allocU8a(n),...Pr.allocU8a(t),...Pr.allocU8a(r),...Pr.allocU8a(a)),Pr.resultU8a()))),kr(((e,n,t,r,a,o)=>0!==e.ext_vrf_verify(...Pr.allocU8a(n),...Pr.allocU8a(t),...Pr.allocU8a(r),...Pr.allocU8a(a),...Pr.allocU8a(o))));const Tr=kr(((e,n,t,r)=>(e.ext_blake2b(8,...Pr.allocU8a(n),...Pr.allocU8a(t),r),Pr.resultU8a())));kr(((e,n,t)=>(e.ext_hmac_sha256(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_hmac_sha512(8,...Pr.allocU8a(n),...Pr.allocU8a(t)),Pr.resultU8a()))),kr(((e,n)=>(e.ext_keccak256(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n)=>(e.ext_keccak512(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n,t,r)=>(e.ext_pbkdf2(8,...Pr.allocU8a(n),...Pr.allocU8a(t),r),Pr.resultU8a()))),kr(((e,n,t,r,a,o)=>(e.ext_scrypt(8,...Pr.allocU8a(n),...Pr.allocU8a(t),r,a,o),Pr.resultU8a()))),kr(((e,n)=>(e.ext_sha256(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n)=>(e.ext_sha512(8,...Pr.allocU8a(n)),Pr.resultU8a()))),kr(((e,n,t)=>(e.ext_twox(8,...Pr.allocU8a(n),t),Pr.resultU8a())));const Sr=new Array(256),zr=new Array(65536);for(let e=0;e<256;e++)Sr[e]=e.toString(16).padStart(2,"0");for(let e=0;e<256;e++){const n=e<<8;for(let t=0;t<256;t++)zr[n|t]=Sr[e]+Sr[t]}function Nr(e,n=256,t,r){const a=Math.ceil(n/8),o=Vt(e);return!Mt||!r&&Pr.wasm?Tr(o,Vt(t),a):Ot(o,{dkLen:a,key:t||void 0})}function Lr(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function Br(...e){const n=(e,n)=>t=>e(n(t));return{encode:Array.from(e).reverse().reduce(((e,t)=>e?n(e,t.encode):t.encode),void 0),decode:e.reduce(((e,t)=>e?n(e,t.decode):t.decode),void 0)}}function Or(e){return{encode:n=>{if(!Array.isArray(n)||n.length&&"number"!=typeof n[0])throw new Error("alphabet.encode input should be an array of numbers");return n.map((n=>{if(Lr(n),n<0||n>=e.length)throw new Error(`Digit index outside alphabet: ${n} (alphabet: ${e.length})`);return e[n]}))},decode:n=>{if(!Array.isArray(n)||n.length&&"string"!=typeof n[0])throw new Error("alphabet.decode input should be array of strings");return n.map((n=>{if("string"!=typeof n)throw new Error(`alphabet.decode: not string element=${n}`);const t=e.indexOf(n);if(-1===t)throw new Error(`Unknown letter: "${n}". Allowed: ${e}`);return t}))}}}function Hr(e=""){if("string"!=typeof e)throw new Error("join separator should be string");return{encode:n=>{if(!Array.isArray(n)||n.length&&"string"!=typeof n[0])throw new Error("join.encode input should be array of strings");for(let e of n)if("string"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return n.join(e)},decode:n=>{if("string"!=typeof n)throw new Error("join.decode input should be string");return n.split(e)}}}function Ur(e,n="="){if(Lr(e),"string"!=typeof n)throw new Error("padding chr should be string");return{encode(t){if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("padding.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;t.length*e%8;)t.push(n);return t},decode(t){if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("padding.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let r=t.length;if(r*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;r>0&&t[r-1]===n;r--)if(!((r-1)*e%8))throw new Error("Invalid padding: string has too much padding");return t.slice(0,r)}}}function Rr(e){if("function"!=typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:n=>e(n)}}function Fr(e,n,t){if(n<2)throw new Error(`convertRadix: wrong from=${n}, base cannot be less than 2`);if(t<2)throw new Error(`convertRadix: wrong to=${t}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let r=0;const a=[],o=Array.from(e);for(o.forEach((e=>{if(Lr(e),e<0||e>=n)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,i=!0;for(let a=r;a<o.length;a++){const s=o[a],l=n*e+s;if(!Number.isSafeInteger(l)||n*e/n!==e||l-s!=n*e)throw new Error("convertRadix: carry overflow");if(e=l%t,o[a]=Math.floor(l/t),!Number.isSafeInteger(o[a])||o[a]*t+e!==l)throw new Error("convertRadix: carry overflow");i&&(o[a]?i=!1:r=a)}if(a.push(e),i)break}for(let n=0;n<e.length-1&&0===e[n];n++)a.push(0);return a.reverse()}const jr=(e,n)=>n?jr(n,e%n):e,Xr=(e,n)=>e+(n-jr(e,n));function Mr(e,n,t,r){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(n<=0||n>32)throw new Error(`convertRadix2: wrong from=${n}`);if(t<=0||t>32)throw new Error(`convertRadix2: wrong to=${t}`);if(Xr(n,t)>32)throw new Error(`convertRadix2: carry overflow from=${n} to=${t} carryBits=${Xr(n,t)}`);let a=0,o=0;const i=2**t-1,s=[];for(const r of e){if(Lr(r),r>=2**n)throw new Error(`convertRadix2: invalid data word=${r} from=${n}`);if(a=a<<n|r,o+n>32)throw new Error(`convertRadix2: carry overflow pos=${o} from=${n}`);for(o+=n;o>=t;o-=t)s.push((a>>o-t&i)>>>0);a&=2**o-1}if(a=a<<t-o&i,!r&&o>=n)throw new Error("Excess padding");if(!r&&a)throw new Error(`Non-zero padding: ${a}`);return r&&o>0&&s.push(a>>>0),s}function Zr(e,n=!1){if(Lr(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(Xr(8,e)>32||Xr(e,8)>32)throw new Error("radix2: carry overflow");return{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return Mr(Array.from(t),8,e,!n)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(Mr(t,e,8,n))}}}function Gr(e){if("function"!=typeof e)throw new Error("unsafeWrapper fn should be function");return function(...n){try{return e.apply(null,n)}catch(e){}}}const Yr=Br(Zr(4),Or("0123456789ABCDEF"),Hr("")),Ir=Br(Zr(5),Or("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),Ur(5),Hr("")),Wr=(Br(Zr(5),Or("0123456789ABCDEFGHIJKLMNOPQRSTUV"),Ur(5),Hr("")),Br(Zr(5),Or("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),Hr(""),Rr((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),Br(Zr(6),Or("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),Ur(6),Hr(""))),Dr=Br(Zr(6),Or("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),Ur(6),Hr("")),Vr=e=>{return Br((Lr(n=58),{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return Fr(Array.from(e),256,n)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(Fr(e,n,256))}}),Or(e),Hr(""));var n},qr=Vr("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),Kr=(Vr("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),Vr("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),[0,2,3,5,6,7,9,10,11]),Jr={encode(e){let n="";for(let t=0;t<e.length;t+=8){const r=e.subarray(t,t+8);n+=qr.encode(r).padStart(Kr[r.length],"1")}return n},decode(e){let n=[];for(let t=0;t<e.length;t+=11){const r=e.slice(t,t+11),a=Kr.indexOf(r.length),o=qr.decode(r);for(let e=0;e<o.length-a;e++)if(0!==o[e])throw new Error("base58xmr: wrong padding");n=n.concat(Array.from(o.slice(o.length-a)))}return Uint8Array.from(n)}},Qr=Br(Or("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),Hr("")),_r=[996825010,642813549,513874426,1027748829,705979059];function $r(e){const n=e>>25;let t=(33554431&e)<<5;for(let e=0;e<_r.length;e++)1==(n>>e&1)&&(t^=_r[e]);return t}function ea(e,n,t=1){const r=e.length;let a=1;for(let n=0;n<r;n++){const t=e.charCodeAt(n);if(t<33||t>126)throw new Error(`Invalid prefix (${e})`);a=$r(a)^t>>5}a=$r(a);for(let n=0;n<r;n++)a=$r(a)^31&e.charCodeAt(n);for(let e of n)a=$r(a)^e;for(let e=0;e<6;e++)a=$r(a);return a^=t,Qr.encode(Mr([a%2**30],30,5,!1))}function na(e){const n="bech32"===e?1:734539939,t=Zr(5),r=t.decode,a=t.encode,o=Gr(r);function i(e,t=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==t&&e.length>t)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${t})`);const r=e.toLowerCase();if(e!==r&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const a=(e=r).lastIndexOf("1");if(0===a||-1===a)throw new Error('Letter "1" must be present between prefix and data only');const o=e.slice(0,a),i=e.slice(a+1);if(i.length<6)throw new Error("Data must be at least 6 characters long");const s=Qr.decode(i).slice(0,-6),l=ea(o,s,n);if(!i.endsWith(l))throw new Error(`Invalid checksum in ${e}: expected "${l}"`);return{prefix:o,words:s}}return{encode:function(e,t,r=90){if("string"!=typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof t);const a=e.length+7+t.length;if(!1!==r&&a>r)throw new TypeError(`Length ${a} exceeds limit ${r}`);return`${e=e.toLowerCase()}1${Qr.encode(t)}${ea(e,t,n)}`},decode:i,decodeToBytes:function(e){const{prefix:n,words:t}=i(e,!1);return{prefix:n,words:t,bytes:r(t)}},decodeUnsafe:Gr(i),fromWords:r,fromWordsUnsafe:o,toWords:a}}na("bech32"),na("bech32m");const ta={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},ra={utf8:ta,hex:Br(Zr(4),Or("0123456789abcdef"),Hr(""),Rr((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}))),base16:Yr,base32:Ir,base64:Wr,base64url:Dr,base58:qr,base58xmr:Jr};Object.keys(ra).join(", ");const aa={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:qr,ipfs:"z",type:"base58"},oa=function({chars:e,ipfs:n,type:t}){return(r,a)=>{if(!r||"string"!=typeof r)throw new Error(`Expected non-null, non-empty ${t} string input`);if(n&&a&&r[0]!==n)throw new Error(`Expected ipfs-compatible ${t} to start with '${n}'`);for(let n=a?1:0;n<r.length;n++)if(!e.includes(r[n])&&("="!==r[n]||n!==r.length-1&&e.includes(r[n+1])))throw new Error(`Invalid ${t} character "${r[n]}" (0x${r.charCodeAt(n).toString(16)}) at index ${n}`);return!0}}(aa),ia=function({coder:e,ipfs:n},t){return(r,a)=>(t(r,a),e.decode(n&&a?r.substring(1):r))}(aa,oa);const sa=Dt("SS58PRE");function la(e){const n=64&e[0]?2:1,t=1===n?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,r=[34+n,35+n].includes(e.length),a=e.length-(r?2:1),o=(i=e.subarray(0,a),Nr(function(...e){const n=new Array(e.length);let t=0;for(let r=0;r<e.length;r++)n[r]=Vt(e[r]),t+=n[r].length;return function(e,n=0){let t=0;if(!n)for(let t=0;t<e.length;t++)n+=e[t].length;const r=new Uint8Array(n);for(let n=0;n<e.length;n++)r.set(e[n],t),t+=e[n].length;return r}(n,t)}(sa,i),512));var i;return[0==(128&e[0])&&![46,47].includes(e[0])&&(r?e[e.length-2]===o[0]&&e[e.length-1]===o[1]:e[e.length-1]===o[0]),a,n,t]}const ca={acala:787,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,"interlay-parachain":354,karura:686,kusama:434,"nodle-para":1003,parallel:354,polkadex:799,polkadot:354,polymesh:595,sora:617,stafi:907,statemine:434,statemint:354,unique:354,xxnetwork:1955},ua={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-para":["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]},da={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},fa={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},pa=[0,2,42],ha=["testnet"],ma=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"apex",displayName:"Apex Network",symbols:["APEX"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2114,network:"Turing",displayName:"Turing Network",symbols:["TUR"],decimals:[10],standardAccount:"*25519",website:"https://oak.tech/turing/home/"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2208,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:3e3,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:4e3,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:4006,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.webb.tools/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"}].map((function(e){const n=e.network||"",t=n.replace(/_/g,"-").split("-"),r=e;return r.slip44=ca[n],r.hasLedgerSupport=!!r.slip44,r.genesisHash=ua[n]||[],r.icon=da[n]||"substrate",r.isTestnet=!!fa[n]||ha.includes(t[t.length-1]),r.isIgnored=r.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,r})).filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,n){const t=pa.includes(e.prefix);return t===pa.includes(n.prefix)?t?0:e.displayName.localeCompare(n.displayName):t?-1:1})),ba=(ma.filter((function({genesisHash:e,prefix:n}){return!!e.length||42===n})),{allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:ma.map((({prefix:e})=>e)),prefix:42}),ga=e=>Nr(e,512),va=32,ya=ga(new Uint8Array(32)),Aa=[{freq:1,colors:[0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,0,28,0,1]},{freq:20,colors:[0,1,3,2,4,3,0,1,3,2,4,3,0,1,3,2,4,3,5]},{freq:16,colors:[1,2,3,1,2,4,5,5,4,1,2,3,1,2,4,5,5,4,0]},{freq:32,colors:[0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,0,1,2,3]},{freq:32,colors:[0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5,6]},{freq:128,colors:[0,1,2,3,4,5,3,4,2,0,1,6,7,8,9,7,8,6,10]},{freq:128,colors:[0,1,2,3,4,5,6,7,8,9,10,8,6,7,5,3,4,2,11]}],wa={cx:va,cy:va,r:va,fill:"#eee"};function xa(e){const n=Aa.map((e=>e.freq)).reduce(((e,n)=>e+n)),t=function(e){return ga(function(e,n,t=-1){if(!e)throw new Error("Invalid empty address passed");if(It(e)||Yt(e))return Vt(e);try{const r=ia(e);if(!ba.allowedEncodedLengths.includes(r.length))throw new Error("Invalid decoded address length");const[a,o,i,s]=la(r);if(!a&&!n)throw new Error("Invalid decoded address checksum");if(-1!==t&&t!==s)throw new Error(`Expected ss58Format ${t}, received ${s}`);return r.slice(i,o)}catch(n){throw new Error(`Decoding ${e}: ${n.message}`)}}(e)).map(((e,n)=>(e+256-ya[n])%256))}(e),r=Math.floor((t[30]+256*t[31])%n),a=t[28]%6*3,o=Math.floor(70*t[29]/256+26)%80+30,i=function(e){let n=0;const t=Aa.find((t=>(n+=t.freq,e<n)));if(!t)throw new Error("Unable to find schema");return t}(r),s=Array.from(t).map(((e,n)=>{const t=(e+n%28*58)%256;if(0===t)return"#444";if(255===t)return"transparent";const r=Math.floor(t%64*360/64),a=[53,15,35,75][Math.floor(t/64)];return`hsl(${r}, ${o}%, ${a}%)`}));return i.colors.map(((e,n)=>s[i.colors[n<18?(n+a)%18:18]]))}const Ca=new Set;function Ea(e){if(!Ca.has(e)){Ca.add(e);const n=document.createElementNS(j,"symbol");n.setAttribute("id",e),n.setAttribute("viewBox","0 0 64 64"),function(e,n=!1){let t=[];try{t=xa(e)}catch(n){console.error(`Error decoding address to generate validator icon for: ${e} (${n})`)}return[wa].concat(function(e){const{r:n,ro2:t,r3o4:r,ro4:a,rroot3o2:o,rroot3o4:i}=function(e){const n=e?20:24;return{r:n,ro2:n/2,r3o4:3*n/4,ro4:n/4,rroot3o2:n*Math.sqrt(3)/2,rroot3o4:n*Math.sqrt(3)/4}}(e);return[[va,va-n],[va,va-t],[va-i,va-r],[va-o,va-t],[va-i,va-a],[va-o,va],[va-o,va+t],[va-i,va+a],[va-i,va+r],[va,va+n],[va,va+t],[va+i,va+r],[va+o,va+t],[va+i,va+a],[va+o,va],[va+o,va-t],[va+i,va-a],[va+i,va-r],[va,va]]}(n).map((([e,n],r)=>({cx:e,cy:n,r:5,fill:t[r]||"rgb(255,255,255)"}))))}(e,!1).forEach((({cx:e,cy:t,r,fill:a})=>{const o=document.createElementNS(j,"circle");o.setAttribute("cx",String(e)),o.setAttribute("cy",String(t)),o.setAttribute("r",String(r)),o.setAttribute("fill",a),n.appendChild(o)})),X().appendChild(n)}}class Pa extends e.Component{shouldComponentUpdate(e){return this.props.account!==e.account||this.props.size!==e.size}render(){const{account:n,size:t,className:r}=this.props;return Ea(n),e.createElement("svg",{width:t,height:t,className:r},e.createElement("use",{href:`#${n}`}))}}const ka={"0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe":2,"0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3":1};class Ta{static compare(e,n){if(e.pinned!==n.pinned||e.stale!==n.stale){const t=(n.pinned?-2:0)+ +n.stale;return(e.pinned?-2:0)+ +e.stale-t}return e.height===n.height?(null==e.propagationTime?1/0:e.propagationTime)-(null==n.propagationTime?1/0:n.propagationTime):n.height-e.height}constructor(e,n,t,r,a,o,i,s,l){this.finalized=0,this.finalizedHash="",this._changeRef=0,this.subscriptionsConsensus=new Set;const[c,u,d,f,p]=t;this.pinned=e,this.id=n,this.name=c,this.implementation=u,this.version=d,this.validator=f,this.networkId=p,this.startupTime=l;const[h=0,m=0,b=0]=(d||"0.0.0").split(".").map((e=>0|parseInt(e,10)));this.sortableName=c.toLocaleLowerCase(),this.sortableVersion=1e3*h+100*m+b|0,this.updateStats(r),this.updateIO(a),this.updateHardware(o),this.updateBlock(i),s&&this.updateLocation(s)}updateStats(e){const[n,t]=e;this.peers=n,this.txs=t,this.trigger()}updateIO(e){const[n]=e;this.stateCacheSize=n,this.trigger()}updateHardware(e){const[n,t,r]=e;this.upload=n,this.download=t,this.chartstamps=r,this.trigger()}updateBlock(e){const[n,t,r,a,o]=e;this.height=n,this.hash=t,this.blockTime=r,this.blockTimestamp=a,this.propagationTime=o,this.stale=!1,this.trigger()}updateFinalized(e,n){this.finalized=e,this.finalizedHash=n}updateLocation(e){const[n,t,r]=e;this.lat=n,this.lon=t,this.city=r,this.trigger()}newBestBlock(){null!=this.propagationTime&&(this.propagationTime=null,this.trigger())}setPinned(e){this.pinned!==e&&(this.pinned=e,this.trigger())}setStale(e){this.stale!==e&&(this.stale=e,this.trigger())}get changeRef(){return this._changeRef}trigger(){this._changeRef+=1}}var Sa=function(e,n,t,r){return new(t||(t=Promise))((function(a,o){function i(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,s)}l((r=r.apply(e,n||[])).next())}))};class za{static create(e,n,t){return Sa(this,void 0,void 0,(function*(){return new za(yield za.socket(),n,t,e)}))}static getAddress(){var e;const n="SUBSTRATE_TELEMETRY_URL";return(null===(e=window.process_env)||void 0===e?void 0:e[n])?window.process_env[n]:"https:"===window.location.protocol?`wss://marvin.${window.location.hostname}/feed/`:"ws://127.0.0.1:8000/feed"}static socket(){return Sa(this,void 0,void 0,(function*(){let e=yield za.trySocket(),n=5e3;for(;!e;)yield r(n),n=Math.min(2*n,3e5),e=yield za.trySocket();return e}))}static trySocket(){return Sa(this,void 0,void 0,(function*(){return new Promise((e=>{function n(){a.removeEventListener("open",t),a.removeEventListener("close",r),a.removeEventListener("error",r)}function t(){n(),e(a)}function r(){n(),e(null)}const a=new WebSocket(za.address);a.binaryType="arraybuffer",a.addEventListener("open",t),a.addEventListener("error",r),a.addEventListener("close",r)}))}))}constructor(e,n,t,r){this.socket=e,this.appState=n,this.appUpdate=t,this.pins=r,this.messageTimeout=null,this.pingId=0,this.pingSent=null,this.resubscribeTo=U().chain,this.handleMessages=e=>{var n;null===(n=this.messageTimeout)||void 0===n||n.reset();const{nodes:t,chains:r,sortBy:o,selectedColumns:i}=this.appState,s=t.ref;let l=null;null!=o&&(l=o<0?i[~o]:i[o]);for(const n of e)switch(n.action){case 0:if(32!==n.payload)return this.newVersion();break;case 1:{const[e,r,a]=n.payload;t.mutEach((e=>e.newBestBlock())),this.appUpdate({best:e,blockTimestamp:r,blockAverage:a});break}case 2:{const[e]=n.payload;this.appUpdate({finalized:e});break}case 3:{const[e,r,a,o,i,s,l,c]=n.payload,u=this.pins.has(r[0]),d=new Ta(u,e,r,a,o,i,s,l,c);t.add(d);break}case 4:{const e=n.payload;t.remove(e);break}case 20:{const e=n.payload;t.mutAndSort(e,(e=>e.setStale(!0)));break}case 5:{const[e,r,a,o]=n.payload;t.mutAndMaybeSort(e,(e=>e.updateLocation([r,a,o])),l===we);break}case 6:{const[e,r]=n.payload;t.mutAndSort(e,(e=>e.updateBlock(r)));break}case 7:{const[e,r,a]=n.payload;t.mutAndMaybeSort(e,(e=>e.updateFinalized(r,a)),l===ln||l===cn);break}case 8:{const[e,r]=n.payload;t.mutAndMaybeSort(e,(e=>e.updateStats(r)),l===Ke||l===Qe);break}case 9:{const[e,r]=n.payload;t.mutAndMaybeSort(e,(e=>e.updateHardware(r)),l===$e||l===nn);break}case 21:{const[e,r]=n.payload;t.mutAndMaybeSort(e,(e=>e.updateIO(r)),l===rn);break}case 10:this.appUpdate({timeDiff:a()-n.payload});break;case 11:{const[e,t,a]=n.payload,o=r.get(t);o?o.nodeCount=a:r.set(t,{label:e,genesisHash:t,nodeCount:a}),this.appUpdate({chains:r});break}case 12:r.delete(n.payload),this.appState.subscribed===n.payload&&(t.clear(),this.appUpdate({subscribed:null,nodes:t,chains:r}));break;case 13:t.clear(),this.appUpdate({subscribed:n.payload,nodes:t});break;case 14:this.appState.subscribed===n.payload&&(t.clear(),this.appUpdate({subscribed:null,nodes:t}));break;case 15:this.pong(Number(n.payload));break;case 22:this.appUpdate({chainStats:n.payload})}t.hasChangedSince(s)&&this.appUpdate({nodes:t}),this.autoSubscribe()},this.ping=()=>{this.pingSent?this.handleDisconnect():(this.pingId+=1,this.pingSent=a(),this.socket.send(`ping:${this.pingId}`))},this.handleFeedData=e=>{let n;if("string"==typeof e.data)n=e.data;else{if(0===new Uint8Array(e.data)[0])return this.newVersion();n=za.utf8decoder.decode(e.data)}this.handleMessages(function(e){const n=o(e);if(!Array.isArray(n)||0===n.length||n.length%2!=0)throw new Error("Invalid FeedMessage.Data");const t=new Array(n.length/2);for(const e of t.keys()){const[r,a]=n.slice(2*e);t[e]={action:r,payload:a}}return t}(n))},this.handleDisconnect=()=>Sa(this,void 0,void 0,(function*(){console.warn("Disconnecting; will attempt reconnect"),this.appUpdate({status:"offline"}),this.clean(),this.socket.close(),this.socket=yield za.socket(),this.bindSocket()})),this.bindSocket()}subscribe(e){null!=this.appState.subscribed&&this.appState.subscribed!==e?(this.appUpdate({tab:"list"}),R({chain:e,tab:"list"})):R({chain:e}),this.socket.send(`subscribe:${e}`)}bindSocket(){if(console.log("Connected"),this.messageTimeout=function(e,n){let t=setTimeout(e,6e4);return{reset(){clearTimeout(t),t=setTimeout(e,6e4)},cancel(){clearTimeout(t)}}}(this.handleDisconnect),this.ping(),this.appState){const{nodes:e}=this.appState;e.clear()}this.appUpdate({status:"online"}),this.appState.subscribed&&(this.resubscribeTo=this.appState.subscribed,this.appUpdate({subscribed:null})),this.socket.addEventListener("message",this.handleFeedData),this.socket.addEventListener("close",this.handleDisconnect),this.socket.addEventListener("error",this.handleDisconnect)}pong(e){if(!this.pingSent)return console.error("Received a pong without sending a ping first"),void this.handleDisconnect();e!==this.pingId&&(console.error("pingId differs"),this.handleDisconnect());const n=a()-this.pingSent;console.log(`Ping latency: ${n}ms`),this.pingSent=null,this.pingTimeout=setTimeout(this.ping,Math.max(0,3e4-n))}newVersion(){this.appUpdate({status:"upgrade-requested"}),this.clean(),setTimeout((()=>window.location.reload()),3e3)}clean(){var e;clearTimeout(this.pingTimeout),this.pingSent=null,null===(e=this.messageTimeout)||void 0===e||e.cancel(),this.messageTimeout=null,this.socket.removeEventListener("message",this.handleFeedData),this.socket.removeEventListener("close",this.handleDisconnect),this.socket.removeEventListener("error",this.handleDisconnect)}autoSubscribe(){const{subscribed:e,chains:n}=this.appState,{resubscribeTo:t}=this;if(e)return;if(t&&n.has(t))return void this.subscribe(t);let r=null;for(const e of n.values()){if(1===ka[e.genesisHash]){r=e;break}(!r||e.nodeCount>r.nodeCount)&&(r=e)}r&&this.subscribe(r.genesisHash)}}za.utf8decoder=new TextDecoder("utf-8"),za.address=za.getAddress();class Na{constructor(e,n,t){this.key=e,this.onChange=t;const r=window.localStorage.getItem(e);if(r)try{this.value=o(r)}catch(e){this.value=n}else this.value=n;window.addEventListener("storage",(e=>{e.key===this.key&&(this.value=o(e.newValue),this.onChange(this.value))}))}get(){return this.value}set(e){this.value=e,window.localStorage.setItem(this.key,i(this.value)),this.onChange(this.value)}}class La{constructor(e,n,t){this.inner=new Na(e,n,t)}raw(){return this.inner.get()}get(e){return this.inner.get()[e]}set(e,n){const t=Object.assign({},this.raw());t[e]=n,this.inner.set(t)}}class Ba{constructor(e,n){this.inner=new Na(e,[],(e=>n(this.value=new Set(e)))),this.value=new Set(this.inner.get())}get(){return this.value}add(e){this.value.add(e),this.inner.set(Array.from(this.value))}delete(e){this.value.delete(e),this.inner.set(Array.from(this.value))}clear(){this.inner.set([])}has(e){return this.value.has(e)}}var Oa=t(9087),Ha={};Ha.styleTagTransform=x(),Ha.setAttributes=v(),Ha.insert=b().bind(null,"head"),Ha.domAPI=h(),Ha.insertStyleElement=A(),f()(Oa.Z,Ha),Oa.Z&&Oa.Z.locals&&Oa.Z.locals;class Ua extends e.Component{constructor(e){super(e),this.chainsCache=[],this.onKeyPress=e=>{if(9!==e.keyCode)return;e.preventDefault();const{subscribed:n}=this.appState,t=Array.from(this.appState.chains.keys());let r=0;n&&(r=(t.indexOf(n)+1)%t.length,t[r]===n)||this.connection.then((e=>{e.subscribe(t[r])}))},this.onHashChange=()=>{const{tab:e=""}=U();this.appUpdate({tab:e})},this.settings=new La("settings",{validator:!0,location:!0,implementation:!0,networkId:!1,peers:!0,txs:!0,cpu:!0,mem:!0,upload:!1,download:!1,stateCacheSize:!1,dbCacheSize:!1,diskRead:!1,diskWrite:!1,blocknumber:!0,blockhash:!0,blocktime:!0,finalized:!1,finalizedhash:!1,blockpropagation:!0,blocklasttime:!1,uptime:!1},(e=>{const n=this.selectedColumns(e);this.sortBy.set(null),this.appUpdate({settings:e,selectedColumns:n,sortBy:null})})),this.pins=new Ba("pinned_names",(e=>{const{nodes:n}=this.appState;n.mutEachAndSort((n=>n.setPinned(e.has(n.name)))),this.appUpdate({nodes:n,pins:e})})),this.sortBy=new Na("sortBy",null,(e=>{const n=this.getComparator(e);this.appState.nodes.setComparator(n),this.appUpdate({sortBy:e})}));const{tab:n=""}=U();this.appUpdate=function(e,n){let t=!1;return r=>(Object.assign(n,r),t||(t=!0,window.requestAnimationFrame((()=>{e.forceUpdate(),t=!1}))),n)}(this,{status:"offline",best:0,finalized:0,blockTimestamp:0,blockAverage:null,timeDiff:0,subscribed:null,chains:new Map,nodes:new c(Ta.compare),settings:this.settings.raw(),pins:this.pins.get(),sortBy:this.sortBy.get(),selectedColumns:this.selectedColumns(this.settings.raw()),tab:n,chainStats:null}),this.appState=this.appUpdate({});const t=this.getComparator(this.sortBy.get());this.appState.nodes.setComparator(t),this.connection=za.create(this.pins,this.appState,this.appUpdate),setInterval((()=>this.chainsCache=[]),1e4)}render(){const{timeDiff:n,subscribed:t,status:r,tab:a}=this.appState,o=this.chains(),i=t?this.appState.chains.get(t):null;if(et.timeDiff=n,0===o.length)return e.createElement("div",{className:"App App-no-telemetry"},e.createElement(ot,{status:r}),"Waiting for telemetry…");const s="all-chains"===a?e.createElement(P,{chains:o,subscribed:t,connection:this.connection}):null;return e.createElement("div",{className:"App"},e.createElement(ot,{status:r}),e.createElement(V,{chains:o,subscribedHash:t,subscribedData:i,connection:this.connection}),e.createElement(J,{appState:this.appState,appUpdate:this.appUpdate,connection:this.connection,settings:this.settings,pins:this.pins,sortBy:this.sortBy}),s)}componentDidMount(){window.addEventListener("keydown",this.onKeyPress),window.addEventListener("hashchange",this.onHashChange)}componentWillUnmount(){window.removeEventListener("keydown",this.onKeyPress),window.removeEventListener("hashchange",this.onHashChange)}chains(){return this.chainsCache.length===this.appState.chains.size||(this.chainsCache=Array.from(this.appState.chains.values()).sort(((e,n)=>{const t=function(e,n){return(ka[e]||1024)-(ka[n]||1024)}(e.genesisHash,n.genesisHash);return 0!==t?t:n.nodeCount-e.nodeCount}))),this.chainsCache}selectedColumns(e){return wn.columns.filter((({setting:n})=>null==n||e[n]))}getComparator(e){const n=this.appState.selectedColumns;if(null!=e){const[t,r]=e<0?[~e,-1]:[e,1],a=n[t];if(null!=a&&a.sortBy){const e=a.sortBy;return(n,t)=>{const a=e(n),o=e(t);return a<o?-1*r:a>o?1*r:Ta.compare(n,t)}}}return Ta.compare}}var Ra=t(1424),Fa={};Fa.styleTagTransform=x(),Fa.setAttributes=v(),Fa.insert=b().bind(null,"head"),Fa.domAPI=h(),Fa.insertStyleElement=A(),f()(Ra.Z,Fa),Ra.Z&&Ra.Z.locals&&Ra.Z.locals;const ja=document.getElementById("root");(0,n.s)(ja).render(e.createElement(Ua,null))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,